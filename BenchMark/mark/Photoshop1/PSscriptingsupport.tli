// Created by Microsoft (R) C/C++ Compiler Version 14.00.24210.0 (35b8ea0f).
//
// e:\work\testprj\photoshop\photoshop\debug\scriptingsupport.tli
//
// Wrapper implementations for Win32 type library D:\Program Files\Adobe\Adobe Photoshop CS6 (64 Bit)\Required\Plug-Ins\Extensions\ScriptingSupport.8li
// compiler-generated file created 09/26/17 at 14:08:18 - DO NOT EDIT!


//
// dispinterface _Application wrapper method implementations
//

#pragma implementation_key(1)
inline _bstr_t Photoshop::_Application::GetColorSettings ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x435a436e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2)
inline _bstr_t Photoshop::_Application::GetWinColorSettings ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x435a436d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3)
inline Photoshop::DocumentPtr Photoshop::_Application::GetActiveDocument ( ) {
    struct Document * _result = 0;
    _com_dispatch_method(this, 0x70414463, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DocumentPtr(_result, false);
}

#pragma implementation_key(4)
inline void Photoshop::_Application::PutActiveDocument ( struct Document * _arg1 ) {
    _com_dispatch_method(this, 0x70414463, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(5)
inline _bstr_t Photoshop::_Application::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x706e616d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6)
inline _bstr_t Photoshop::_Application::GetPath ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x70507468, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7)
inline Photoshop::PreferencesPtr Photoshop::_Application::GetPreferences ( ) {
    struct Preferences * _result = 0;
    _com_dispatch_method(this, 0x70507266, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return PreferencesPtr(_result, false);
}

#pragma implementation_key(8)
inline _bstr_t Photoshop::_Application::GetScriptingVersion ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x70537673, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9)
inline double Photoshop::_Application::GetFreeMemory ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x70464d4d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(10)
inline _bstr_t Photoshop::_Application::GetVersion ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x76657273, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(11)
inline VARIANT_BOOL Photoshop::_Application::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70555673, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(12)
inline void Photoshop::_Application::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70555673, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(13)
inline enum Photoshop::PsDialogModes Photoshop::_Application::GetDisplayDialogs ( ) {
    enum PsDialogModes _result;
    _com_dispatch_method(this, 0x4155694c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(14)
inline void Photoshop::_Application::PutDisplayDialogs ( enum PsDialogModes _arg1 ) {
    _com_dispatch_method(this, 0x4155694c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(15)
inline Photoshop::_SolidColorPtr Photoshop::_Application::GetForegroundColor ( ) {
    struct _SolidColor * _result = 0;
    _com_dispatch_method(this, 0x66674363, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _SolidColorPtr(_result, false);
}

#pragma implementation_key(16)
inline void Photoshop::_Application::PutForegroundColor ( struct _SolidColor * _arg1 ) {
    _com_dispatch_method(this, 0x66674363, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(17)
inline void Photoshop::_Application::PutRefForegroundColor ( struct _SolidColor * _arg1 ) {
    _com_dispatch_method(this, 0x66674363, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(18)
inline Photoshop::_SolidColorPtr Photoshop::_Application::GetBackgroundColor ( ) {
    struct _SolidColor * _result = 0;
    _com_dispatch_method(this, 0x62674363, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _SolidColorPtr(_result, false);
}

#pragma implementation_key(19)
inline void Photoshop::_Application::PutBackgroundColor ( struct _SolidColor * _arg1 ) {
    _com_dispatch_method(this, 0x62674363, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(20)
inline void Photoshop::_Application::PutRefBackgroundColor ( struct _SolidColor * _arg1 ) {
    _com_dispatch_method(this, 0x62674363, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(21)
inline VARIANT_BOOL Photoshop::_Application::GetNotifiersEnabled ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x454e3036, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(22)
inline void Photoshop::_Application::PutNotifiersEnabled ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x454e3036, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(23)
inline _variant_t Photoshop::_Application::GetWindowsFileTypes ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x776e6674, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(24)
inline _variant_t Photoshop::_Application::GetMacintoshFileTypes ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x6d746674, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(25)
inline _bstr_t Photoshop::_Application::GetPreferencesFolder ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7072666c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(26)
inline _bstr_t Photoshop::_Application::GetLocale ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6c63616c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(27)
inline Photoshop::DocumentsPtr Photoshop::_Application::GetDocuments ( ) {
    struct Documents * _result = 0;
    _com_dispatch_method(this, 0x646f6375, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DocumentsPtr(_result, false);
}

#pragma implementation_key(28)
inline Photoshop::TextFontsPtr Photoshop::_Application::GetFonts ( ) {
    struct TextFonts * _result = 0;
    _com_dispatch_method(this, 0x63466e74, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TextFontsPtr(_result, false);
}

#pragma implementation_key(29)
inline Photoshop::NotifiersPtr Photoshop::_Application::GetNotifiers ( ) {
    struct Notifiers * _result = 0;
    _com_dispatch_method(this, 0x454e3032, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return NotifiersPtr(_result, false);
}

#pragma implementation_key(30)
inline _bstr_t Photoshop::_Application::GetScriptingBuildDate ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x73626c64, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(31)
inline _variant_t Photoshop::_Application::GetRecentFiles ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x7263666c, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(32)
inline _bstr_t Photoshop::_Application::GetBuild ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x42696c64, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(33)
inline _bstr_t Photoshop::_Application::GetSystemInformation ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x53797349, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(34)
inline Photoshop::MeasurementLogPtr Photoshop::_Application::GetMeasurementLog ( ) {
    struct MeasurementLog * _result = 0;
    _com_dispatch_method(this, 0x4d4c3033, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return MeasurementLogPtr(_result, false);
}

#pragma implementation_key(35)
inline Photoshop::_ApplicationPtr Photoshop::_Application::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(36)
inline HRESULT Photoshop::_Application::DoAction ( _bstr_t Action, _bstr_t From ) {
    return _com_dispatch_method(this, 0x446f4163, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)Action, (BSTR)From);
}

#pragma implementation_key(37)
inline HRESULT Photoshop::_Application::Load ( _bstr_t Document ) {
    return _com_dispatch_method(this, 0x4c64536c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Document);
}

#pragma implementation_key(38)
inline Photoshop::DocumentPtr Photoshop::_Application::Open ( _bstr_t Document, const _variant_t & As, const _variant_t & AsSmartObject ) {
    struct Document * _result = 0;
    _com_dispatch_method(this, 0x5073434f, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x080c\x080c", (BSTR)Document, &As, &AsSmartObject);
    return DocumentPtr(_result, false);
}

#pragma implementation_key(39)
inline HRESULT Photoshop::_Application::Purge ( enum PsPurgeTarget Target ) {
    return _com_dispatch_method(this, 0x50757267, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Target);
}

#pragma implementation_key(40)
inline _bstr_t Photoshop::_Application::DoJavaScript ( _bstr_t JavaScriptCode, const _variant_t & Arguments, const _variant_t & ExecutionMode ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x446a7857, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0008\x080c\x080c", (BSTR)JavaScriptCode, &Arguments, &ExecutionMode);
    return _bstr_t(_result, false);
}

#pragma implementation_key(41)
inline _bstr_t Photoshop::_Application::DoJavaScriptFile ( _bstr_t JavaScriptFile, const _variant_t & Arguments, const _variant_t & ExecutionMode ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x446a6657, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0008\x080c\x080c", (BSTR)JavaScriptFile, &Arguments, &ExecutionMode);
    return _bstr_t(_result, false);
}

#pragma implementation_key(42)
inline _bstr_t Photoshop::_Application::MakePhotoGallery ( const _variant_t & InputFolder, _bstr_t OutputFolder, const _variant_t & Options ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x77777067, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x000c\x0008\x080c", &InputFolder, (BSTR)OutputFolder, &Options);
    return _bstr_t(_result, false);
}

#pragma implementation_key(43)
inline _bstr_t Photoshop::_Application::MakePDFPresentation ( const _variant_t & InputFiles, _bstr_t OutputFile, const _variant_t & Options ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x50444631, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x000c\x0008\x080c", &InputFiles, (BSTR)OutputFile, &Options);
    return _bstr_t(_result, false);
}

#pragma implementation_key(44)
inline _bstr_t Photoshop::_Application::MakePhotomerge ( const _variant_t & InputFiles ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x70746d67, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x000c", &InputFiles);
    return _bstr_t(_result, false);
}

#pragma implementation_key(45)
inline _bstr_t Photoshop::_Application::MakeContactSheet ( const _variant_t & InputFiles, const _variant_t & Options ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x43545348, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x000c\x080c", &InputFiles, &Options);
    return _bstr_t(_result, false);
}

#pragma implementation_key(46)
inline _bstr_t Photoshop::_Application::MakePicturePackage ( const _variant_t & InputFiles, const _variant_t & Options ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5054504b, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x000c\x080c", &InputFiles, &Options);
    return _bstr_t(_result, false);
}

#pragma implementation_key(47)
inline _bstr_t Photoshop::_Application::Batch ( const _variant_t & InputFiles, _bstr_t Action, _bstr_t From, const _variant_t & Options ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x42543031, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x000c\x0008\x0008\x080c", &InputFiles, (BSTR)Action, (BSTR)From, &Options);
    return _bstr_t(_result, false);
}

#pragma implementation_key(48)
inline HRESULT Photoshop::_Application::Quit ( ) {
    return _com_dispatch_method(this, 0x71756974, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(49)
inline HRESULT Photoshop::_Application::Refresh ( ) {
    return _com_dispatch_method(this, 0x52667368, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(50)
inline VARIANT_BOOL Photoshop::_Application::FeatureEnabled ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6674656e, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(51)
inline _variant_t Photoshop::_Application::OpenDialog ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x70736f70, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(52)
inline Photoshop::_ActionDescriptorPtr Photoshop::_Application::ExecuteAction ( long EventID, const _variant_t & Descriptor, const _variant_t & DisplayDialogs ) {
    struct _ActionDescriptor * _result = 0;
    _com_dispatch_method(this, 0x506c6179, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x080c\x080c", EventID, &Descriptor, &DisplayDialogs);
    return _ActionDescriptorPtr(_result, false);
}

#pragma implementation_key(53)
inline Photoshop::_ActionDescriptorPtr Photoshop::_Application::ExecuteActionGet ( struct _ActionReference * Reference ) {
    struct _ActionDescriptor * _result = 0;
    _com_dispatch_method(this, 0x41476574, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", Reference);
    return _ActionDescriptorPtr(_result, false);
}

#pragma implementation_key(54)
inline long Photoshop::_Application::StringIDToTypeID ( _bstr_t StringID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x41723031, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)StringID);
    return _result;
}

#pragma implementation_key(55)
inline _bstr_t Photoshop::_Application::TypeIDToStringID ( long TypeID ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x41723032, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0003", TypeID);
    return _bstr_t(_result, false);
}

#pragma implementation_key(56)
inline long Photoshop::_Application::CharIDToTypeID ( _bstr_t CharID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x41723033, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)CharID);
    return _result;
}

#pragma implementation_key(57)
inline _bstr_t Photoshop::_Application::TypeIDToCharID ( long TypeID ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x41723034, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0003", TypeID);
    return _bstr_t(_result, false);
}

#pragma implementation_key(58)
inline HRESULT Photoshop::_Application::ChangeColorSettings ( const _variant_t & Name, const _variant_t & File ) {
    return _com_dispatch_method(this, 0x4368437a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c", &Name, &File);
}

//
// dispinterface Document wrapper method implementations
//

#pragma implementation_key(59)
inline Photoshop::ArtLayerPtr Photoshop::Document::GetBackgroundLayer ( ) {
    struct ArtLayer * _result = 0;
    _com_dispatch_method(this, 0x44624c72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ArtLayerPtr(_result, false);
}

#pragma implementation_key(60)
inline enum Photoshop::PsBitsPerChannelType Photoshop::Document::GetBitsPerChannel ( ) {
    enum PsBitsPerChannelType _result;
    _com_dispatch_method(this, 0x44426368, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(61)
inline void Photoshop::Document::PutBitsPerChannel ( enum PsBitsPerChannelType _arg1 ) {
    _com_dispatch_method(this, 0x44426368, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(62)
inline enum Photoshop::PsColorProfileType Photoshop::Document::GetColorProfileType ( ) {
    enum PsColorProfileType _result;
    _com_dispatch_method(this, 0x44637054, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(63)
inline void Photoshop::Document::PutColorProfileType ( enum PsColorProfileType _arg1 ) {
    _com_dispatch_method(this, 0x44637054, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(64)
inline _bstr_t Photoshop::Document::GetColorProfileName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4463704e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(65)
inline void Photoshop::Document::PutColorProfileName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4463704e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(66)
inline enum Photoshop::PsDocumentMode Photoshop::Document::GetMode ( ) {
    enum PsDocumentMode _result;
    _com_dispatch_method(this, 0x4f4d6465, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(67)
inline _variant_t Photoshop::Document::GetComponentChannels ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x43437073, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(68)
inline Photoshop::HistoryStatePtr Photoshop::Document::GetActiveHistoryState ( ) {
    struct HistoryState * _result = 0;
    _com_dispatch_method(this, 0x44436873, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return HistoryStatePtr(_result, false);
}

#pragma implementation_key(69)
inline void Photoshop::Document::PutActiveHistoryState ( struct HistoryState * _arg1 ) {
    _com_dispatch_method(this, 0x44436873, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(70)
inline Photoshop::HistoryStatePtr Photoshop::Document::GetActiveHistoryBrushSource ( ) {
    struct HistoryState * _result = 0;
    _com_dispatch_method(this, 0x44436272, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return HistoryStatePtr(_result, false);
}

#pragma implementation_key(71)
inline void Photoshop::Document::PutActiveHistoryBrushSource ( struct HistoryState * _arg1 ) {
    _com_dispatch_method(this, 0x44436272, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(72)
inline IDispatchPtr Photoshop::Document::GetActiveLayer ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63724c72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(73)
inline void Photoshop::Document::PutActiveLayer ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0x63724c72, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(74)
inline _variant_t Photoshop::Document::GetActiveChannels ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x44436e6c, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(75)
inline void Photoshop::Document::PutActiveChannels ( const _variant_t & _arg1 ) {
    _com_dispatch_method(this, 0x44436e6c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000c", &_arg1);
}

#pragma implementation_key(76)
inline Photoshop::DocumentInfoPtr Photoshop::Document::GetInfo ( ) {
    struct DocumentInfo * _result = 0;
    _com_dispatch_method(this, 0x44696e66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DocumentInfoPtr(_result, false);
}

#pragma implementation_key(77)
inline _bstr_t Photoshop::Document::GetFullName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44707468, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(78)
inline double Photoshop::Document::GetHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x48676874, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(79)
inline VARIANT_BOOL Photoshop::Document::GetManaged ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x644d6764, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(80)
inline VARIANT_BOOL Photoshop::Document::GetSaved ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x44537664, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(81)
inline _bstr_t Photoshop::Document::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x706e616d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(82)
inline _bstr_t Photoshop::Document::GetPath ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44507468, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(83)
inline VARIANT_BOOL Photoshop::Document::GetQuickMaskMode ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x514d4d64, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(84)
inline void Photoshop::Document::PutQuickMaskMode ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x514d4d64, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(85)
inline double Photoshop::Document::GetResolution ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x5265734c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(86)
inline Photoshop::SelectionPtr Photoshop::Document::GetSelection ( ) {
    struct Selection * _result = 0;
    _com_dispatch_method(this, 0x73656c65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SelectionPtr(_result, false);
}

#pragma implementation_key(87)
inline double Photoshop::Document::GetWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x57647468, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(88)
inline _variant_t Photoshop::Document::GetHistogram ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x48697374, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(89)
inline double Photoshop::Document::GetPixelAspectRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x44693236, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(90)
inline void Photoshop::Document::PutPixelAspectRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x44693236, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(91)
inline Photoshop::XMPMetadataPtr Photoshop::Document::GetXMPMetadata ( ) {
    struct XMPMetadata * _result = 0;
    _com_dispatch_method(this, 0x63584d64, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return XMPMetadataPtr(_result, false);
}

#pragma implementation_key(92)
inline Photoshop::MeasurementScalePtr Photoshop::Document::GetMeasurementScale ( ) {
    struct MeasurementScale * _result = 0;
    _com_dispatch_method(this, 0x634d5363, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return MeasurementScalePtr(_result, false);
}

#pragma implementation_key(93)
inline long Photoshop::Document::Getid ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x49442020, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(94)
inline Photoshop::LayersPtr Photoshop::Document::GetLayers ( ) {
    struct Layers * _result = 0;
    _com_dispatch_method(this, 0x634c7972, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LayersPtr(_result, false);
}

#pragma implementation_key(95)
inline Photoshop::LayerSetsPtr Photoshop::Document::GetLayerSets ( ) {
    struct LayerSets * _result = 0;
    _com_dispatch_method(this, 0x634c5a74, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LayerSetsPtr(_result, false);
}

#pragma implementation_key(96)
inline Photoshop::ArtLayersPtr Photoshop::Document::GetArtLayers ( ) {
    struct ArtLayers * _result = 0;
    _com_dispatch_method(this, 0x63434c72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ArtLayersPtr(_result, false);
}

#pragma implementation_key(97)
inline Photoshop::ChannelsPtr Photoshop::Document::GetChannels ( ) {
    struct Channels * _result = 0;
    _com_dispatch_method(this, 0x6343486e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ChannelsPtr(_result, false);
}

#pragma implementation_key(98)
inline Photoshop::HistoryStatesPtr Photoshop::Document::GetHistoryStates ( ) {
    struct HistoryStates * _result = 0;
    _com_dispatch_method(this, 0x63487374, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return HistoryStatesPtr(_result, false);
}

#pragma implementation_key(99)
inline Photoshop::LayerCompsPtr Photoshop::Document::GetLayerComps ( ) {
    struct LayerComps * _result = 0;
    _com_dispatch_method(this, 0x4c433031, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LayerCompsPtr(_result, false);
}

#pragma implementation_key(100)
inline Photoshop::PathItemsPtr Photoshop::Document::GetPathItems ( ) {
    struct PathItems * _result = 0;
    _com_dispatch_method(this, 0x50543033, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return PathItemsPtr(_result, false);
}

#pragma implementation_key(101)
inline Photoshop::CountItemsPtr Photoshop::Document::GetCountItems ( ) {
    struct CountItems * _result = 0;
    _com_dispatch_method(this, 0x43543033, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return CountItemsPtr(_result, false);
}

#pragma implementation_key(102)
inline Photoshop::ColorSamplersPtr Photoshop::Document::GetColorSamplers ( ) {
    struct ColorSamplers * _result = 0;
    _com_dispatch_method(this, 0x43535330, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ColorSamplersPtr(_result, false);
}

#pragma implementation_key(103)
inline Photoshop::_ApplicationPtr Photoshop::Document::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(104)
inline IDispatchPtr Photoshop::Document::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(105)
inline HRESULT Photoshop::Document::Close ( const _variant_t & Saving ) {
    return _com_dispatch_method(this, 0x636c6f73, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Saving);
}

#pragma implementation_key(106)
inline HRESULT Photoshop::Document::ConvertProfile ( _bstr_t DestinationProfile, enum PsIntent Intent, const _variant_t & BlackPointCompensation, const _variant_t & Dither ) {
    return _com_dispatch_method(this, 0x43765072, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0003\x080c\x080c", (BSTR)DestinationProfile, Intent, &BlackPointCompensation, &Dither);
}

#pragma implementation_key(107)
inline HRESULT Photoshop::Document::ChangeMode ( enum PsChangeMode DestinationMode, const _variant_t & Options ) {
    return _com_dispatch_method(this, 0x43684373, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x080c", DestinationMode, &Options);
}

#pragma implementation_key(108)
inline HRESULT Photoshop::Document::Crop ( const _variant_t & Bounds, const _variant_t & Angle, const _variant_t & Width, const _variant_t & Height ) {
    return _com_dispatch_method(this, 0x43726f70, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c\x080c\x080c\x080c", &Bounds, &Angle, &Width, &Height);
}

#pragma implementation_key(109)
inline HRESULT Photoshop::Document::Export ( _bstr_t ExportIn, const _variant_t & ExportAs, const _variant_t & Options ) {
    return _com_dispatch_method(this, 0x45787072, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c\x080c", (BSTR)ExportIn, &ExportAs, &Options);
}

#pragma implementation_key(110)
inline HRESULT Photoshop::Document::FlipCanvas ( enum PsDirection Direction ) {
    return _com_dispatch_method(this, 0x466c4376, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Direction);
}

#pragma implementation_key(111)
inline HRESULT Photoshop::Document::ImportAnnotations ( _bstr_t File ) {
    return _com_dispatch_method(this, 0x4970416e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)File);
}

#pragma implementation_key(112)
inline HRESULT Photoshop::Document::Flatten ( ) {
    return _com_dispatch_method(this, 0x466c746e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(113)
inline HRESULT Photoshop::Document::MergeVisibleLayers ( ) {
    return _com_dispatch_method(this, 0x4d767362, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(114)
inline Photoshop::ArtLayerPtr Photoshop::Document::Paste ( const _variant_t & IntoSelection ) {
    struct ArtLayer * _result = 0;
    _com_dispatch_method(this, 0x70617374, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c", &IntoSelection);
    return ArtLayerPtr(_result, false);
}

#pragma implementation_key(115)
inline HRESULT Photoshop::Document::PrintOut ( const _variant_t & SourceSpace, const _variant_t & PrintSpace, const _variant_t & Intent, const _variant_t & BlackPointCompensation ) {
    return _com_dispatch_method(this, 0x50734350, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c\x080c", &SourceSpace, &PrintSpace, &Intent, &BlackPointCompensation);
}

#pragma implementation_key(116)
inline HRESULT Photoshop::Document::RevealAll ( ) {
    return _com_dispatch_method(this, 0x5276416c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(117)
inline HRESULT Photoshop::Document::RasterizeAllLayers ( ) {
    return _com_dispatch_method(this, 0x527a416c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(118)
inline HRESULT Photoshop::Document::RecordMeasurements ( const _variant_t & Source, const _variant_t & DataPoints ) {
    return _com_dispatch_method(this, 0x4d453034, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c", &Source, &DataPoints);
}

#pragma implementation_key(119)
inline HRESULT Photoshop::Document::RotateCanvas ( double Angle ) {
    return _com_dispatch_method(this, 0x52744376, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Angle);
}

#pragma implementation_key(120)
inline HRESULT Photoshop::Document::ResizeCanvas ( const _variant_t & Width, const _variant_t & Height, const _variant_t & Anchor ) {
    return _com_dispatch_method(this, 0x527a4376, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c", &Width, &Height, &Anchor);
}

#pragma implementation_key(121)
inline HRESULT Photoshop::Document::ResizeImage ( const _variant_t & Width, const _variant_t & Height, const _variant_t & Resolution, const _variant_t & ResampleMethod ) {
    return _com_dispatch_method(this, 0x527a496d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c\x080c", &Width, &Height, &Resolution, &ResampleMethod);
}

#pragma implementation_key(122)
inline _variant_t Photoshop::Document::SplitChannels ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x53704368, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(123)
inline HRESULT Photoshop::Document::Save ( ) {
    return _com_dispatch_method(this, 0x50435376, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(124)
inline HRESULT Photoshop::Document::SaveAs ( _bstr_t SaveIn, const _variant_t & Options, const _variant_t & AsCopy, const _variant_t & ExtensionType ) {
    return _com_dispatch_method(this, 0x53764173, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c\x080c\x080c", (BSTR)SaveIn, &Options, &AsCopy, &ExtensionType);
}

#pragma implementation_key(125)
inline HRESULT Photoshop::Document::Trap ( long Width ) {
    return _com_dispatch_method(this, 0x54726170, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Width);
}

#pragma implementation_key(126)
inline HRESULT Photoshop::Document::Trim ( const _variant_t & Type, const _variant_t & Top, const _variant_t & Left, const _variant_t & Bottom, const _variant_t & Right ) {
    return _com_dispatch_method(this, 0x5472696d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c\x080c\x080c", &Type, &Top, &Left, &Bottom, &Right);
}

#pragma implementation_key(127)
inline Photoshop::DocumentPtr Photoshop::Document::Duplicate ( const _variant_t & Name, const _variant_t & MergeLayersOnly ) {
    struct Document * _result = 0;
    _com_dispatch_method(this, 0x64636475, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &Name, &MergeLayersOnly);
    return DocumentPtr(_result, false);
}

#pragma implementation_key(128)
inline HRESULT Photoshop::Document::AutoCount ( struct Channel * Channel, long Threshold ) {
    return _com_dispatch_method(this, 0x43543035, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0003", Channel, Threshold);
}

//
// dispinterface ArtLayer wrapper method implementations
//

#pragma implementation_key(129)
inline double Photoshop::ArtLayer::GetFillOpacity ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x464f7063, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(130)
inline void Photoshop::ArtLayer::PutFillOpacity ( double _arg1 ) {
    _com_dispatch_method(this, 0x464f7063, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(131)
inline VARIANT_BOOL Photoshop::ArtLayer::GetGrouped ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70477750, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(132)
inline void Photoshop::ArtLayer::PutGrouped ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70477750, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(133)
inline VARIANT_BOOL Photoshop::ArtLayer::GetIsBackgroundLayer ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x44624c72, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(134)
inline void Photoshop::ArtLayer::PutIsBackgroundLayer ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x44624c72, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(135)
inline VARIANT_BOOL Photoshop::ArtLayer::GetPixelsLocked ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50784c63, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(136)
inline void Photoshop::ArtLayer::PutPixelsLocked ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50784c63, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(137)
inline VARIANT_BOOL Photoshop::ArtLayer::GetPositionLocked ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50744c63, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(138)
inline void Photoshop::ArtLayer::PutPositionLocked ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50744c63, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(139)
inline VARIANT_BOOL Photoshop::ArtLayer::GetTransparentPixelsLocked ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x54704c63, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(140)
inline void Photoshop::ArtLayer::PutTransparentPixelsLocked ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x54704c63, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(141)
inline enum Photoshop::PsLayerKind Photoshop::ArtLayer::GetKind ( ) {
    enum PsLayerKind _result;
    _com_dispatch_method(this, 0x4b696e64, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(142)
inline void Photoshop::ArtLayer::PutKind ( enum PsLayerKind _arg1 ) {
    _com_dispatch_method(this, 0x4b696e64, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(143)
inline Photoshop::TextItemPtr Photoshop::ArtLayer::GetTextItem ( ) {
    struct TextItem * _result = 0;
    _com_dispatch_method(this, 0x704c7254, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TextItemPtr(_result, false);
}

#pragma implementation_key(144)
inline IDispatchPtr Photoshop::ArtLayer::GetLayer ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x53436c73, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(145)
inline _bstr_t Photoshop::ArtLayer::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x706e616d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(146)
inline void Photoshop::ArtLayer::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x706e616d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(147)
inline VARIANT_BOOL Photoshop::ArtLayer::GetAllLocked ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x416c4c63, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(148)
inline void Photoshop::ArtLayer::PutAllLocked ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x416c4c63, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(149)
inline enum Photoshop::PsBlendMode Photoshop::ArtLayer::GetBlendMode ( ) {
    enum PsBlendMode _result;
    _com_dispatch_method(this, 0x426c4d64, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(150)
inline void Photoshop::ArtLayer::PutBlendMode ( enum PsBlendMode _arg1 ) {
    _com_dispatch_method(this, 0x426c4d64, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(151)
inline _variant_t Photoshop::ArtLayer::GetLinkedLayers ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x4c6b6564, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(152)
inline double Photoshop::ArtLayer::GetOpacity ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4f706374, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(153)
inline void Photoshop::ArtLayer::PutOpacity ( double _arg1 ) {
    _com_dispatch_method(this, 0x4f706374, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(154)
inline VARIANT_BOOL Photoshop::ArtLayer::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70565362, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(155)
inline void Photoshop::ArtLayer::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70565362, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(156)
inline enum Photoshop::PsLayerType Photoshop::ArtLayer::GetLayerType ( ) {
    enum PsLayerType _result;
    _com_dispatch_method(this, 0x74797065, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(157)
inline Photoshop::ArtLayerPtr Photoshop::ArtLayer::GetArtLayer ( ) {
    struct ArtLayer * _result = 0;
    _com_dispatch_method(this, 0x4c41744c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ArtLayerPtr(_result, false);
}

#pragma implementation_key(158)
inline Photoshop::LayerSetPtr Photoshop::ArtLayer::GetLayerSet ( ) {
    struct LayerSet * _result = 0;
    _com_dispatch_method(this, 0x4c41745a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LayerSetPtr(_result, false);
}

#pragma implementation_key(159)
inline _variant_t Photoshop::ArtLayer::GetBounds ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x426e6473, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(160)
inline Photoshop::_ApplicationPtr Photoshop::ArtLayer::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(161)
inline IDispatchPtr Photoshop::ArtLayer::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(162)
inline HRESULT Photoshop::ArtLayer::ApplyStyle ( _bstr_t StyleName ) {
    return _com_dispatch_method(this, 0x41704c73, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)StyleName);
}

#pragma implementation_key(163)
inline HRESULT Photoshop::ArtLayer::Clear ( ) {
    return _com_dispatch_method(this, 0x4d413031, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(164)
inline HRESULT Photoshop::ArtLayer::Copy ( const _variant_t & Merge ) {
    return _com_dispatch_method(this, 0x636f7079, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Merge);
}

#pragma implementation_key(165)
inline HRESULT Photoshop::ArtLayer::Cut ( ) {
    return _com_dispatch_method(this, 0x63757420, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(166)
inline Photoshop::ArtLayerPtr Photoshop::ArtLayer::Merge ( ) {
    struct ArtLayer * _result = 0;
    _com_dispatch_method(this, 0x4d674c5a, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return ArtLayerPtr(_result, false);
}

#pragma implementation_key(167)
inline HRESULT Photoshop::ArtLayer::Rasterize ( enum PsRasterizeType Target ) {
    return _com_dispatch_method(this, 0x52737472, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Target);
}

#pragma implementation_key(168)
inline HRESULT Photoshop::ArtLayer::ApplyAverage ( ) {
    return _com_dispatch_method(this, 0x46303337, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(169)
inline HRESULT Photoshop::ArtLayer::ApplyGaussianBlur ( double Radius ) {
    return _com_dispatch_method(this, 0x47426c72, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Radius);
}

#pragma implementation_key(170)
inline HRESULT Photoshop::ArtLayer::ApplyLensBlur ( const _variant_t & Source, const _variant_t & FocalDistance, const _variant_t & InvertDepthMap, const _variant_t & Shape, const _variant_t & Radius, const _variant_t & BladeCurvature, const _variant_t & Rotation, const _variant_t & Brightness, const _variant_t & Threshold, const _variant_t & Amount, const _variant_t & Distribution, const _variant_t & Monochromatic ) {
    return _com_dispatch_method(this, 0x4c6e426c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Source, &FocalDistance, &InvertDepthMap, &Shape, &Radius, &BladeCurvature, &Rotation, &Brightness, &Threshold, &Amount, &Distribution, &Monochromatic);
}

#pragma implementation_key(171)
inline HRESULT Photoshop::ArtLayer::ApplyBlur ( ) {
    return _com_dispatch_method(this, 0x46303031, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(172)
inline HRESULT Photoshop::ArtLayer::ApplyBlurMore ( ) {
    return _com_dispatch_method(this, 0x46303032, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(173)
inline HRESULT Photoshop::ArtLayer::ApplyMotionBlur ( long Angle, double Radius ) {
    return _com_dispatch_method(this, 0x46303033, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005", Angle, Radius);
}

#pragma implementation_key(174)
inline HRESULT Photoshop::ArtLayer::ApplyRadialBlur ( long Amount, enum PsRadialBlurMethod BlurMethod, enum PsRadialBlurQuality BlurQuality ) {
    return _com_dispatch_method(this, 0x46303034, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003", Amount, BlurMethod, BlurQuality);
}

#pragma implementation_key(175)
inline HRESULT Photoshop::ArtLayer::ApplySmartBlur ( double Radius, double Threshold, enum PsSmartBlurQuality BlurQuality, enum PsSmartBlurMode Mode ) {
    return _com_dispatch_method(this, 0x46303035, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0003\x0003", Radius, Threshold, BlurQuality, Mode);
}

#pragma implementation_key(176)
inline HRESULT Photoshop::ArtLayer::ApplyDiffuseGlow ( long Graininess, long GlowAmount, long ClearAmount ) {
    return _com_dispatch_method(this, 0x46303036, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003", Graininess, GlowAmount, ClearAmount);
}

#pragma implementation_key(177)
inline HRESULT Photoshop::ArtLayer::ApplyDisplace ( long HorizontalScale, long VerticalScale, enum PsDisplacementMapType DisplacementType, enum PsUndefinedAreas UndefinedAreas, _bstr_t DisplacementMapFile ) {
    return _com_dispatch_method(this, 0x46303135, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003\x0003\x0008", HorizontalScale, VerticalScale, DisplacementType, UndefinedAreas, (BSTR)DisplacementMapFile);
}

#pragma implementation_key(178)
inline HRESULT Photoshop::ArtLayer::ApplyGlassEffect ( long Distortion, long Smoothness, long Scaling, const _variant_t & Invert, const _variant_t & Texture, const _variant_t & TextureFile ) {
    return _com_dispatch_method(this, 0x46303037, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003\x080c\x080c\x080c", Distortion, Smoothness, Scaling, &Invert, &Texture, &TextureFile);
}

#pragma implementation_key(179)
inline HRESULT Photoshop::ArtLayer::ApplyOceanRipple ( long Size, long Magnitude ) {
    return _com_dispatch_method(this, 0x46303038, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", Size, Magnitude);
}

#pragma implementation_key(180)
inline HRESULT Photoshop::ArtLayer::ApplyPinch ( long Amount ) {
    return _com_dispatch_method(this, 0x46303039, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Amount);
}

#pragma implementation_key(181)
inline HRESULT Photoshop::ArtLayer::ApplyPolarCoordinates ( enum PsPolarConversionType Conversion ) {
    return _com_dispatch_method(this, 0x46303130, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Conversion);
}

#pragma implementation_key(182)
inline HRESULT Photoshop::ArtLayer::ApplyRipple ( long Amount, enum PsRippleSize Size ) {
    return _com_dispatch_method(this, 0x46303131, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", Amount, Size);
}

#pragma implementation_key(183)
inline HRESULT Photoshop::ArtLayer::ApplyShear ( const _variant_t & Curve, enum PsUndefinedAreas UndefinedAreas ) {
    return _com_dispatch_method(this, 0x46303132, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c\x0003", &Curve, UndefinedAreas);
}

#pragma implementation_key(184)
inline HRESULT Photoshop::ArtLayer::ApplySpherize ( long Amount, enum PsSpherizeMode Mode ) {
    return _com_dispatch_method(this, 0x46303133, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", Amount, Mode);
}

#pragma implementation_key(185)
inline HRESULT Photoshop::ArtLayer::ApplyTwirl ( long Angle ) {
    return _com_dispatch_method(this, 0x46303134, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Angle);
}

#pragma implementation_key(186)
inline HRESULT Photoshop::ArtLayer::ApplyWave ( long GeneratorNumber, long MinimumWavelength, long MaximumWavelength, long MinimumAmplitude, long MaximumAmplitude, long HorizontalScale, long VerticalScale, enum PsWaveType WaveType, enum PsUndefinedAreas UndefinedAreas, long RandomSeed ) {
    return _com_dispatch_method(this, 0x46303136, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003\x0003\x0003\x0003\x0003\x0003\x0003\x0003", GeneratorNumber, MinimumWavelength, MaximumWavelength, MinimumAmplitude, MaximumAmplitude, HorizontalScale, VerticalScale, WaveType, UndefinedAreas, RandomSeed);
}

#pragma implementation_key(187)
inline HRESULT Photoshop::ArtLayer::ApplyZigZag ( long Amount, long Ridges, enum PsZigZagType Style ) {
    return _com_dispatch_method(this, 0x46303137, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003", Amount, Ridges, Style);
}

#pragma implementation_key(188)
inline HRESULT Photoshop::ArtLayer::ApplyAddNoise ( double Amount, enum PsNoiseDistribution Distribution, VARIANT_BOOL Monochromatic ) {
    return _com_dispatch_method(this, 0x46303138, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0003\x000b", Amount, Distribution, Monochromatic);
}

#pragma implementation_key(189)
inline HRESULT Photoshop::ArtLayer::ApplyDespeckle ( ) {
    return _com_dispatch_method(this, 0x46303139, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(190)
inline HRESULT Photoshop::ArtLayer::ApplyDustAndScratches ( long Radius, long Threshold ) {
    return _com_dispatch_method(this, 0x46303230, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", Radius, Threshold);
}

#pragma implementation_key(191)
inline HRESULT Photoshop::ArtLayer::ApplyMedianNoise ( double Radius ) {
    return _com_dispatch_method(this, 0x46303231, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Radius);
}

#pragma implementation_key(192)
inline HRESULT Photoshop::ArtLayer::ApplyClouds ( ) {
    return _com_dispatch_method(this, 0x46303331, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(193)
inline HRESULT Photoshop::ArtLayer::ApplyDifferenceClouds ( ) {
    return _com_dispatch_method(this, 0x46303332, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(194)
inline HRESULT Photoshop::ArtLayer::ApplyLensFlare ( long Brightness, const _variant_t & FlareCenter, enum PsLensType LensType ) {
    return _com_dispatch_method(this, 0x46303333, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000c\x0003", Brightness, &FlareCenter, LensType);
}

#pragma implementation_key(195)
inline HRESULT Photoshop::ArtLayer::ApplyTextureFill ( _bstr_t TextureFile ) {
    return _com_dispatch_method(this, 0x46303334, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)TextureFile);
}

#pragma implementation_key(196)
inline HRESULT Photoshop::ArtLayer::ApplySharpen ( ) {
    return _com_dispatch_method(this, 0x46303232, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(197)
inline HRESULT Photoshop::ArtLayer::ApplySharpenEdges ( ) {
    return _com_dispatch_method(this, 0x46303233, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(198)
inline HRESULT Photoshop::ArtLayer::ApplySharpenMore ( ) {
    return _com_dispatch_method(this, 0x46303234, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(199)
inline HRESULT Photoshop::ArtLayer::ApplyUnSharpMask ( double Amount, double Radius, long Threshold ) {
    return _com_dispatch_method(this, 0x46303235, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0003", Amount, Radius, Threshold);
}

#pragma implementation_key(200)
inline HRESULT Photoshop::ArtLayer::ApplyDeInterlace ( enum PsEliminateFields EliminateFields, enum PsCreateFields CreateFields ) {
    return _com_dispatch_method(this, 0x46303335, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", EliminateFields, CreateFields);
}

#pragma implementation_key(201)
inline HRESULT Photoshop::ArtLayer::ApplyNTSC ( ) {
    return _com_dispatch_method(this, 0x46303336, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(202)
inline HRESULT Photoshop::ArtLayer::ApplyCustomFilter ( const _variant_t & Characteristics, long Scale, long Offset ) {
    return _com_dispatch_method(this, 0x46303236, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c\x0003\x0003", &Characteristics, Scale, Offset);
}

#pragma implementation_key(203)
inline HRESULT Photoshop::ArtLayer::ApplyHighPass ( double Radius ) {
    return _com_dispatch_method(this, 0x46303330, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Radius);
}

#pragma implementation_key(204)
inline HRESULT Photoshop::ArtLayer::ApplyMaximum ( double Radius ) {
    return _com_dispatch_method(this, 0x46303237, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Radius);
}

#pragma implementation_key(205)
inline HRESULT Photoshop::ArtLayer::ApplyMinimum ( double Radius ) {
    return _com_dispatch_method(this, 0x46303238, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Radius);
}

#pragma implementation_key(206)
inline HRESULT Photoshop::ArtLayer::ApplyOffset ( double Horizontal, double Vertical, enum PsOffsetUndefinedAreas UndefinedAreas ) {
    return _com_dispatch_method(this, 0x46303239, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0003", Horizontal, Vertical, UndefinedAreas);
}

#pragma implementation_key(207)
inline HRESULT Photoshop::ArtLayer::AdjustLevels ( long InputRangeStart, long InputRangeEnd, double InputRangeGamma, long OutputRangeStart, long OutputRangeEnd ) {
    return _com_dispatch_method(this, 0x41643031, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005\x0003\x0003", InputRangeStart, InputRangeEnd, InputRangeGamma, OutputRangeStart, OutputRangeEnd);
}

#pragma implementation_key(208)
inline HRESULT Photoshop::ArtLayer::AutoLevels ( ) {
    return _com_dispatch_method(this, 0x41423031, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(209)
inline HRESULT Photoshop::ArtLayer::AutoContrast ( ) {
    return _com_dispatch_method(this, 0x41643032, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(210)
inline HRESULT Photoshop::ArtLayer::AdjustCurves ( const _variant_t & CurveShape ) {
    return _com_dispatch_method(this, 0x41643033, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &CurveShape);
}

#pragma implementation_key(211)
inline HRESULT Photoshop::ArtLayer::AdjustBrightnessContrast ( long Brightness, long Contrast ) {
    return _com_dispatch_method(this, 0x41643034, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", Brightness, Contrast);
}

#pragma implementation_key(212)
inline HRESULT Photoshop::ArtLayer::AdjustColorBalance ( const _variant_t & Shadows, const _variant_t & Midtones, const _variant_t & Highlights, const _variant_t & PreserveLuminosity ) {
    return _com_dispatch_method(this, 0x41643035, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c\x080c", &Shadows, &Midtones, &Highlights, &PreserveLuminosity);
}

#pragma implementation_key(213)
inline HRESULT Photoshop::ArtLayer::Desaturate ( ) {
    return _com_dispatch_method(this, 0x41643036, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(214)
inline HRESULT Photoshop::ArtLayer::SelectiveColor ( enum PsAdjustmentReference SelectionMethod, const _variant_t & Reds, const _variant_t & Yellows, const _variant_t & Greens, const _variant_t & Cyans, const _variant_t & Blues, const _variant_t & Magentas, const _variant_t & Whites, const _variant_t & Neutrals, const _variant_t & Blacks ) {
    return _com_dispatch_method(this, 0x41643037, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", SelectionMethod, &Reds, &Yellows, &Greens, &Cyans, &Blues, &Magentas, &Whites, &Neutrals, &Blacks);
}

#pragma implementation_key(215)
inline HRESULT Photoshop::ArtLayer::MixChannels ( const _variant_t & OutputChannels, const _variant_t & Monochrome ) {
    return _com_dispatch_method(this, 0x41643038, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c\x080c", &OutputChannels, &Monochrome);
}

#pragma implementation_key(216)
inline HRESULT Photoshop::ArtLayer::Invert ( ) {
    return _com_dispatch_method(this, 0x69566f6e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(217)
inline HRESULT Photoshop::ArtLayer::Equalize ( ) {
    return _com_dispatch_method(this, 0x41643039, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(218)
inline HRESULT Photoshop::ArtLayer::Threshold ( long Level ) {
    return _com_dispatch_method(this, 0x41643131, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Level);
}

#pragma implementation_key(219)
inline HRESULT Photoshop::ArtLayer::Posterize ( long Levels ) {
    return _com_dispatch_method(this, 0x41643130, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Levels);
}

#pragma implementation_key(220)
inline HRESULT Photoshop::ArtLayer::PhotoFilter ( const _variant_t & FillColor, const _variant_t & Density, const _variant_t & PreserveLuminosity ) {
    return _com_dispatch_method(this, 0x41643132, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c", &FillColor, &Density, &PreserveLuminosity);
}

#pragma implementation_key(221)
inline HRESULT Photoshop::ArtLayer::ShadowHighlight ( const _variant_t & ShadowAmount, const _variant_t & ShadowWidth, const _variant_t & ShadowRaduis, const _variant_t & HighlightAmount, const _variant_t & HighlightWidth, const _variant_t & HighlightRaduis, const _variant_t & ColorCorrection, const _variant_t & MidtoneContrast, const _variant_t & BlackClip, const _variant_t & WhiteClip ) {
    return _com_dispatch_method(this, 0x53483031, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &ShadowAmount, &ShadowWidth, &ShadowRaduis, &HighlightAmount, &HighlightWidth, &HighlightRaduis, &ColorCorrection, &MidtoneContrast, &BlackClip, &WhiteClip);
}

#pragma implementation_key(222)
inline HRESULT Photoshop::ArtLayer::Unlink ( ) {
    return _com_dispatch_method(this, 0x556c6e6b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(223)
inline HRESULT Photoshop::ArtLayer::Link ( IDispatch * With ) {
    return _com_dispatch_method(this, 0x6c6b546f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", With);
}

#pragma implementation_key(224)
inline HRESULT Photoshop::ArtLayer::Translate ( const _variant_t & DeltaX, const _variant_t & DeltaY ) {
    return _com_dispatch_method(this, 0x4d765073, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c", &DeltaX, &DeltaY);
}

#pragma implementation_key(225)
inline HRESULT Photoshop::ArtLayer::Rotate ( double Angle, const _variant_t & Anchor ) {
    return _com_dispatch_method(this, 0x526f7461, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x080c", Angle, &Anchor);
}

#pragma implementation_key(226)
inline HRESULT Photoshop::ArtLayer::Resize ( const _variant_t & Horizontal, const _variant_t & Vertical, const _variant_t & Anchor ) {
    return _com_dispatch_method(this, 0x53636c65, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c", &Horizontal, &Vertical, &Anchor);
}

#pragma implementation_key(227)
inline HRESULT Photoshop::ArtLayer::MoveToBeginning ( IDispatch * Container ) {
    return _com_dispatch_method(this, 0x4d764566, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Container);
}

#pragma implementation_key(228)
inline HRESULT Photoshop::ArtLayer::MoveToEnd ( IDispatch * Container ) {
    return _com_dispatch_method(this, 0x4d764565, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Container);
}

#pragma implementation_key(229)
inline HRESULT Photoshop::ArtLayer::MoveBefore ( IDispatch * RelativeObject ) {
    return _com_dispatch_method(this, 0x4d764562, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", RelativeObject);
}

#pragma implementation_key(230)
inline HRESULT Photoshop::ArtLayer::MoveAfter ( IDispatch * RelativeObject ) {
    return _com_dispatch_method(this, 0x4d764561, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", RelativeObject);
}

#pragma implementation_key(231)
inline IDispatchPtr Photoshop::ArtLayer::Duplicate ( const _variant_t & RelativeObject, const _variant_t & InsertionLocation ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x636c6f6e, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &RelativeObject, &InsertionLocation);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(232)
inline HRESULT Photoshop::ArtLayer::Move ( IDispatch * RelativeObject, enum PsElementPlacement InsertionLocation ) {
    return _com_dispatch_method(this, 0x6d6f7665, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0003", RelativeObject, InsertionLocation);
}

#pragma implementation_key(233)
inline HRESULT Photoshop::ArtLayer::Delete ( ) {
    return _com_dispatch_method(this, 0x64656c6f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface TextItem wrapper method implementations
//

#pragma implementation_key(234)
inline enum Photoshop::PsAntiAlias Photoshop::TextItem::GetAntiAliasMethod ( ) {
    enum PsAntiAlias _result;
    _com_dispatch_method(this, 0x41417470, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(235)
inline void Photoshop::TextItem::PutAntiAliasMethod ( enum PsAntiAlias _arg1 ) {
    _com_dispatch_method(this, 0x41417470, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(236)
inline enum Photoshop::PsAutoKernType Photoshop::TextItem::GetAutoKerning ( ) {
    enum PsAutoKernType _result;
    _com_dispatch_method(this, 0x416b726e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(237)
inline void Photoshop::TextItem::PutAutoKerning ( enum PsAutoKernType _arg1 ) {
    _com_dispatch_method(this, 0x416b726e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(238)
inline Photoshop::_SolidColorPtr Photoshop::TextItem::GetColor ( ) {
    struct _SolidColor * _result = 0;
    _com_dispatch_method(this, 0x54436c43, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _SolidColorPtr(_result, false);
}

#pragma implementation_key(239)
inline void Photoshop::TextItem::PutColor ( struct _SolidColor * _arg1 ) {
    _com_dispatch_method(this, 0x54436c43, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(240)
inline void Photoshop::TextItem::PutRefColor ( struct _SolidColor * _arg1 ) {
    _com_dispatch_method(this, 0x54436c43, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(241)
inline VARIANT_BOOL Photoshop::TextItem::GetUseAutoLeading ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x416c6467, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(242)
inline void Photoshop::TextItem::PutUseAutoLeading ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x416c6467, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(243)
inline double Photoshop::TextItem::GetTracking ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x54726b6e, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(244)
inline void Photoshop::TextItem::PutTracking ( double _arg1 ) {
    _com_dispatch_method(this, 0x54726b6e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(245)
inline long Photoshop::TextItem::GetVerticalScale ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x56745363, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(246)
inline void Photoshop::TextItem::PutVerticalScale ( long _arg1 ) {
    _com_dispatch_method(this, 0x56745363, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(247)
inline long Photoshop::TextItem::GetHorizontalScale ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x48725363, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(248)
inline void Photoshop::TextItem::PutHorizontalScale ( long _arg1 ) {
    _com_dispatch_method(this, 0x48725363, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(249)
inline double Photoshop::TextItem::GetBaselineShift ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x426c7368, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(250)
inline void Photoshop::TextItem::PutBaselineShift ( double _arg1 ) {
    _com_dispatch_method(this, 0x426c7368, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(251)
inline _bstr_t Photoshop::TextItem::GetContents ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x70636e74, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(252)
inline void Photoshop::TextItem::PutContents ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x70636e74, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(253)
inline _bstr_t Photoshop::TextItem::GetFont ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x63466e74, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(254)
inline void Photoshop::TextItem::PutFont ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x63466e74, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(255)
inline double Photoshop::TextItem::GetLeading ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x544c6467, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(256)
inline void Photoshop::TextItem::PutLeading ( double _arg1 ) {
    _com_dispatch_method(this, 0x544c6467, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(257)
inline VARIANT_BOOL Photoshop::TextItem::GetLigatures ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4c747273, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(258)
inline void Photoshop::TextItem::PutLigatures ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4c747273, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(259)
inline VARIANT_BOOL Photoshop::TextItem::GetAlternateLigatures ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x414c7473, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(260)
inline void Photoshop::TextItem::PutAlternateLigatures ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x414c7473, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(261)
inline VARIANT_BOOL Photoshop::TextItem::GetOldStyle ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4f645374, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(262)
inline void Photoshop::TextItem::PutOldStyle ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4f645374, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(263)
inline _variant_t Photoshop::TextItem::GetPosition ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x4f72676e, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(264)
inline void Photoshop::TextItem::PutPosition ( const _variant_t & _arg1 ) {
    _com_dispatch_method(this, 0x4f72676e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000c", &_arg1);
}

#pragma implementation_key(265)
inline enum Photoshop::PsDirection Photoshop::TextItem::GetDirection ( ) {
    enum PsDirection _result;
    _com_dispatch_method(this, 0x54446972, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(266)
inline void Photoshop::TextItem::PutDirection ( enum PsDirection _arg1 ) {
    _com_dispatch_method(this, 0x54446972, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(267)
inline double Photoshop::TextItem::GetSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7074737a, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(268)
inline void Photoshop::TextItem::PutSize ( double _arg1 ) {
    _com_dispatch_method(this, 0x7074737a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(269)
inline VARIANT_BOOL Photoshop::TextItem::GetFauxBold ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4678426c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(270)
inline void Photoshop::TextItem::PutFauxBold ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4678426c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(271)
inline VARIANT_BOOL Photoshop::TextItem::GetFauxItalic ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x46784974, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(272)
inline void Photoshop::TextItem::PutFauxItalic ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x46784974, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(273)
inline enum Photoshop::PsCase Photoshop::TextItem::GetCapitalization ( ) {
    enum PsCase _result;
    _com_dispatch_method(this, 0x43617073, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(274)
inline void Photoshop::TextItem::PutCapitalization ( enum PsCase _arg1 ) {
    _com_dispatch_method(this, 0x43617073, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(275)
inline enum Photoshop::PsStrikeThruType Photoshop::TextItem::GetStrikeThru ( ) {
    enum PsStrikeThruType _result;
    _com_dispatch_method(this, 0x50547275, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(276)
inline void Photoshop::TextItem::PutStrikeThru ( enum PsStrikeThruType _arg1 ) {
    _com_dispatch_method(this, 0x50547275, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(277)
inline enum Photoshop::PsUnderlineType Photoshop::TextItem::GetUnderline ( ) {
    enum PsUnderlineType _result;
    _com_dispatch_method(this, 0x556c696e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(278)
inline void Photoshop::TextItem::PutUnderline ( enum PsUnderlineType _arg1 ) {
    _com_dispatch_method(this, 0x556c696e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(279)
inline enum Photoshop::PsLanguage Photoshop::TextItem::GetLanguage ( ) {
    enum PsLanguage _result;
    _com_dispatch_method(this, 0x4c616e67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(280)
inline void Photoshop::TextItem::PutLanguage ( enum PsLanguage _arg1 ) {
    _com_dispatch_method(this, 0x4c616e67, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(281)
inline VARIANT_BOOL Photoshop::TextItem::GetNoBreak ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4e6f626b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(282)
inline void Photoshop::TextItem::PutNoBreak ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4e6f626b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(283)
inline enum Photoshop::PsTextType Photoshop::TextItem::GetKind ( ) {
    enum PsTextType _result;
    _com_dispatch_method(this, 0x4b696e64, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(284)
inline void Photoshop::TextItem::PutKind ( enum PsTextType _arg1 ) {
    _com_dispatch_method(this, 0x4b696e64, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(285)
inline enum Photoshop::PsJustification Photoshop::TextItem::GetJustification ( ) {
    enum PsJustification _result;
    _com_dispatch_method(this, 0x706a7374, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(286)
inline void Photoshop::TextItem::PutJustification ( enum PsJustification _arg1 ) {
    _com_dispatch_method(this, 0x706a7374, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(287)
inline double Photoshop::TextItem::GetLeftIndent ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x544c6964, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(288)
inline void Photoshop::TextItem::PutLeftIndent ( double _arg1 ) {
    _com_dispatch_method(this, 0x544c6964, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(289)
inline double Photoshop::TextItem::GetFirstLineIndent ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x54466964, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(290)
inline void Photoshop::TextItem::PutFirstLineIndent ( double _arg1 ) {
    _com_dispatch_method(this, 0x54466964, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(291)
inline double Photoshop::TextItem::GetRightIndent ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x54526964, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(292)
inline void Photoshop::TextItem::PutRightIndent ( double _arg1 ) {
    _com_dispatch_method(this, 0x54526964, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(293)
inline double Photoshop::TextItem::GetSpaceBefore ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x54534266, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(294)
inline void Photoshop::TextItem::PutSpaceBefore ( double _arg1 ) {
    _com_dispatch_method(this, 0x54534266, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(295)
inline double Photoshop::TextItem::GetSpaceAfter ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x54536166, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(296)
inline void Photoshop::TextItem::PutSpaceAfter ( double _arg1 ) {
    _com_dispatch_method(this, 0x54536166, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(297)
inline VARIANT_BOOL Photoshop::TextItem::GetHangingPuntuation ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x48506374, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(298)
inline void Photoshop::TextItem::PutHangingPuntuation ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x48506374, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(299)
inline enum Photoshop::PsTextComposer Photoshop::TextItem::GetTextComposer ( ) {
    enum PsTextComposer _result;
    _com_dispatch_method(this, 0x54437073, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(300)
inline void Photoshop::TextItem::PutTextComposer ( enum PsTextComposer _arg1 ) {
    _com_dispatch_method(this, 0x54437073, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(301)
inline VARIANT_BOOL Photoshop::TextItem::GetHyphenation ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x55487068, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(302)
inline void Photoshop::TextItem::PutHyphenation ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x55487068, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(303)
inline double Photoshop::TextItem::GetMinimumGlyphScaling ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4d694773, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(304)
inline void Photoshop::TextItem::PutMinimumGlyphScaling ( double _arg1 ) {
    _com_dispatch_method(this, 0x4d694773, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(305)
inline double Photoshop::TextItem::GetDesiredGlyphScaling ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x44734773, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(306)
inline void Photoshop::TextItem::PutDesiredGlyphScaling ( double _arg1 ) {
    _com_dispatch_method(this, 0x44734773, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(307)
inline double Photoshop::TextItem::GetMaximumGlyphScaling ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4d734773, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(308)
inline void Photoshop::TextItem::PutMaximumGlyphScaling ( double _arg1 ) {
    _com_dispatch_method(this, 0x4d734773, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(309)
inline double Photoshop::TextItem::GetMinimumLetterScaling ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4d694c73, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(310)
inline void Photoshop::TextItem::PutMinimumLetterScaling ( double _arg1 ) {
    _com_dispatch_method(this, 0x4d694c73, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(311)
inline double Photoshop::TextItem::GetDesiredLetterScaling ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x44734c73, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(312)
inline void Photoshop::TextItem::PutDesiredLetterScaling ( double _arg1 ) {
    _com_dispatch_method(this, 0x44734c73, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(313)
inline double Photoshop::TextItem::GetMaximumLetterScaling ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4d614c73, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(314)
inline void Photoshop::TextItem::PutMaximumLetterScaling ( double _arg1 ) {
    _com_dispatch_method(this, 0x4d614c73, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(315)
inline double Photoshop::TextItem::GetMinimumWordScaling ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4d695773, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(316)
inline void Photoshop::TextItem::PutMinimumWordScaling ( double _arg1 ) {
    _com_dispatch_method(this, 0x4d695773, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(317)
inline double Photoshop::TextItem::GetDesiredWordScaling ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x44735773, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(318)
inline void Photoshop::TextItem::PutDesiredWordScaling ( double _arg1 ) {
    _com_dispatch_method(this, 0x44735773, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(319)
inline double Photoshop::TextItem::GetMaximumWordScaling ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4d615773, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(320)
inline void Photoshop::TextItem::PutMaximumWordScaling ( double _arg1 ) {
    _com_dispatch_method(this, 0x4d615773, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(321)
inline double Photoshop::TextItem::GetAutoLeadingAmount ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x416c614d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(322)
inline void Photoshop::TextItem::PutAutoLeadingAmount ( double _arg1 ) {
    _com_dispatch_method(this, 0x416c614d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(323)
inline long Photoshop::TextItem::GetHyphenateWordsLongerThan ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x484c746e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(324)
inline void Photoshop::TextItem::PutHyphenateWordsLongerThan ( long _arg1 ) {
    _com_dispatch_method(this, 0x484c746e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(325)
inline long Photoshop::TextItem::GetHyphenateAfterFirst ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x48416674, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(326)
inline void Photoshop::TextItem::PutHyphenateAfterFirst ( long _arg1 ) {
    _com_dispatch_method(this, 0x48416674, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(327)
inline long Photoshop::TextItem::GetHyphenateBeforeLast ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x48426672, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(328)
inline void Photoshop::TextItem::PutHyphenateBeforeLast ( long _arg1 ) {
    _com_dispatch_method(this, 0x48426672, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(329)
inline long Photoshop::TextItem::GetHyphenLimit ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x484c6d74, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(330)
inline void Photoshop::TextItem::PutHyphenLimit ( long _arg1 ) {
    _com_dispatch_method(this, 0x484c6d74, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(331)
inline double Photoshop::TextItem::GetHyphenationZone ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x485a6e65, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(332)
inline void Photoshop::TextItem::PutHyphenationZone ( double _arg1 ) {
    _com_dispatch_method(this, 0x485a6e65, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(333)
inline VARIANT_BOOL Photoshop::TextItem::GetHyphenateCapitalWords ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x48437073, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(334)
inline void Photoshop::TextItem::PutHyphenateCapitalWords ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x48437073, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(335)
inline double Photoshop::TextItem::GetWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x57647468, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(336)
inline void Photoshop::TextItem::PutWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x57647468, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(337)
inline double Photoshop::TextItem::GetHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x48676874, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(338)
inline void Photoshop::TextItem::PutHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x48676874, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(339)
inline enum Photoshop::PsWarpStyle Photoshop::TextItem::GetWarpStyle ( ) {
    enum PsWarpStyle _result;
    _com_dispatch_method(this, 0x5753746c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(340)
inline void Photoshop::TextItem::PutWarpStyle ( enum PsWarpStyle _arg1 ) {
    _com_dispatch_method(this, 0x5753746c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(341)
inline enum Photoshop::PsDirection Photoshop::TextItem::GetWarpDirection ( ) {
    enum PsDirection _result;
    _com_dispatch_method(this, 0x57446972, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(342)
inline void Photoshop::TextItem::PutWarpDirection ( enum PsDirection _arg1 ) {
    _com_dispatch_method(this, 0x57446972, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(343)
inline double Photoshop::TextItem::GetWarpBend ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x57426e64, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(344)
inline void Photoshop::TextItem::PutWarpBend ( double _arg1 ) {
    _com_dispatch_method(this, 0x57426e64, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(345)
inline double Photoshop::TextItem::GetWarpHorizontalDistortion ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x57484473, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(346)
inline void Photoshop::TextItem::PutWarpHorizontalDistortion ( double _arg1 ) {
    _com_dispatch_method(this, 0x57484473, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(347)
inline double Photoshop::TextItem::GetWarpVerticalDistortion ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x57564473, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(348)
inline void Photoshop::TextItem::PutWarpVerticalDistortion ( double _arg1 ) {
    _com_dispatch_method(this, 0x57564473, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(349)
inline Photoshop::_ApplicationPtr Photoshop::TextItem::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(350)
inline IDispatchPtr Photoshop::TextItem::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(351)
inline HRESULT Photoshop::TextItem::CreatePath ( ) {
    return _com_dispatch_method(this, 0x43577074, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(352)
inline HRESULT Photoshop::TextItem::ConvertToShape ( ) {
    return _com_dispatch_method(this, 0x43763273, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface _SolidColor wrapper method implementations
//

#pragma implementation_key(353)
inline enum Photoshop::PsColorModel Photoshop::_SolidColor::GetModel ( ) {
    enum PsColorModel _result;
    _com_dispatch_method(this, 0x70434d64, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(354)
inline void Photoshop::_SolidColor::PutModel ( enum PsColorModel _arg1 ) {
    _com_dispatch_method(this, 0x70434d64, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(355)
inline Photoshop::_RGBColorPtr Photoshop::_SolidColor::GetRGB ( ) {
    struct _RGBColor * _result = 0;
    _com_dispatch_method(this, 0x63524776, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _RGBColorPtr(_result, false);
}

#pragma implementation_key(356)
inline void Photoshop::_SolidColor::PutRGB ( struct _RGBColor * _arg1 ) {
    _com_dispatch_method(this, 0x63524776, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(357)
inline void Photoshop::_SolidColor::PutRefRGB ( struct _RGBColor * _arg1 ) {
    _com_dispatch_method(this, 0x63524776, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(358)
inline Photoshop::_GrayColorPtr Photoshop::_SolidColor::GetGray ( ) {
    struct _GrayColor * _result = 0;
    _com_dispatch_method(this, 0x63477276, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _GrayColorPtr(_result, false);
}

#pragma implementation_key(359)
inline void Photoshop::_SolidColor::PutGray ( struct _GrayColor * _arg1 ) {
    _com_dispatch_method(this, 0x63477276, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(360)
inline void Photoshop::_SolidColor::PutRefGray ( struct _GrayColor * _arg1 ) {
    _com_dispatch_method(this, 0x63477276, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(361)
inline Photoshop::_CMYKColorPtr Photoshop::_SolidColor::GetCMYK ( ) {
    struct _CMYKColor * _result = 0;
    _com_dispatch_method(this, 0x63434d76, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _CMYKColorPtr(_result, false);
}

#pragma implementation_key(362)
inline void Photoshop::_SolidColor::PutCMYK ( struct _CMYKColor * _arg1 ) {
    _com_dispatch_method(this, 0x63434d76, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(363)
inline void Photoshop::_SolidColor::PutRefCMYK ( struct _CMYKColor * _arg1 ) {
    _com_dispatch_method(this, 0x63434d76, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(364)
inline Photoshop::_LabColorPtr Photoshop::_SolidColor::GetLab ( ) {
    struct _LabColor * _result = 0;
    _com_dispatch_method(this, 0x634c6276, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _LabColorPtr(_result, false);
}

#pragma implementation_key(365)
inline void Photoshop::_SolidColor::PutLab ( struct _LabColor * _arg1 ) {
    _com_dispatch_method(this, 0x634c6276, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(366)
inline void Photoshop::_SolidColor::PutRefLab ( struct _LabColor * _arg1 ) {
    _com_dispatch_method(this, 0x634c6276, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(367)
inline Photoshop::_HSBColorPtr Photoshop::_SolidColor::GetHSB ( ) {
    struct _HSBColor * _result = 0;
    _com_dispatch_method(this, 0x63484276, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _HSBColorPtr(_result, false);
}

#pragma implementation_key(368)
inline void Photoshop::_SolidColor::PutHSB ( struct _HSBColor * _arg1 ) {
    _com_dispatch_method(this, 0x63484276, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(369)
inline void Photoshop::_SolidColor::PutRefHSB ( struct _HSBColor * _arg1 ) {
    _com_dispatch_method(this, 0x63484276, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(370)
inline Photoshop::_RGBColorPtr Photoshop::_SolidColor::GetNearestWebColor ( ) {
    struct _RGBColor * _result = 0;
    _com_dispatch_method(this, 0x5762436c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _RGBColorPtr(_result, false);
}

#pragma implementation_key(371)
inline Photoshop::_ApplicationPtr Photoshop::_SolidColor::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(372)
inline void Photoshop::_SolidColor::PutObjectValue ( struct _SolidColor * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(373)
inline void Photoshop::_SolidColor::PutRefObjectValue ( struct _SolidColor * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(374)
inline VARIANT_BOOL Photoshop::_SolidColor::IsEqual ( struct _SolidColor * Color ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4351616c, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0009", Color);
    return _result;
}

//
// dispinterface _RGBColor wrapper method implementations
//

#pragma implementation_key(375)
inline double Photoshop::_RGBColor::GetRed ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x70525276, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(376)
inline void Photoshop::_RGBColor::PutRed ( double _arg1 ) {
    _com_dispatch_method(this, 0x70525276, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(377)
inline double Photoshop::_RGBColor::GetGreen ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x70524776, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(378)
inline void Photoshop::_RGBColor::PutGreen ( double _arg1 ) {
    _com_dispatch_method(this, 0x70524776, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(379)
inline double Photoshop::_RGBColor::GetBlue ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x70524276, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(380)
inline void Photoshop::_RGBColor::PutBlue ( double _arg1 ) {
    _com_dispatch_method(this, 0x70524276, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(381)
inline _bstr_t Photoshop::_RGBColor::GetHexValue ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x70524878, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(382)
inline void Photoshop::_RGBColor::PutHexValue ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x70524878, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(383)
inline Photoshop::_ApplicationPtr Photoshop::_RGBColor::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(384)
inline void Photoshop::_RGBColor::PutObjectValue ( struct _RGBColor * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(385)
inline void Photoshop::_RGBColor::PutRefObjectValue ( struct _RGBColor * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _GrayColor wrapper method implementations
//

#pragma implementation_key(386)
inline double Photoshop::_GrayColor::GetGray ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x70477276, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(387)
inline void Photoshop::_GrayColor::PutGray ( double _arg1 ) {
    _com_dispatch_method(this, 0x70477276, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(388)
inline Photoshop::_ApplicationPtr Photoshop::_GrayColor::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(389)
inline void Photoshop::_GrayColor::PutObjectValue ( struct _GrayColor * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(390)
inline void Photoshop::_GrayColor::PutRefObjectValue ( struct _GrayColor * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _CMYKColor wrapper method implementations
//

#pragma implementation_key(391)
inline double Photoshop::_CMYKColor::GetCyan ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x70434376, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(392)
inline void Photoshop::_CMYKColor::PutCyan ( double _arg1 ) {
    _com_dispatch_method(this, 0x70434376, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(393)
inline double Photoshop::_CMYKColor::GetMagenta ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x70434d76, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(394)
inline void Photoshop::_CMYKColor::PutMagenta ( double _arg1 ) {
    _com_dispatch_method(this, 0x70434d76, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(395)
inline double Photoshop::_CMYKColor::GetYellow ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x70435976, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(396)
inline void Photoshop::_CMYKColor::PutYellow ( double _arg1 ) {
    _com_dispatch_method(this, 0x70435976, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(397)
inline double Photoshop::_CMYKColor::GetBlack ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x70434b76, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(398)
inline void Photoshop::_CMYKColor::PutBlack ( double _arg1 ) {
    _com_dispatch_method(this, 0x70434b76, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(399)
inline Photoshop::_ApplicationPtr Photoshop::_CMYKColor::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(400)
inline void Photoshop::_CMYKColor::PutObjectValue ( struct _CMYKColor * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(401)
inline void Photoshop::_CMYKColor::PutRefObjectValue ( struct _CMYKColor * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _LabColor wrapper method implementations
//

#pragma implementation_key(402)
inline double Photoshop::_LabColor::GetL ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x704c624c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(403)
inline void Photoshop::_LabColor::PutL ( double _arg1 ) {
    _com_dispatch_method(this, 0x704c624c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(404)
inline double Photoshop::_LabColor::GetA ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x704c6261, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(405)
inline void Photoshop::_LabColor::PutA ( double _arg1 ) {
    _com_dispatch_method(this, 0x704c6261, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(406)
inline double Photoshop::_LabColor::GetB ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x704c6262, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(407)
inline void Photoshop::_LabColor::PutB ( double _arg1 ) {
    _com_dispatch_method(this, 0x704c6262, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(408)
inline Photoshop::_ApplicationPtr Photoshop::_LabColor::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(409)
inline void Photoshop::_LabColor::PutObjectValue ( struct _LabColor * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(410)
inline void Photoshop::_LabColor::PutRefObjectValue ( struct _LabColor * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _HSBColor wrapper method implementations
//

#pragma implementation_key(411)
inline double Photoshop::_HSBColor::GetHue ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x70487565, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(412)
inline void Photoshop::_HSBColor::PutHue ( double _arg1 ) {
    _com_dispatch_method(this, 0x70487565, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(413)
inline double Photoshop::_HSBColor::GetSaturation ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x70536174, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(414)
inline void Photoshop::_HSBColor::PutSaturation ( double _arg1 ) {
    _com_dispatch_method(this, 0x70536174, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(415)
inline double Photoshop::_HSBColor::GetBrightness ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4268746e, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(416)
inline void Photoshop::_HSBColor::PutBrightness ( double _arg1 ) {
    _com_dispatch_method(this, 0x4268746e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(417)
inline Photoshop::_ApplicationPtr Photoshop::_HSBColor::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(418)
inline void Photoshop::_HSBColor::PutObjectValue ( struct _HSBColor * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(419)
inline void Photoshop::_HSBColor::PutRefObjectValue ( struct _HSBColor * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface LayerSet wrapper method implementations
//

#pragma implementation_key(420)
inline _variant_t Photoshop::LayerSet::GetEnabledChannels ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x456e4368, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(421)
inline void Photoshop::LayerSet::PutEnabledChannels ( const _variant_t & _arg1 ) {
    _com_dispatch_method(this, 0x456e4368, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000c", &_arg1);
}

#pragma implementation_key(422)
inline Photoshop::LayersPtr Photoshop::LayerSet::GetLayers ( ) {
    struct Layers * _result = 0;
    _com_dispatch_method(this, 0x634c7972, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LayersPtr(_result, false);
}

#pragma implementation_key(423)
inline Photoshop::LayerSetsPtr Photoshop::LayerSet::GetLayerSets ( ) {
    struct LayerSets * _result = 0;
    _com_dispatch_method(this, 0x634c5a74, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LayerSetsPtr(_result, false);
}

#pragma implementation_key(424)
inline Photoshop::ArtLayersPtr Photoshop::LayerSet::GetArtLayers ( ) {
    struct ArtLayers * _result = 0;
    _com_dispatch_method(this, 0x63434c72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ArtLayersPtr(_result, false);
}

#pragma implementation_key(425)
inline IDispatchPtr Photoshop::LayerSet::GetLayer ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x53436c73, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(426)
inline _bstr_t Photoshop::LayerSet::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x706e616d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(427)
inline void Photoshop::LayerSet::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x706e616d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(428)
inline VARIANT_BOOL Photoshop::LayerSet::GetAllLocked ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x416c4c63, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(429)
inline void Photoshop::LayerSet::PutAllLocked ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x416c4c63, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(430)
inline enum Photoshop::PsBlendMode Photoshop::LayerSet::GetBlendMode ( ) {
    enum PsBlendMode _result;
    _com_dispatch_method(this, 0x426c4d64, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(431)
inline void Photoshop::LayerSet::PutBlendMode ( enum PsBlendMode _arg1 ) {
    _com_dispatch_method(this, 0x426c4d64, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(432)
inline _variant_t Photoshop::LayerSet::GetLinkedLayers ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x4c6b6564, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(433)
inline double Photoshop::LayerSet::GetOpacity ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4f706374, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(434)
inline void Photoshop::LayerSet::PutOpacity ( double _arg1 ) {
    _com_dispatch_method(this, 0x4f706374, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(435)
inline VARIANT_BOOL Photoshop::LayerSet::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70565362, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(436)
inline void Photoshop::LayerSet::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70565362, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(437)
inline enum Photoshop::PsLayerType Photoshop::LayerSet::GetLayerType ( ) {
    enum PsLayerType _result;
    _com_dispatch_method(this, 0x74797065, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(438)
inline Photoshop::ArtLayerPtr Photoshop::LayerSet::GetArtLayer ( ) {
    struct ArtLayer * _result = 0;
    _com_dispatch_method(this, 0x4c41744c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ArtLayerPtr(_result, false);
}

#pragma implementation_key(439)
inline Photoshop::LayerSetPtr Photoshop::LayerSet::GetLayerSet ( ) {
    struct LayerSet * _result = 0;
    _com_dispatch_method(this, 0x4c41745a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LayerSetPtr(_result, false);
}

#pragma implementation_key(440)
inline _variant_t Photoshop::LayerSet::GetBounds ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x426e6473, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(441)
inline Photoshop::_ApplicationPtr Photoshop::LayerSet::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(442)
inline IDispatchPtr Photoshop::LayerSet::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(443)
inline Photoshop::ArtLayerPtr Photoshop::LayerSet::Merge ( ) {
    struct ArtLayer * _result = 0;
    _com_dispatch_method(this, 0x4d674c5a, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return ArtLayerPtr(_result, false);
}

#pragma implementation_key(444)
inline HRESULT Photoshop::LayerSet::Unlink ( ) {
    return _com_dispatch_method(this, 0x556c6e6b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(445)
inline HRESULT Photoshop::LayerSet::Link ( IDispatch * With ) {
    return _com_dispatch_method(this, 0x6c6b546f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", With);
}

#pragma implementation_key(446)
inline HRESULT Photoshop::LayerSet::Translate ( const _variant_t & DeltaX, const _variant_t & DeltaY ) {
    return _com_dispatch_method(this, 0x4d765073, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c", &DeltaX, &DeltaY);
}

#pragma implementation_key(447)
inline HRESULT Photoshop::LayerSet::Rotate ( double Angle, const _variant_t & Anchor ) {
    return _com_dispatch_method(this, 0x526f7461, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x080c", Angle, &Anchor);
}

#pragma implementation_key(448)
inline HRESULT Photoshop::LayerSet::Resize ( const _variant_t & Horizontal, const _variant_t & Vertical, const _variant_t & Anchor ) {
    return _com_dispatch_method(this, 0x53636c65, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c", &Horizontal, &Vertical, &Anchor);
}

#pragma implementation_key(449)
inline HRESULT Photoshop::LayerSet::MoveToBeginning ( IDispatch * Container ) {
    return _com_dispatch_method(this, 0x4d764566, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Container);
}

#pragma implementation_key(450)
inline HRESULT Photoshop::LayerSet::MoveToEnd ( IDispatch * Container ) {
    return _com_dispatch_method(this, 0x4d764565, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Container);
}

#pragma implementation_key(451)
inline HRESULT Photoshop::LayerSet::MoveBefore ( IDispatch * RelativeObject ) {
    return _com_dispatch_method(this, 0x4d764562, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", RelativeObject);
}

#pragma implementation_key(452)
inline HRESULT Photoshop::LayerSet::MoveAfter ( IDispatch * RelativeObject ) {
    return _com_dispatch_method(this, 0x4d764561, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", RelativeObject);
}

#pragma implementation_key(453)
inline IDispatchPtr Photoshop::LayerSet::Duplicate ( const _variant_t & RelativeObject, const _variant_t & InsertionLocation ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x636c6f6e, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &RelativeObject, &InsertionLocation);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(454)
inline HRESULT Photoshop::LayerSet::Move ( IDispatch * RelativeObject, enum PsElementPlacement InsertionLocation ) {
    return _com_dispatch_method(this, 0x6d6f7665, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0003", RelativeObject, InsertionLocation);
}

#pragma implementation_key(455)
inline HRESULT Photoshop::LayerSet::Delete ( ) {
    return _com_dispatch_method(this, 0x64656c6f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface Layers wrapper method implementations
//

#pragma implementation_key(456)
inline Photoshop::_ApplicationPtr Photoshop::Layers::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(457)
inline IDispatchPtr Photoshop::Layers::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(458)
inline long Photoshop::Layers::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x636e7465, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(459)
inline HRESULT Photoshop::Layers::Remove ( IDispatch * Item ) {
    return _com_dispatch_method(this, 0x64656c6f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Item);
}

#pragma implementation_key(460)
inline HRESULT Photoshop::Layers::RemoveAll ( ) {
    return _com_dispatch_method(this, 0x5241456c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(461)
inline IDispatchPtr Photoshop::Layers::GetItem ( const _variant_t & ItemKey ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &ItemKey);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(462)
inline long Photoshop::Layers::Index ( IDispatch * ItemPtr ) {
    long _result = 0;
    _com_dispatch_method(this, 0x70696478, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0009", ItemPtr);
    return _result;
}

//
// dispinterface LayerSets wrapper method implementations
//

#pragma implementation_key(463)
inline Photoshop::_ApplicationPtr Photoshop::LayerSets::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(464)
inline IDispatchPtr Photoshop::LayerSets::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(465)
inline long Photoshop::LayerSets::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x636e7465, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(466)
inline HRESULT Photoshop::LayerSets::Remove ( struct LayerSet * Item ) {
    return _com_dispatch_method(this, 0x64656c6f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Item);
}

#pragma implementation_key(467)
inline HRESULT Photoshop::LayerSets::RemoveAll ( ) {
    return _com_dispatch_method(this, 0x5241456c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(468)
inline Photoshop::LayerSetPtr Photoshop::LayerSets::GetItem ( const _variant_t & ItemKey ) {
    struct LayerSet * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &ItemKey);
    return LayerSetPtr(_result, false);
}

#pragma implementation_key(469)
inline long Photoshop::LayerSets::Index ( struct LayerSet * ItemPtr ) {
    long _result = 0;
    _com_dispatch_method(this, 0x70696478, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0009", ItemPtr);
    return _result;
}

#pragma implementation_key(470)
inline Photoshop::LayerSetPtr Photoshop::LayerSets::Add ( ) {
    struct LayerSet * _result = 0;
    _com_dispatch_method(this, 0x634c5a6a, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return LayerSetPtr(_result, false);
}

//
// dispinterface ArtLayers wrapper method implementations
//

#pragma implementation_key(471)
inline Photoshop::_ApplicationPtr Photoshop::ArtLayers::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(472)
inline IDispatchPtr Photoshop::ArtLayers::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(473)
inline long Photoshop::ArtLayers::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x636e7465, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(474)
inline HRESULT Photoshop::ArtLayers::Remove ( struct ArtLayer * Item ) {
    return _com_dispatch_method(this, 0x64656c6f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Item);
}

#pragma implementation_key(475)
inline HRESULT Photoshop::ArtLayers::RemoveAll ( ) {
    return _com_dispatch_method(this, 0x5241456c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(476)
inline Photoshop::ArtLayerPtr Photoshop::ArtLayers::GetItem ( const _variant_t & ItemKey ) {
    struct ArtLayer * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &ItemKey);
    return ArtLayerPtr(_result, false);
}

#pragma implementation_key(477)
inline long Photoshop::ArtLayers::Index ( struct ArtLayer * ItemPtr ) {
    long _result = 0;
    _com_dispatch_method(this, 0x70696478, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0009", ItemPtr);
    return _result;
}

#pragma implementation_key(478)
inline Photoshop::ArtLayerPtr Photoshop::ArtLayers::Add ( ) {
    struct ArtLayer * _result = 0;
    _com_dispatch_method(this, 0x63434c6a, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return ArtLayerPtr(_result, false);
}

//
// dispinterface HistoryState wrapper method implementations
//

#pragma implementation_key(479)
inline _bstr_t Photoshop::HistoryState::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x706e616d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(480)
inline VARIANT_BOOL Photoshop::HistoryState::GetSnapshot ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x48536874, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(481)
inline Photoshop::_ApplicationPtr Photoshop::HistoryState::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(482)
inline IDispatchPtr Photoshop::HistoryState::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface DocumentInfo wrapper method implementations
//

#pragma implementation_key(483)
inline _bstr_t Photoshop::DocumentInfo::GetTitle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44693232, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(484)
inline void Photoshop::DocumentInfo::PutTitle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x44693232, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(485)
inline _bstr_t Photoshop::DocumentInfo::GetAuthor ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44693231, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(486)
inline void Photoshop::DocumentInfo::PutAuthor ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x44693231, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(487)
inline _bstr_t Photoshop::DocumentInfo::GetAuthorPosition ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44693233, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(488)
inline void Photoshop::DocumentInfo::PutAuthorPosition ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x44693233, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(489)
inline _bstr_t Photoshop::DocumentInfo::GetCaption ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44693031, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(490)
inline void Photoshop::DocumentInfo::PutCaption ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x44693031, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(491)
inline _bstr_t Photoshop::DocumentInfo::GetCaptionWriter ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44693032, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(492)
inline void Photoshop::DocumentInfo::PutCaptionWriter ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x44693032, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(493)
inline _bstr_t Photoshop::DocumentInfo::GetJobName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44693234, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(494)
inline void Photoshop::DocumentInfo::PutJobName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x44693234, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(495)
inline enum Photoshop::PsCopyrightedType Photoshop::DocumentInfo::GetCopyrighted ( ) {
    enum PsCopyrightedType _result;
    _com_dispatch_method(this, 0x44693139, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(496)
inline void Photoshop::DocumentInfo::PutCopyrighted ( enum PsCopyrightedType _arg1 ) {
    _com_dispatch_method(this, 0x44693139, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(497)
inline _bstr_t Photoshop::DocumentInfo::GetCopyrightNotice ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44693230, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(498)
inline void Photoshop::DocumentInfo::PutCopyrightNotice ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x44693230, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(499)
inline _bstr_t Photoshop::DocumentInfo::GetOwnerUrl ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7055726c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(500)
inline void Photoshop::DocumentInfo::PutOwnerUrl ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7055726c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(501)
inline _variant_t Photoshop::DocumentInfo::GetKeywords ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x44693035, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(502)
inline void Photoshop::DocumentInfo::PutKeywords ( const _variant_t & _arg1 ) {
    _com_dispatch_method(this, 0x44693035, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000c", &_arg1);
}

#pragma implementation_key(503)
inline _bstr_t Photoshop::DocumentInfo::GetCategory ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44693036, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(504)
inline void Photoshop::DocumentInfo::PutCategory ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x44693036, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(505)
inline _variant_t Photoshop::DocumentInfo::GetSupplementalCategories ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x44693037, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(506)
inline void Photoshop::DocumentInfo::PutSupplementalCategories ( const _variant_t & _arg1 ) {
    _com_dispatch_method(this, 0x44693037, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000c", &_arg1);
}

#pragma implementation_key(507)
inline _bstr_t Photoshop::DocumentInfo::GetCreationDate ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44693134, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(508)
inline void Photoshop::DocumentInfo::PutCreationDate ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x44693134, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(509)
inline _bstr_t Photoshop::DocumentInfo::GetCity ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44693135, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(510)
inline void Photoshop::DocumentInfo::PutCity ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x44693135, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(511)
inline _bstr_t Photoshop::DocumentInfo::GetProvinceState ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44693136, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(512)
inline void Photoshop::DocumentInfo::PutProvinceState ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x44693136, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(513)
inline _bstr_t Photoshop::DocumentInfo::GetCountry ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44693137, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(514)
inline void Photoshop::DocumentInfo::PutCountry ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x44693137, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(515)
inline _bstr_t Photoshop::DocumentInfo::GetCredit ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44693131, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(516)
inline void Photoshop::DocumentInfo::PutCredit ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x44693131, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(517)
inline _bstr_t Photoshop::DocumentInfo::GetSource ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44693132, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(518)
inline void Photoshop::DocumentInfo::PutSource ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x44693132, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(519)
inline _bstr_t Photoshop::DocumentInfo::GetHeadline ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44693033, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(520)
inline void Photoshop::DocumentInfo::PutHeadline ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x44693033, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(521)
inline _bstr_t Photoshop::DocumentInfo::GetInstructions ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44693034, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(522)
inline void Photoshop::DocumentInfo::PutInstructions ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x44693034, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(523)
inline _bstr_t Photoshop::DocumentInfo::GetTransmissionReference ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44693138, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(524)
inline void Photoshop::DocumentInfo::PutTransmissionReference ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x44693138, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(525)
inline enum Photoshop::PsUrgency Photoshop::DocumentInfo::GetUrgency ( ) {
    enum PsUrgency _result;
    _com_dispatch_method(this, 0x44693038, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(526)
inline void Photoshop::DocumentInfo::PutUrgency ( enum PsUrgency _arg1 ) {
    _com_dispatch_method(this, 0x44693038, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(527)
inline _variant_t Photoshop::DocumentInfo::GetEXIF ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x44693235, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(528)
inline Photoshop::_ApplicationPtr Photoshop::DocumentInfo::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(529)
inline IDispatchPtr Photoshop::DocumentInfo::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface Selection wrapper method implementations
//

#pragma implementation_key(530)
inline _variant_t Photoshop::Selection::GetBounds ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x426e6473, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(531)
inline VARIANT_BOOL Photoshop::Selection::GetSolid ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x536c6964, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(532)
inline Photoshop::_ApplicationPtr Photoshop::Selection::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(533)
inline IDispatchPtr Photoshop::Selection::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(534)
inline HRESULT Photoshop::Selection::Clear ( ) {
    return _com_dispatch_method(this, 0x4d413031, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(535)
inline HRESULT Photoshop::Selection::Copy ( const _variant_t & Merge ) {
    return _com_dispatch_method(this, 0x636f7079, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Merge);
}

#pragma implementation_key(536)
inline HRESULT Photoshop::Selection::Cut ( ) {
    return _com_dispatch_method(this, 0x63757420, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(537)
inline HRESULT Photoshop::Selection::SelectBorder ( double Width ) {
    return _com_dispatch_method(this, 0x42726472, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Width);
}

#pragma implementation_key(538)
inline HRESULT Photoshop::Selection::Contract ( double By ) {
    return _com_dispatch_method(this, 0x53437472, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", By);
}

#pragma implementation_key(539)
inline HRESULT Photoshop::Selection::Fill ( const _variant_t & FillType, const _variant_t & Mode, const _variant_t & Opacity, const _variant_t & PreserveTransparency ) {
    return _com_dispatch_method(this, 0x46696c6c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c\x080c\x080c\x080c", &FillType, &Mode, &Opacity, &PreserveTransparency);
}

#pragma implementation_key(540)
inline HRESULT Photoshop::Selection::Stroke ( const _variant_t & StrokeColor, long Width, const _variant_t & Location, const _variant_t & Mode, const _variant_t & Opacity, const _variant_t & PreserveTransparency ) {
    return _com_dispatch_method(this, 0x53746b65, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c\x0003\x080c\x080c\x080c\x080c", &StrokeColor, Width, &Location, &Mode, &Opacity, &PreserveTransparency);
}

#pragma implementation_key(541)
inline HRESULT Photoshop::Selection::SelectAll ( ) {
    return _com_dispatch_method(this, 0x5363416c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(542)
inline HRESULT Photoshop::Selection::Deselect ( ) {
    return _com_dispatch_method(this, 0x44736c74, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(543)
inline HRESULT Photoshop::Selection::Select ( const _variant_t & Region, const _variant_t & Type, const _variant_t & Feather, const _variant_t & AntiAlias ) {
    return _com_dispatch_method(this, 0x736c6374, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c\x080c\x080c\x080c", &Region, &Type, &Feather, &AntiAlias);
}

#pragma implementation_key(544)
inline HRESULT Photoshop::Selection::Expand ( double By ) {
    return _com_dispatch_method(this, 0x58706e64, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", By);
}

#pragma implementation_key(545)
inline HRESULT Photoshop::Selection::Feather ( double By ) {
    return _com_dispatch_method(this, 0x46746872, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", By);
}

#pragma implementation_key(546)
inline HRESULT Photoshop::Selection::Grow ( long Tolerance, VARIANT_BOOL AntiAlias ) {
    return _com_dispatch_method(this, 0x47726f77, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000b", Tolerance, AntiAlias);
}

#pragma implementation_key(547)
inline HRESULT Photoshop::Selection::Invert ( ) {
    return _com_dispatch_method(this, 0x4976536c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(548)
inline HRESULT Photoshop::Selection::Similar ( long Tolerance, VARIANT_BOOL AntiAlias ) {
    return _com_dispatch_method(this, 0x536d6c72, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000b", Tolerance, AntiAlias);
}

#pragma implementation_key(549)
inline HRESULT Photoshop::Selection::Smooth ( long Radius ) {
    return _com_dispatch_method(this, 0x50537468, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Radius);
}

#pragma implementation_key(550)
inline HRESULT Photoshop::Selection::Store ( struct Channel * Into, const _variant_t & Combination ) {
    return _com_dispatch_method(this, 0x5376536c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x080c", Into, &Combination);
}

#pragma implementation_key(551)
inline HRESULT Photoshop::Selection::Load ( struct Channel * From, const _variant_t & Combination, const _variant_t & Inverting ) {
    return _com_dispatch_method(this, 0x4c64536c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x080c\x080c", From, &Combination, &Inverting);
}

#pragma implementation_key(552)
inline HRESULT Photoshop::Selection::Translate ( const _variant_t & DeltaX, const _variant_t & DeltaY ) {
    return _com_dispatch_method(this, 0x4d765073, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c", &DeltaX, &DeltaY);
}

#pragma implementation_key(553)
inline HRESULT Photoshop::Selection::TranslateBoundary ( const _variant_t & DeltaX, const _variant_t & DeltaY ) {
    return _com_dispatch_method(this, 0x4d764264, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c", &DeltaX, &DeltaY);
}

#pragma implementation_key(554)
inline HRESULT Photoshop::Selection::Rotate ( double Angle, const _variant_t & Anchor ) {
    return _com_dispatch_method(this, 0x526f7461, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x080c", Angle, &Anchor);
}

#pragma implementation_key(555)
inline HRESULT Photoshop::Selection::RotateBoundary ( double Angle, const _variant_t & Anchor ) {
    return _com_dispatch_method(this, 0x526f7442, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x080c", Angle, &Anchor);
}

#pragma implementation_key(556)
inline HRESULT Photoshop::Selection::Resize ( const _variant_t & Horizontal, const _variant_t & Vertical, const _variant_t & Anchor ) {
    return _com_dispatch_method(this, 0x53636c65, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c", &Horizontal, &Vertical, &Anchor);
}

#pragma implementation_key(557)
inline HRESULT Photoshop::Selection::ResizeBoundary ( const _variant_t & Horizontal, const _variant_t & Vertical, const _variant_t & Anchor ) {
    return _com_dispatch_method(this, 0x53634264, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c", &Horizontal, &Vertical, &Anchor);
}

#pragma implementation_key(558)
inline HRESULT Photoshop::Selection::MakeWorkPath ( const _variant_t & Tolerance ) {
    return _com_dispatch_method(this, 0x50543136, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Tolerance);
}

//
// dispinterface Channel wrapper method implementations
//

#pragma implementation_key(559)
inline _variant_t Photoshop::Channel::GetHistogram ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x48697374, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(560)
inline _bstr_t Photoshop::Channel::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x706e616d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(561)
inline void Photoshop::Channel::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x706e616d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(562)
inline enum Photoshop::PsChannelType Photoshop::Channel::GetKind ( ) {
    enum PsChannelType _result;
    _com_dispatch_method(this, 0x4b696e64, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(563)
inline void Photoshop::Channel::PutKind ( enum PsChannelType _arg1 ) {
    _com_dispatch_method(this, 0x4b696e64, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(564)
inline double Photoshop::Channel::GetOpacity ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4f706374, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(565)
inline void Photoshop::Channel::PutOpacity ( double _arg1 ) {
    _com_dispatch_method(this, 0x4f706374, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(566)
inline VARIANT_BOOL Photoshop::Channel::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70565362, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(567)
inline void Photoshop::Channel::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70565362, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(568)
inline Photoshop::_SolidColorPtr Photoshop::Channel::GetColor ( ) {
    struct _SolidColor * _result = 0;
    _com_dispatch_method(this, 0x70434343, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _SolidColorPtr(_result, false);
}

#pragma implementation_key(569)
inline void Photoshop::Channel::PutColor ( struct _SolidColor * _arg1 ) {
    _com_dispatch_method(this, 0x70434343, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(570)
inline void Photoshop::Channel::PutRefColor ( struct _SolidColor * _arg1 ) {
    _com_dispatch_method(this, 0x70434343, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(571)
inline Photoshop::_ApplicationPtr Photoshop::Channel::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(572)
inline IDispatchPtr Photoshop::Channel::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(573)
inline HRESULT Photoshop::Channel::Merge ( ) {
    return _com_dispatch_method(this, 0x4d4c5a43, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(574)
inline Photoshop::ChannelPtr Photoshop::Channel::Duplicate ( const _variant_t & TargetDocument ) {
    struct Channel * _result = 0;
    _com_dispatch_method(this, 0x44704368, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c", &TargetDocument);
    return ChannelPtr(_result, false);
}

#pragma implementation_key(575)
inline HRESULT Photoshop::Channel::Delete ( ) {
    return _com_dispatch_method(this, 0x64656c6f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface XMPMetadata wrapper method implementations
//

#pragma implementation_key(576)
inline _bstr_t Photoshop::XMPMetadata::GetRawData ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x70524d64, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(577)
inline void Photoshop::XMPMetadata::PutRawData ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x70524d64, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(578)
inline Photoshop::_ApplicationPtr Photoshop::XMPMetadata::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(579)
inline IDispatchPtr Photoshop::XMPMetadata::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface MeasurementScale wrapper method implementations
//

#pragma implementation_key(580)
inline _bstr_t Photoshop::MeasurementScale::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x706e616d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(581)
inline void Photoshop::MeasurementScale::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x706e616d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(582)
inline long Photoshop::MeasurementScale::GetPixelLength ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6d73706c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(583)
inline void Photoshop::MeasurementScale::PutPixelLength ( long _arg1 ) {
    _com_dispatch_method(this, 0x6d73706c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(584)
inline double Photoshop::MeasurementScale::GetLogicalLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6d736c6c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(585)
inline void Photoshop::MeasurementScale::PutLogicalLength ( double _arg1 ) {
    _com_dispatch_method(this, 0x6d736c6c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(586)
inline _bstr_t Photoshop::MeasurementScale::GetLogicalUnits ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6d736c75, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(587)
inline void Photoshop::MeasurementScale::PutLogicalUnits ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6d736c75, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(588)
inline Photoshop::_ApplicationPtr Photoshop::MeasurementScale::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(589)
inline IDispatchPtr Photoshop::MeasurementScale::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface Channels wrapper method implementations
//

#pragma implementation_key(590)
inline Photoshop::_ApplicationPtr Photoshop::Channels::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(591)
inline IDispatchPtr Photoshop::Channels::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(592)
inline long Photoshop::Channels::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x636e7465, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(593)
inline HRESULT Photoshop::Channels::Remove ( struct Channel * Item ) {
    return _com_dispatch_method(this, 0x64656c6f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Item);
}

#pragma implementation_key(594)
inline HRESULT Photoshop::Channels::RemoveAll ( ) {
    return _com_dispatch_method(this, 0x5241456c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(595)
inline Photoshop::ChannelPtr Photoshop::Channels::GetItem ( const _variant_t & ItemKey ) {
    struct Channel * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &ItemKey);
    return ChannelPtr(_result, false);
}

#pragma implementation_key(596)
inline long Photoshop::Channels::Index ( struct Channel * ItemPtr ) {
    long _result = 0;
    _com_dispatch_method(this, 0x70696478, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0009", ItemPtr);
    return _result;
}

#pragma implementation_key(597)
inline Photoshop::ChannelPtr Photoshop::Channels::Add ( ) {
    struct Channel * _result = 0;
    _com_dispatch_method(this, 0x6343486e, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return ChannelPtr(_result, false);
}

//
// dispinterface HistoryStates wrapper method implementations
//

#pragma implementation_key(598)
inline Photoshop::_ApplicationPtr Photoshop::HistoryStates::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(599)
inline IDispatchPtr Photoshop::HistoryStates::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(600)
inline long Photoshop::HistoryStates::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x636e7465, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(601)
inline Photoshop::HistoryStatePtr Photoshop::HistoryStates::GetItem ( const _variant_t & ItemKey ) {
    struct HistoryState * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &ItemKey);
    return HistoryStatePtr(_result, false);
}

#pragma implementation_key(602)
inline long Photoshop::HistoryStates::Index ( struct HistoryState * ItemPtr ) {
    long _result = 0;
    _com_dispatch_method(this, 0x70696478, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0009", ItemPtr);
    return _result;
}

//
// dispinterface LayerComps wrapper method implementations
//

#pragma implementation_key(603)
inline Photoshop::_ApplicationPtr Photoshop::LayerComps::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(604)
inline IDispatchPtr Photoshop::LayerComps::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(605)
inline long Photoshop::LayerComps::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x636e7465, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(606)
inline HRESULT Photoshop::LayerComps::RemoveAll ( ) {
    return _com_dispatch_method(this, 0x5241456c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(607)
inline Photoshop::LayerCompPtr Photoshop::LayerComps::GetItem ( const _variant_t & ItemKey ) {
    struct LayerComp * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &ItemKey);
    return LayerCompPtr(_result, false);
}

#pragma implementation_key(608)
inline long Photoshop::LayerComps::Index ( struct LayerComp * ItemPtr ) {
    long _result = 0;
    _com_dispatch_method(this, 0x70696478, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0009", ItemPtr);
    return _result;
}

#pragma implementation_key(609)
inline Photoshop::LayerCompPtr Photoshop::LayerComps::Add ( _bstr_t Name, const _variant_t & Comment, const _variant_t & Appearance, const _variant_t & Position, const _variant_t & Visibility ) {
    struct LayerComp * _result = 0;
    _com_dispatch_method(this, 0x4c433031, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x080c\x080c\x080c\x080c", (BSTR)Name, &Comment, &Appearance, &Position, &Visibility);
    return LayerCompPtr(_result, false);
}

//
// dispinterface LayerComp wrapper method implementations
//

#pragma implementation_key(610)
inline _bstr_t Photoshop::LayerComp::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x706e616d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(611)
inline void Photoshop::LayerComp::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x706e616d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(612)
inline _variant_t Photoshop::LayerComp::GetComment ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x4c433032, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(613)
inline void Photoshop::LayerComp::PutComment ( const _variant_t & _arg1 ) {
    _com_dispatch_method(this, 0x4c433032, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000c", &_arg1);
}

#pragma implementation_key(614)
inline VARIANT_BOOL Photoshop::LayerComp::GetAppearance ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4c433033, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(615)
inline void Photoshop::LayerComp::PutAppearance ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4c433033, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(616)
inline VARIANT_BOOL Photoshop::LayerComp::GetPosition ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4f72676e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(617)
inline void Photoshop::LayerComp::PutPosition ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4f72676e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(618)
inline VARIANT_BOOL Photoshop::LayerComp::GetVisibility ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4c433035, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(619)
inline void Photoshop::LayerComp::PutVisibility ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4c433035, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(620)
inline VARIANT_BOOL Photoshop::LayerComp::GetSelected ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4c433036, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(621)
inline Photoshop::_ApplicationPtr Photoshop::LayerComp::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(622)
inline IDispatchPtr Photoshop::LayerComp::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(623)
inline HRESULT Photoshop::LayerComp::Apply ( ) {
    return _com_dispatch_method(this, 0x50473031, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(624)
inline HRESULT Photoshop::LayerComp::Recapture ( ) {
    return _com_dispatch_method(this, 0x50473032, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(625)
inline HRESULT Photoshop::LayerComp::ResetFromComp ( ) {
    return _com_dispatch_method(this, 0x50473632, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(626)
inline HRESULT Photoshop::LayerComp::Delete ( ) {
    return _com_dispatch_method(this, 0x64656c6f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface PathItems wrapper method implementations
//

#pragma implementation_key(627)
inline Photoshop::_ApplicationPtr Photoshop::PathItems::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(628)
inline IDispatchPtr Photoshop::PathItems::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(629)
inline long Photoshop::PathItems::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x636e7465, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(630)
inline HRESULT Photoshop::PathItems::RemoveAll ( ) {
    return _com_dispatch_method(this, 0x5241456c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(631)
inline Photoshop::PathItemPtr Photoshop::PathItems::GetItem ( const _variant_t & ItemKey ) {
    struct PathItem * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &ItemKey);
    return PathItemPtr(_result, false);
}

#pragma implementation_key(632)
inline long Photoshop::PathItems::Index ( struct PathItem * ItemPtr ) {
    long _result = 0;
    _com_dispatch_method(this, 0x70696478, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0009", ItemPtr);
    return _result;
}

#pragma implementation_key(633)
inline Photoshop::PathItemPtr Photoshop::PathItems::Add ( _bstr_t Name, const _variant_t & EntirePath ) {
    struct PathItem * _result = 0;
    _com_dispatch_method(this, 0x50543033, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x000c", (BSTR)Name, &EntirePath);
    return PathItemPtr(_result, false);
}

//
// dispinterface PathItem wrapper method implementations
//

#pragma implementation_key(634)
inline _bstr_t Photoshop::PathItem::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x706e616d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(635)
inline void Photoshop::PathItem::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x706e616d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(636)
inline Photoshop::SubPathItemsPtr Photoshop::PathItem::GetSubPathItems ( ) {
    struct SubPathItems * _result = 0;
    _com_dispatch_method(this, 0x50543433, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SubPathItemsPtr(_result, false);
}

#pragma implementation_key(637)
inline enum Photoshop::PsPathKind Photoshop::PathItem::GetKind ( ) {
    enum PsPathKind _result;
    _com_dispatch_method(this, 0x4b696e64, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(638)
inline void Photoshop::PathItem::PutKind ( enum PsPathKind _arg1 ) {
    _com_dispatch_method(this, 0x4b696e64, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(639)
inline Photoshop::_ApplicationPtr Photoshop::PathItem::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(640)
inline IDispatchPtr Photoshop::PathItem::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(641)
inline Photoshop::PathItemPtr Photoshop::PathItem::Duplicate ( const _variant_t & Name ) {
    struct PathItem * _result = 0;
    _com_dispatch_method(this, 0x636c6f6e, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c", &Name);
    return PathItemPtr(_result, false);
}

#pragma implementation_key(642)
inline HRESULT Photoshop::PathItem::MakeSelection ( const _variant_t & Feather, const _variant_t & AntiAlias, const _variant_t & Operation ) {
    return _com_dispatch_method(this, 0x50543133, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c", &Feather, &AntiAlias, &Operation);
}

#pragma implementation_key(643)
inline HRESULT Photoshop::PathItem::FillPath ( const _variant_t & FillColor, const _variant_t & Mode, const _variant_t & Opacity, const _variant_t & PreserveTransparency, const _variant_t & Feather, const _variant_t & AntiAlias, const _variant_t & WholePath ) {
    return _com_dispatch_method(this, 0x50543134, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &FillColor, &Mode, &Opacity, &PreserveTransparency, &Feather, &AntiAlias, &WholePath);
}

#pragma implementation_key(644)
inline HRESULT Photoshop::PathItem::StrokePath ( const _variant_t & Tool, const _variant_t & SimulatePressure ) {
    return _com_dispatch_method(this, 0x50543135, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c", &Tool, &SimulatePressure);
}

#pragma implementation_key(645)
inline HRESULT Photoshop::PathItem::MakeClippingPath ( const _variant_t & Flatness ) {
    return _com_dispatch_method(this, 0x50543137, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Flatness);
}

#pragma implementation_key(646)
inline HRESULT Photoshop::PathItem::Select ( ) {
    return _com_dispatch_method(this, 0x736c6374, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(647)
inline HRESULT Photoshop::PathItem::Deselect ( ) {
    return _com_dispatch_method(this, 0x44736c74, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(648)
inline HRESULT Photoshop::PathItem::Delete ( ) {
    return _com_dispatch_method(this, 0x64656c6f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface SubPathItems wrapper method implementations
//

#pragma implementation_key(649)
inline Photoshop::_ApplicationPtr Photoshop::SubPathItems::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(650)
inline IDispatchPtr Photoshop::SubPathItems::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(651)
inline long Photoshop::SubPathItems::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x636e7465, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(652)
inline Photoshop::SubPathItemPtr Photoshop::SubPathItems::GetItem ( const _variant_t & ItemKey ) {
    struct SubPathItem * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &ItemKey);
    return SubPathItemPtr(_result, false);
}

#pragma implementation_key(653)
inline long Photoshop::SubPathItems::Index ( struct SubPathItem * ItemPtr ) {
    long _result = 0;
    _com_dispatch_method(this, 0x70696478, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0009", ItemPtr);
    return _result;
}

//
// dispinterface SubPathItem wrapper method implementations
//

#pragma implementation_key(654)
inline VARIANT_BOOL Photoshop::SubPathItem::GetClosed ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50543530, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(655)
inline enum Photoshop::PsShapeOperation Photoshop::SubPathItem::GetOperation ( ) {
    enum PsShapeOperation _result;
    _com_dispatch_method(this, 0x50543037, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(656)
inline Photoshop::PathPointsPtr Photoshop::SubPathItem::GetPathPoints ( ) {
    struct PathPoints * _result = 0;
    _com_dispatch_method(this, 0x50543034, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return PathPointsPtr(_result, false);
}

#pragma implementation_key(657)
inline Photoshop::_ApplicationPtr Photoshop::SubPathItem::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(658)
inline IDispatchPtr Photoshop::SubPathItem::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface PathPoints wrapper method implementations
//

#pragma implementation_key(659)
inline Photoshop::_ApplicationPtr Photoshop::PathPoints::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(660)
inline IDispatchPtr Photoshop::PathPoints::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(661)
inline long Photoshop::PathPoints::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x636e7465, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(662)
inline Photoshop::PathPointPtr Photoshop::PathPoints::GetItem ( const _variant_t & ItemKey ) {
    struct PathPoint * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &ItemKey);
    return PathPointPtr(_result, false);
}

#pragma implementation_key(663)
inline long Photoshop::PathPoints::Index ( struct PathPoint * ItemPtr ) {
    long _result = 0;
    _com_dispatch_method(this, 0x70696478, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0009", ItemPtr);
    return _result;
}

//
// dispinterface PathPoint wrapper method implementations
//

#pragma implementation_key(664)
inline _variant_t Photoshop::PathPoint::GetAnchor ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x50543138, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(665)
inline _variant_t Photoshop::PathPoint::GetLeftDirection ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x50543139, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(666)
inline _variant_t Photoshop::PathPoint::GetRightDirection ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x50543230, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(667)
inline enum Photoshop::PsPointKind Photoshop::PathPoint::GetKind ( ) {
    enum PsPointKind _result;
    _com_dispatch_method(this, 0x4b696e64, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(668)
inline Photoshop::_ApplicationPtr Photoshop::PathPoint::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(669)
inline IDispatchPtr Photoshop::PathPoint::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface CountItems wrapper method implementations
//

#pragma implementation_key(670)
inline Photoshop::_ApplicationPtr Photoshop::CountItems::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(671)
inline IDispatchPtr Photoshop::CountItems::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(672)
inline long Photoshop::CountItems::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x636e7465, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(673)
inline HRESULT Photoshop::CountItems::RemoveAll ( ) {
    return _com_dispatch_method(this, 0x5241456c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(674)
inline Photoshop::CountItemPtr Photoshop::CountItems::GetItem ( const _variant_t & ItemKey ) {
    struct CountItem * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &ItemKey);
    return CountItemPtr(_result, false);
}

#pragma implementation_key(675)
inline long Photoshop::CountItems::Index ( struct CountItem * ItemPtr ) {
    long _result = 0;
    _com_dispatch_method(this, 0x70696478, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0009", ItemPtr);
    return _result;
}

#pragma implementation_key(676)
inline Photoshop::CountItemPtr Photoshop::CountItems::Add ( const _variant_t & Position ) {
    struct CountItem * _result = 0;
    _com_dispatch_method(this, 0x43543033, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Position);
    return CountItemPtr(_result, false);
}

//
// dispinterface CountItem wrapper method implementations
//

#pragma implementation_key(677)
inline _variant_t Photoshop::CountItem::GetPosition ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x4f72676e, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(678)
inline Photoshop::_ApplicationPtr Photoshop::CountItem::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(679)
inline IDispatchPtr Photoshop::CountItem::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(680)
inline HRESULT Photoshop::CountItem::Delete ( ) {
    return _com_dispatch_method(this, 0x64656c6f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface ColorSamplers wrapper method implementations
//

#pragma implementation_key(681)
inline Photoshop::_ApplicationPtr Photoshop::ColorSamplers::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(682)
inline IDispatchPtr Photoshop::ColorSamplers::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(683)
inline long Photoshop::ColorSamplers::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x636e7465, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(684)
inline HRESULT Photoshop::ColorSamplers::RemoveAll ( ) {
    return _com_dispatch_method(this, 0x5241456c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(685)
inline Photoshop::ColorSamplerPtr Photoshop::ColorSamplers::GetItem ( const _variant_t & ItemKey ) {
    struct ColorSampler * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &ItemKey);
    return ColorSamplerPtr(_result, false);
}

#pragma implementation_key(686)
inline long Photoshop::ColorSamplers::Index ( struct ColorSampler * ItemPtr ) {
    long _result = 0;
    _com_dispatch_method(this, 0x70696478, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0009", ItemPtr);
    return _result;
}

#pragma implementation_key(687)
inline Photoshop::ColorSamplerPtr Photoshop::ColorSamplers::Add ( const _variant_t & Position ) {
    struct ColorSampler * _result = 0;
    _com_dispatch_method(this, 0x43535330, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Position);
    return ColorSamplerPtr(_result, false);
}

//
// dispinterface ColorSampler wrapper method implementations
//

#pragma implementation_key(688)
inline _variant_t Photoshop::ColorSampler::GetPosition ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x4f72676e, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(689)
inline Photoshop::_SolidColorPtr Photoshop::ColorSampler::GetColor ( ) {
    struct _SolidColor * _result = 0;
    _com_dispatch_method(this, 0x70434343, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _SolidColorPtr(_result, false);
}

#pragma implementation_key(690)
inline Photoshop::_ApplicationPtr Photoshop::ColorSampler::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(691)
inline IDispatchPtr Photoshop::ColorSampler::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(692)
inline HRESULT Photoshop::ColorSampler::Move ( const _variant_t & Position ) {
    return _com_dispatch_method(this, 0x43535335, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &Position);
}

#pragma implementation_key(693)
inline HRESULT Photoshop::ColorSampler::Delete ( ) {
    return _com_dispatch_method(this, 0x64656c6f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface Preferences wrapper method implementations
//

#pragma implementation_key(694)
inline enum Photoshop::PsColorPicker Photoshop::Preferences::GetColorPicker ( ) {
    enum PsColorPicker _result;
    _com_dispatch_method(this, 0x43506b72, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(695)
inline void Photoshop::Preferences::PutColorPicker ( enum PsColorPicker _arg1 ) {
    _com_dispatch_method(this, 0x43506b72, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(696)
inline enum Photoshop::PsResampleMethod Photoshop::Preferences::GetInterpolation ( ) {
    enum PsResampleMethod _result;
    _com_dispatch_method(this, 0x49706c61, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(697)
inline void Photoshop::Preferences::PutInterpolation ( enum PsResampleMethod _arg1 ) {
    _com_dispatch_method(this, 0x49706c61, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(698)
inline VARIANT_BOOL Photoshop::Preferences::GetExportClipboard ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50723031, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(699)
inline void Photoshop::Preferences::PutExportClipboard ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50723031, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(700)
inline VARIANT_BOOL Photoshop::Preferences::GetShowToolTips ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50723033, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(701)
inline void Photoshop::Preferences::PutShowToolTips ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50723033, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(702)
inline VARIANT_BOOL Photoshop::Preferences::GetKeyboardZoomResizesWindows ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50723433, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(703)
inline void Photoshop::Preferences::PutKeyboardZoomResizesWindows ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50723433, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(704)
inline VARIANT_BOOL Photoshop::Preferences::GetAutoUpdateOpenDocuments ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50723034, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(705)
inline void Photoshop::Preferences::PutAutoUpdateOpenDocuments ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50723034, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(706)
inline VARIANT_BOOL Photoshop::Preferences::GetShowAsianTextOptions ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50723035, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(707)
inline void Photoshop::Preferences::PutShowAsianTextOptions ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50723035, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(708)
inline VARIANT_BOOL Photoshop::Preferences::GetBeepWhenDone ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50723036, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(709)
inline void Photoshop::Preferences::PutBeepWhenDone ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50723036, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(710)
inline VARIANT_BOOL Photoshop::Preferences::GetDynamicColorSliders ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50723037, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(711)
inline void Photoshop::Preferences::PutDynamicColorSliders ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50723037, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(712)
inline VARIANT_BOOL Photoshop::Preferences::GetSavePaletteLocations ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50723038, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(713)
inline void Photoshop::Preferences::PutSavePaletteLocations ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50723038, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(714)
inline VARIANT_BOOL Photoshop::Preferences::GetShowEnglishFontNames ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50723039, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(715)
inline void Photoshop::Preferences::PutShowEnglishFontNames ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50723039, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(716)
inline VARIANT_BOOL Photoshop::Preferences::GetUseShiftKeyForToolSwitch ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50723130, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(717)
inline void Photoshop::Preferences::PutUseShiftKeyForToolSwitch ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50723130, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(718)
inline long Photoshop::Preferences::GetNumberOfHistoryStates ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50723131, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(719)
inline void Photoshop::Preferences::PutNumberOfHistoryStates ( long _arg1 ) {
    _com_dispatch_method(this, 0x50723131, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(720)
inline VARIANT_BOOL Photoshop::Preferences::GetCreateFirstSnapshot ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50723339, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(721)
inline void Photoshop::Preferences::PutCreateFirstSnapshot ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50723339, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(722)
inline VARIANT_BOOL Photoshop::Preferences::GetNonLinearHistory ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50723430, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(723)
inline void Photoshop::Preferences::PutNonLinearHistory ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50723430, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(724)
inline VARIANT_BOOL Photoshop::Preferences::GetSmartQuotes ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50723431, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(725)
inline void Photoshop::Preferences::PutSmartQuotes ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50723431, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(726)
inline enum Photoshop::PsSaveBehavior Photoshop::Preferences::GetImagePreviews ( ) {
    enum PsSaveBehavior _result;
    _com_dispatch_method(this, 0x50723132, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(727)
inline void Photoshop::Preferences::PutImagePreviews ( enum PsSaveBehavior _arg1 ) {
    _com_dispatch_method(this, 0x50723132, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(728)
inline VARIANT_BOOL Photoshop::Preferences::GetUseLowerCaseExtension ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70534c63, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(729)
inline void Photoshop::Preferences::PutUseLowerCaseExtension ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70534c63, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(730)
inline VARIANT_BOOL Photoshop::Preferences::GetAskBeforeSavingLayeredTIFF ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50723134, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(731)
inline void Photoshop::Preferences::PutAskBeforeSavingLayeredTIFF ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50723134, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(732)
inline enum Photoshop::PsQueryStateType Photoshop::Preferences::GetMaximizeCompatibility ( ) {
    enum PsQueryStateType _result;
    _com_dispatch_method(this, 0x704d7843, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(733)
inline void Photoshop::Preferences::PutMaximizeCompatibility ( enum PsQueryStateType _arg1 ) {
    _com_dispatch_method(this, 0x704d7843, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(734)
inline long Photoshop::Preferences::GetRecentFileListLength ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50723135, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(735)
inline void Photoshop::Preferences::PutRecentFileListLength ( long _arg1 ) {
    _com_dispatch_method(this, 0x50723135, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(736)
inline VARIANT_BOOL Photoshop::Preferences::GetColorChannelsInColor ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50723136, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(737)
inline void Photoshop::Preferences::PutColorChannelsInColor ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50723136, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(738)
inline VARIANT_BOOL Photoshop::Preferences::GetUseDiffusionDither ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50723137, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(739)
inline void Photoshop::Preferences::PutUseDiffusionDither ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50723137, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(740)
inline VARIANT_BOOL Photoshop::Preferences::GetPixelDoubling ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50723138, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(741)
inline void Photoshop::Preferences::PutPixelDoubling ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50723138, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(742)
inline enum Photoshop::PsPaintingCursors Photoshop::Preferences::GetPaintingCursors ( ) {
    enum PsPaintingCursors _result;
    _com_dispatch_method(this, 0x50723139, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(743)
inline void Photoshop::Preferences::PutPaintingCursors ( enum PsPaintingCursors _arg1 ) {
    _com_dispatch_method(this, 0x50723139, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(744)
inline enum Photoshop::PsOtherPaintingCursors Photoshop::Preferences::GetOtherCursors ( ) {
    enum PsOtherPaintingCursors _result;
    _com_dispatch_method(this, 0x50723230, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(745)
inline void Photoshop::Preferences::PutOtherCursors ( enum PsOtherPaintingCursors _arg1 ) {
    _com_dispatch_method(this, 0x50723230, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(746)
inline enum Photoshop::PsGridSize Photoshop::Preferences::GetGridSize ( ) {
    enum PsGridSize _result;
    _com_dispatch_method(this, 0x50723231, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(747)
inline void Photoshop::Preferences::PutGridSize ( enum PsGridSize _arg1 ) {
    _com_dispatch_method(this, 0x50723231, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(748)
inline VARIANT_BOOL Photoshop::Preferences::GetUseVideoAlpha ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50723233, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(749)
inline void Photoshop::Preferences::PutUseVideoAlpha ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50723233, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(750)
inline double Photoshop::Preferences::GetGamutWarningOpacity ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x50723234, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(751)
inline void Photoshop::Preferences::PutGamutWarningOpacity ( double _arg1 ) {
    _com_dispatch_method(this, 0x50723234, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(752)
inline enum Photoshop::PsUnits Photoshop::Preferences::GetRulerUnits ( ) {
    enum PsUnits _result;
    _com_dispatch_method(this, 0x50723235, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(753)
inline void Photoshop::Preferences::PutRulerUnits ( enum PsUnits _arg1 ) {
    _com_dispatch_method(this, 0x50723235, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(754)
inline enum Photoshop::PsTypeUnits Photoshop::Preferences::GetTypeUnits ( ) {
    enum PsTypeUnits _result;
    _com_dispatch_method(this, 0x50723236, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(755)
inline void Photoshop::Preferences::PutTypeUnits ( enum PsTypeUnits _arg1 ) {
    _com_dispatch_method(this, 0x50723236, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(756)
inline double Photoshop::Preferences::GetColumnWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x50723237, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(757)
inline void Photoshop::Preferences::PutColumnWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x50723237, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(758)
inline double Photoshop::Preferences::GetColumnGutter ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x50723238, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(759)
inline void Photoshop::Preferences::PutColumnGutter ( double _arg1 ) {
    _com_dispatch_method(this, 0x50723238, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(760)
inline enum Photoshop::PsPointType Photoshop::Preferences::GetPointSize ( ) {
    enum PsPointType _result;
    _com_dispatch_method(this, 0x50723239, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(761)
inline void Photoshop::Preferences::PutPointSize ( enum PsPointType _arg1 ) {
    _com_dispatch_method(this, 0x50723239, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(762)
inline enum Photoshop::PsGuideLineStyle Photoshop::Preferences::GetGuideStyle ( ) {
    enum PsGuideLineStyle _result;
    _com_dispatch_method(this, 0x50723330, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(763)
inline void Photoshop::Preferences::PutGuideStyle ( enum PsGuideLineStyle _arg1 ) {
    _com_dispatch_method(this, 0x50723330, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(764)
inline enum Photoshop::PsGridLineStyle Photoshop::Preferences::GetGridStyle ( ) {
    enum PsGridLineStyle _result;
    _com_dispatch_method(this, 0x50723331, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(765)
inline void Photoshop::Preferences::PutGridStyle ( enum PsGridLineStyle _arg1 ) {
    _com_dispatch_method(this, 0x50723331, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(766)
inline long Photoshop::Preferences::GetGridSubDivisions ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50723333, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(767)
inline void Photoshop::Preferences::PutGridSubDivisions ( long _arg1 ) {
    _com_dispatch_method(this, 0x50723333, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(768)
inline VARIANT_BOOL Photoshop::Preferences::GetShowSliceNumber ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50723334, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(769)
inline void Photoshop::Preferences::PutShowSliceNumber ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50723334, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(770)
inline VARIANT_BOOL Photoshop::Preferences::GetUseAdditionalPluginFolder ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50723432, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(771)
inline void Photoshop::Preferences::PutUseAdditionalPluginFolder ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50723432, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(772)
inline _bstr_t Photoshop::Preferences::GetAdditionalPluginFolder ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x50723335, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(773)
inline void Photoshop::Preferences::PutAdditionalPluginFolder ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x50723335, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(774)
inline long Photoshop::Preferences::GetImageCacheLevels ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50723337, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(775)
inline void Photoshop::Preferences::PutImageCacheLevels ( long _arg1 ) {
    _com_dispatch_method(this, 0x50723337, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(776)
inline VARIANT_BOOL Photoshop::Preferences::GetImageCacheForHistograms ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50723338, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(777)
inline void Photoshop::Preferences::PutImageCacheForHistograms ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50723338, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(778)
inline long Photoshop::Preferences::GetMaxRAMuse ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50723434, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(779)
inline void Photoshop::Preferences::PutMaxRAMuse ( long _arg1 ) {
    _com_dispatch_method(this, 0x50723434, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(780)
inline VARIANT_BOOL Photoshop::Preferences::GetUseHistoryLog ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50723435, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(781)
inline void Photoshop::Preferences::PutUseHistoryLog ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50723435, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(782)
inline enum Photoshop::PsSaveLogItemsType Photoshop::Preferences::GetSaveLogItems ( ) {
    enum PsSaveLogItemsType _result;
    _com_dispatch_method(this, 0x50723436, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(783)
inline void Photoshop::Preferences::PutSaveLogItems ( enum PsSaveLogItemsType _arg1 ) {
    _com_dispatch_method(this, 0x50723436, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(784)
inline enum Photoshop::PsEditLogItemsType Photoshop::Preferences::GetEditLogItems ( ) {
    enum PsEditLogItemsType _result;
    _com_dispatch_method(this, 0x50723437, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(785)
inline void Photoshop::Preferences::PutEditLogItems ( enum PsEditLogItemsType _arg1 ) {
    _com_dispatch_method(this, 0x50723437, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(786)
inline _bstr_t Photoshop::Preferences::GetSaveLogItemsFile ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x50723438, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(787)
inline void Photoshop::Preferences::PutSaveLogItemsFile ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x50723438, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(788)
inline enum Photoshop::PsFontPreviewType Photoshop::Preferences::GetFontPreviewSize ( ) {
    enum PsFontPreviewType _result;
    _com_dispatch_method(this, 0x46503034, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(789)
inline void Photoshop::Preferences::PutFontPreviewSize ( enum PsFontPreviewType _arg1 ) {
    _com_dispatch_method(this, 0x46503034, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(790)
inline Photoshop::_ApplicationPtr Photoshop::Preferences::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(791)
inline IDispatchPtr Photoshop::Preferences::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface Documents wrapper method implementations
//

#pragma implementation_key(792)
inline Photoshop::_ApplicationPtr Photoshop::Documents::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(793)
inline IDispatchPtr Photoshop::Documents::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(794)
inline long Photoshop::Documents::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x636e7465, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(795)
inline Photoshop::DocumentPtr Photoshop::Documents::GetItem ( const _variant_t & ItemKey ) {
    struct Document * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &ItemKey);
    return DocumentPtr(_result, false);
}

#pragma implementation_key(796)
inline long Photoshop::Documents::Index ( struct Document * ItemPtr ) {
    long _result = 0;
    _com_dispatch_method(this, 0x70696478, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0009", ItemPtr);
    return _result;
}

#pragma implementation_key(797)
inline Photoshop::DocumentPtr Photoshop::Documents::Add ( const _variant_t & Width, const _variant_t & Height, const _variant_t & Resolution, const _variant_t & Name, const _variant_t & Mode, const _variant_t & InitialFill, const _variant_t & PixelAspectRatio, const _variant_t & BitsPerChannel, const _variant_t & ColorProfileName ) {
    struct Document * _result = 0;
    _com_dispatch_method(this, 0x646f6375, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Width, &Height, &Resolution, &Name, &Mode, &InitialFill, &PixelAspectRatio, &BitsPerChannel, &ColorProfileName);
    return DocumentPtr(_result, false);
}

//
// dispinterface TextFonts wrapper method implementations
//

#pragma implementation_key(798)
inline Photoshop::_ApplicationPtr Photoshop::TextFonts::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(799)
inline IDispatchPtr Photoshop::TextFonts::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(800)
inline long Photoshop::TextFonts::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x636e7465, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(801)
inline Photoshop::TextFontPtr Photoshop::TextFonts::GetItem ( const _variant_t & ItemKey ) {
    struct TextFont * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &ItemKey);
    return TextFontPtr(_result, false);
}

#pragma implementation_key(802)
inline long Photoshop::TextFonts::Index ( struct TextFont * ItemPtr ) {
    long _result = 0;
    _com_dispatch_method(this, 0x70696478, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0009", ItemPtr);
    return _result;
}

//
// dispinterface TextFont wrapper method implementations
//

#pragma implementation_key(803)
inline _bstr_t Photoshop::TextFont::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x706e616d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(804)
inline _bstr_t Photoshop::TextFont::GetPostScriptName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7050534e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(805)
inline _bstr_t Photoshop::TextFont::GetFamily ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7046464e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(806)
inline _bstr_t Photoshop::TextFont::GetStyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5374796c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(807)
inline Photoshop::_ApplicationPtr Photoshop::TextFont::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(808)
inline IDispatchPtr Photoshop::TextFont::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface Notifiers wrapper method implementations
//

#pragma implementation_key(809)
inline Photoshop::_ApplicationPtr Photoshop::Notifiers::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(810)
inline IDispatchPtr Photoshop::Notifiers::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(811)
inline long Photoshop::Notifiers::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x636e7465, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(812)
inline HRESULT Photoshop::Notifiers::RemoveAll ( ) {
    return _com_dispatch_method(this, 0x5241456c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(813)
inline Photoshop::NotifierPtr Photoshop::Notifiers::GetItem ( const _variant_t & ItemKey ) {
    struct Notifier * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &ItemKey);
    return NotifierPtr(_result, false);
}

#pragma implementation_key(814)
inline long Photoshop::Notifiers::Index ( struct Notifier * ItemPtr ) {
    long _result = 0;
    _com_dispatch_method(this, 0x70696478, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0009", ItemPtr);
    return _result;
}

#pragma implementation_key(815)
inline Photoshop::NotifierPtr Photoshop::Notifiers::Add ( _bstr_t Event, _bstr_t EventFile, const _variant_t & EventClass ) {
    struct Notifier * _result = 0;
    _com_dispatch_method(this, 0x454e3032, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0008\x080c", (BSTR)Event, (BSTR)EventFile, &EventClass);
    return NotifierPtr(_result, false);
}

//
// dispinterface Notifier wrapper method implementations
//

#pragma implementation_key(816)
inline _bstr_t Photoshop::Notifier::GetEvent ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x454e3034, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(817)
inline _bstr_t Photoshop::Notifier::GetEventFile ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x454e3035, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(818)
inline _bstr_t Photoshop::Notifier::GetEventClass ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x454e3037, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(819)
inline Photoshop::_ApplicationPtr Photoshop::Notifier::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(820)
inline IDispatchPtr Photoshop::Notifier::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(821)
inline HRESULT Photoshop::Notifier::Delete ( ) {
    return _com_dispatch_method(this, 0x64656c6f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface MeasurementLog wrapper method implementations
//

#pragma implementation_key(822)
inline Photoshop::_ApplicationPtr Photoshop::MeasurementLog::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(823)
inline IDispatchPtr Photoshop::MeasurementLog::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x63746e72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(824)
inline HRESULT Photoshop::MeasurementLog::ExportMeasurements ( _bstr_t File, const _variant_t & Range, const _variant_t & DataPoints ) {
    return _com_dispatch_method(this, 0x4d4c3035, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c\x080c", (BSTR)File, &Range, &DataPoints);
}

#pragma implementation_key(825)
inline HRESULT Photoshop::MeasurementLog::DeleteMeasurements ( const _variant_t & Range ) {
    return _com_dispatch_method(this, 0x4d4c3036, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Range);
}

//
// dispinterface _ActionDescriptor wrapper method implementations
//

#pragma implementation_key(826)
inline long Photoshop::_ActionDescriptor::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50416374, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(827)
inline Photoshop::_ApplicationPtr Photoshop::_ActionDescriptor::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(828)
inline void Photoshop::_ActionDescriptor::PutObjectValue ( struct _ActionDescriptor * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(829)
inline void Photoshop::_ActionDescriptor::PutRefObjectValue ( struct _ActionDescriptor * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(830)
inline HRESULT Photoshop::_ActionDescriptor::Clear ( ) {
    return _com_dispatch_method(this, 0x4d413031, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(831)
inline HRESULT Photoshop::_ActionDescriptor::Erase ( long Key ) {
    return _com_dispatch_method(this, 0x4d413032, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Key);
}

#pragma implementation_key(832)
inline VARIANT_BOOL Photoshop::_ActionDescriptor::GetBoolean ( long Key ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4d413033, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0003", Key);
    return _result;
}

#pragma implementation_key(833)
inline long Photoshop::_ActionDescriptor::GetClass ( long Key ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4d413034, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Key);
    return _result;
}

#pragma implementation_key(834)
inline double Photoshop::_ActionDescriptor::GetDouble ( long Key ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4d413036, DISPATCH_METHOD, VT_R8, (void*)&_result, 
        L"\x0003", Key);
    return _result;
}

#pragma implementation_key(835)
inline long Photoshop::_ActionDescriptor::GetEnumerationType ( long Key ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4d413037, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Key);
    return _result;
}

#pragma implementation_key(836)
inline long Photoshop::_ActionDescriptor::GetEnumerationValue ( long Key ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4d413038, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Key);
    return _result;
}

#pragma implementation_key(837)
inline long Photoshop::_ActionDescriptor::GetInteger ( long Key ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4d413039, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Key);
    return _result;
}

#pragma implementation_key(838)
inline long Photoshop::_ActionDescriptor::GetLargeInteger ( long Key ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4d413536, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Key);
    return _result;
}

#pragma implementation_key(839)
inline long Photoshop::_ActionDescriptor::GetKey ( long Index ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4d413130, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Index);
    return _result;
}

#pragma implementation_key(840)
inline Photoshop::_ActionListPtr Photoshop::_ActionDescriptor::GetList ( long Key ) {
    struct _ActionList * _result = 0;
    _com_dispatch_method(this, 0x4d413131, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003", Key);
    return _ActionListPtr(_result, false);
}

#pragma implementation_key(841)
inline long Photoshop::_ActionDescriptor::GetObjectType ( long Key ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4d413132, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Key);
    return _result;
}

#pragma implementation_key(842)
inline Photoshop::_ActionDescriptorPtr Photoshop::_ActionDescriptor::GetObjectValue ( long Key ) {
    struct _ActionDescriptor * _result = 0;
    _com_dispatch_method(this, 0x4d413133, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003", Key);
    return _ActionDescriptorPtr(_result, false);
}

#pragma implementation_key(843)
inline _bstr_t Photoshop::_ActionDescriptor::GetPath ( long Key ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4d413134, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0003", Key);
    return _bstr_t(_result, false);
}

#pragma implementation_key(844)
inline Photoshop::_ActionReferencePtr Photoshop::_ActionDescriptor::GetReference ( long Key ) {
    struct _ActionReference * _result = 0;
    _com_dispatch_method(this, 0x4d413135, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003", Key);
    return _ActionReferencePtr(_result, false);
}

#pragma implementation_key(845)
inline _bstr_t Photoshop::_ActionDescriptor::GetString ( long Key ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4d413136, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0003", Key);
    return _bstr_t(_result, false);
}

#pragma implementation_key(846)
inline enum Photoshop::PsDescValueType Photoshop::_ActionDescriptor::GetType ( long Key ) {
    enum PsDescValueType _result;
    _com_dispatch_method(this, 0x4d413137, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Key);
    return _result;
}

#pragma implementation_key(847)
inline long Photoshop::_ActionDescriptor::GetUnitDoubleType ( long Key ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4d413138, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Key);
    return _result;
}

#pragma implementation_key(848)
inline double Photoshop::_ActionDescriptor::GetUnitDoubleValue ( long Key ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4d413139, DISPATCH_METHOD, VT_R8, (void*)&_result, 
        L"\x0003", Key);
    return _result;
}

#pragma implementation_key(849)
inline VARIANT_BOOL Photoshop::_ActionDescriptor::HasKey ( long Key ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4d413230, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0003", Key);
    return _result;
}

#pragma implementation_key(850)
inline VARIANT_BOOL Photoshop::_ActionDescriptor::IsEqual ( struct _ActionDescriptor * OtherDesc ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4d413231, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0009", OtherDesc);
    return _result;
}

#pragma implementation_key(851)
inline HRESULT Photoshop::_ActionDescriptor::PutBoolean ( long Key, VARIANT_BOOL Value ) {
    return _com_dispatch_method(this, 0x4d413232, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000b", Key, Value);
}

#pragma implementation_key(852)
inline HRESULT Photoshop::_ActionDescriptor::PutClass ( long Key, long Value ) {
    return _com_dispatch_method(this, 0x4d413233, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", Key, Value);
}

#pragma implementation_key(853)
inline HRESULT Photoshop::_ActionDescriptor::PutDouble ( long Key, double Value ) {
    return _com_dispatch_method(this, 0x4d413234, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005", Key, Value);
}

#pragma implementation_key(854)
inline HRESULT Photoshop::_ActionDescriptor::PutEnumerated ( long Key, long EnumType, long Value ) {
    return _com_dispatch_method(this, 0x4d413235, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003", Key, EnumType, Value);
}

#pragma implementation_key(855)
inline HRESULT Photoshop::_ActionDescriptor::PutInteger ( long Key, long Value ) {
    return _com_dispatch_method(this, 0x4d413236, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", Key, Value);
}

#pragma implementation_key(856)
inline HRESULT Photoshop::_ActionDescriptor::PutLargeInteger ( long Key, long Value ) {
    return _com_dispatch_method(this, 0x4d413535, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", Key, Value);
}

#pragma implementation_key(857)
inline HRESULT Photoshop::_ActionDescriptor::PutList ( long Key, struct _ActionList * Value ) {
    return _com_dispatch_method(this, 0x4d413237, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0009", Key, Value);
}

#pragma implementation_key(858)
inline HRESULT Photoshop::_ActionDescriptor::PutObject ( long Key, long ClassID, struct _ActionDescriptor * Value ) {
    return _com_dispatch_method(this, 0x4d413238, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0009", Key, ClassID, Value);
}

#pragma implementation_key(859)
inline HRESULT Photoshop::_ActionDescriptor::PutPath ( long Key, _bstr_t Value ) {
    return _com_dispatch_method(this, 0x4d413239, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0008", Key, (BSTR)Value);
}

#pragma implementation_key(860)
inline HRESULT Photoshop::_ActionDescriptor::PutReference ( long Key, struct _ActionReference * Value ) {
    return _com_dispatch_method(this, 0x4d413330, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0009", Key, Value);
}

#pragma implementation_key(861)
inline HRESULT Photoshop::_ActionDescriptor::PutString ( long Key, _bstr_t Value ) {
    return _com_dispatch_method(this, 0x4d413331, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0008", Key, (BSTR)Value);
}

#pragma implementation_key(862)
inline HRESULT Photoshop::_ActionDescriptor::PutUnitDouble ( long Key, long UnitID, double Value ) {
    return _com_dispatch_method(this, 0x4d413332, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005", Key, UnitID, Value);
}

//
// dispinterface _ActionList wrapper method implementations
//

#pragma implementation_key(863)
inline long Photoshop::_ActionList::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50416374, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(864)
inline Photoshop::_ApplicationPtr Photoshop::_ActionList::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(865)
inline void Photoshop::_ActionList::PutObjectValue ( struct _ActionList * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(866)
inline void Photoshop::_ActionList::PutRefObjectValue ( struct _ActionList * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(867)
inline HRESULT Photoshop::_ActionList::Clear ( ) {
    return _com_dispatch_method(this, 0x4d413031, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(868)
inline VARIANT_BOOL Photoshop::_ActionList::GetBoolean ( long Index ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4d413033, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0003", Index);
    return _result;
}

#pragma implementation_key(869)
inline long Photoshop::_ActionList::GetClass ( long Index ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4d413034, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Index);
    return _result;
}

#pragma implementation_key(870)
inline double Photoshop::_ActionList::GetDouble ( long Index ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4d413036, DISPATCH_METHOD, VT_R8, (void*)&_result, 
        L"\x0003", Index);
    return _result;
}

#pragma implementation_key(871)
inline long Photoshop::_ActionList::GetEnumerationType ( long Index ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4d413037, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Index);
    return _result;
}

#pragma implementation_key(872)
inline long Photoshop::_ActionList::GetEnumerationValue ( long Index ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4d413038, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Index);
    return _result;
}

#pragma implementation_key(873)
inline long Photoshop::_ActionList::GetInteger ( long Index ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4d413039, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Index);
    return _result;
}

#pragma implementation_key(874)
inline long Photoshop::_ActionList::GetLargeInteger ( long Index ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4d413536, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Index);
    return _result;
}

#pragma implementation_key(875)
inline Photoshop::_ActionListPtr Photoshop::_ActionList::GetList ( long Index ) {
    struct _ActionList * _result = 0;
    _com_dispatch_method(this, 0x4d413131, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003", Index);
    return _ActionListPtr(_result, false);
}

#pragma implementation_key(876)
inline long Photoshop::_ActionList::GetObjectType ( long Index ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4d413132, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Index);
    return _result;
}

#pragma implementation_key(877)
inline Photoshop::_ActionDescriptorPtr Photoshop::_ActionList::GetObjectValue ( long Index ) {
    struct _ActionDescriptor * _result = 0;
    _com_dispatch_method(this, 0x4d413133, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003", Index);
    return _ActionDescriptorPtr(_result, false);
}

#pragma implementation_key(878)
inline _bstr_t Photoshop::_ActionList::GetPath ( long Index ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4d413134, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0003", Index);
    return _bstr_t(_result, false);
}

#pragma implementation_key(879)
inline Photoshop::_ActionReferencePtr Photoshop::_ActionList::GetReference ( long Index ) {
    struct _ActionReference * _result = 0;
    _com_dispatch_method(this, 0x4d413135, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003", Index);
    return _ActionReferencePtr(_result, false);
}

#pragma implementation_key(880)
inline _bstr_t Photoshop::_ActionList::GetString ( long Index ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4d413136, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0003", Index);
    return _bstr_t(_result, false);
}

#pragma implementation_key(881)
inline enum Photoshop::PsDescValueType Photoshop::_ActionList::GetType ( long Index ) {
    enum PsDescValueType _result;
    _com_dispatch_method(this, 0x4d413137, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Index);
    return _result;
}

#pragma implementation_key(882)
inline long Photoshop::_ActionList::GetUnitDoubleType ( long Index ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4d413138, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Index);
    return _result;
}

#pragma implementation_key(883)
inline double Photoshop::_ActionList::GetUnitDoubleValue ( long Index ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4d413139, DISPATCH_METHOD, VT_R8, (void*)&_result, 
        L"\x0003", Index);
    return _result;
}

#pragma implementation_key(884)
inline HRESULT Photoshop::_ActionList::PutBoolean ( VARIANT_BOOL Value ) {
    return _com_dispatch_method(this, 0x4d413232, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", Value);
}

#pragma implementation_key(885)
inline HRESULT Photoshop::_ActionList::PutClass ( long Value ) {
    return _com_dispatch_method(this, 0x4d413233, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Value);
}

#pragma implementation_key(886)
inline HRESULT Photoshop::_ActionList::PutDouble ( double Value ) {
    return _com_dispatch_method(this, 0x4d413234, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Value);
}

#pragma implementation_key(887)
inline HRESULT Photoshop::_ActionList::PutEnumerated ( long EnumType, long Value ) {
    return _com_dispatch_method(this, 0x4d413235, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", EnumType, Value);
}

#pragma implementation_key(888)
inline HRESULT Photoshop::_ActionList::PutInteger ( long Value ) {
    return _com_dispatch_method(this, 0x4d413236, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Value);
}

#pragma implementation_key(889)
inline HRESULT Photoshop::_ActionList::PutLargeInteger ( long Value ) {
    return _com_dispatch_method(this, 0x4d413535, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Value);
}

#pragma implementation_key(890)
inline HRESULT Photoshop::_ActionList::PutList ( struct _ActionList * Value ) {
    return _com_dispatch_method(this, 0x4d413237, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Value);
}

#pragma implementation_key(891)
inline HRESULT Photoshop::_ActionList::PutObject ( long ClassID, struct _ActionDescriptor * Value ) {
    return _com_dispatch_method(this, 0x4d413238, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0009", ClassID, Value);
}

#pragma implementation_key(892)
inline HRESULT Photoshop::_ActionList::PutPath ( _bstr_t Value ) {
    return _com_dispatch_method(this, 0x4d413239, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Value);
}

#pragma implementation_key(893)
inline HRESULT Photoshop::_ActionList::PutReference ( struct _ActionReference * Value ) {
    return _com_dispatch_method(this, 0x4d413330, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Value);
}

#pragma implementation_key(894)
inline HRESULT Photoshop::_ActionList::PutString ( _bstr_t Value ) {
    return _com_dispatch_method(this, 0x4d413331, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Value);
}

#pragma implementation_key(895)
inline HRESULT Photoshop::_ActionList::PutUnitDouble ( long UnitID, double Value ) {
    return _com_dispatch_method(this, 0x4d413332, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005", UnitID, Value);
}

//
// dispinterface _ActionReference wrapper method implementations
//

#pragma implementation_key(896)
inline Photoshop::_ApplicationPtr Photoshop::_ActionReference::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(897)
inline void Photoshop::_ActionReference::PutObjectValue ( struct _ActionReference * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(898)
inline void Photoshop::_ActionReference::PutRefObjectValue ( struct _ActionReference * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(899)
inline Photoshop::_ActionReferencePtr Photoshop::_ActionReference::GetContainer ( ) {
    struct _ActionReference * _result = 0;
    _com_dispatch_method(this, 0x4d413333, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return _ActionReferencePtr(_result, false);
}

#pragma implementation_key(900)
inline long Photoshop::_ActionReference::GetDesiredClass ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4d413334, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(901)
inline long Photoshop::_ActionReference::GetEnumeratedType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4d413335, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(902)
inline long Photoshop::_ActionReference::GetEnumeratedValue ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4d413336, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(903)
inline enum Photoshop::PsReferenceFormType Photoshop::_ActionReference::GetForm ( ) {
    enum PsReferenceFormType _result;
    _com_dispatch_method(this, 0x4d413337, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(904)
inline long Photoshop::_ActionReference::GetIdentifier ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4d413338, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(905)
inline long Photoshop::_ActionReference::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4d413339, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(906)
inline _bstr_t Photoshop::_ActionReference::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4d413430, DISPATCH_METHOD, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(907)
inline long Photoshop::_ActionReference::GetOffset ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4d413431, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(908)
inline long Photoshop::_ActionReference::GetProperty ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4d413432, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(909)
inline HRESULT Photoshop::_ActionReference::PutClass ( long DesiredClass ) {
    return _com_dispatch_method(this, 0x4d413433, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", DesiredClass);
}

#pragma implementation_key(910)
inline HRESULT Photoshop::_ActionReference::PutEnumerated ( long DesiredClass, long EnumType, long Value ) {
    return _com_dispatch_method(this, 0x4d413434, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003", DesiredClass, EnumType, Value);
}

#pragma implementation_key(911)
inline HRESULT Photoshop::_ActionReference::PutIdentifier ( long DesiredClass, long Value ) {
    return _com_dispatch_method(this, 0x4d413435, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", DesiredClass, Value);
}

#pragma implementation_key(912)
inline HRESULT Photoshop::_ActionReference::PutIndex ( long DesiredClass, long Value ) {
    return _com_dispatch_method(this, 0x4d413436, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", DesiredClass, Value);
}

#pragma implementation_key(913)
inline HRESULT Photoshop::_ActionReference::PutName ( long DesiredClass, _bstr_t Value ) {
    return _com_dispatch_method(this, 0x4d413437, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0008", DesiredClass, (BSTR)Value);
}

#pragma implementation_key(914)
inline HRESULT Photoshop::_ActionReference::PutOffset ( long DesiredClass, long Value ) {
    return _com_dispatch_method(this, 0x4d413438, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", DesiredClass, Value);
}

#pragma implementation_key(915)
inline HRESULT Photoshop::_ActionReference::PutProperty ( long DesiredClass, long Value ) {
    return _com_dispatch_method(this, 0x4d413439, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", DesiredClass, Value);
}

//
// dispinterface _PhotoCDOpenOptions wrapper method implementations
//

#pragma implementation_key(916)
inline enum Photoshop::PsPhotoCDSize Photoshop::_PhotoCDOpenOptions::GetPixelSize ( ) {
    enum PsPhotoCDSize _result;
    _com_dispatch_method(this, 0x50786c5a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(917)
inline void Photoshop::_PhotoCDOpenOptions::PutPixelSize ( enum PsPhotoCDSize _arg1 ) {
    _com_dispatch_method(this, 0x50786c5a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(918)
inline _bstr_t Photoshop::_PhotoCDOpenOptions::GetColorProfileName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4463704e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(919)
inline void Photoshop::_PhotoCDOpenOptions::PutColorProfileName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4463704e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(920)
inline double Photoshop::_PhotoCDOpenOptions::GetResolution ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x5265734c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(921)
inline void Photoshop::_PhotoCDOpenOptions::PutResolution ( double _arg1 ) {
    _com_dispatch_method(this, 0x5265734c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(922)
inline enum Photoshop::PsPhotoCDColorSpace Photoshop::_PhotoCDOpenOptions::GetColorSpace ( ) {
    enum PsPhotoCDColorSpace _result;
    _com_dispatch_method(this, 0x436c5370, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(923)
inline void Photoshop::_PhotoCDOpenOptions::PutColorSpace ( enum PsPhotoCDColorSpace _arg1 ) {
    _com_dispatch_method(this, 0x436c5370, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(924)
inline enum Photoshop::PsOrientation Photoshop::_PhotoCDOpenOptions::GetOrientation ( ) {
    enum PsOrientation _result;
    _com_dispatch_method(this, 0x446f7269, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(925)
inline void Photoshop::_PhotoCDOpenOptions::PutOrientation ( enum PsOrientation _arg1 ) {
    _com_dispatch_method(this, 0x446f7269, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(926)
inline Photoshop::_ApplicationPtr Photoshop::_PhotoCDOpenOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(927)
inline void Photoshop::_PhotoCDOpenOptions::PutObjectValue ( struct _PhotoCDOpenOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(928)
inline void Photoshop::_PhotoCDOpenOptions::PutRefObjectValue ( struct _PhotoCDOpenOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _RawFormatOpenOptions wrapper method implementations
//

#pragma implementation_key(929)
inline long Photoshop::_RawFormatOpenOptions::GetHeight ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x48676874, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(930)
inline void Photoshop::_RawFormatOpenOptions::PutHeight ( long _arg1 ) {
    _com_dispatch_method(this, 0x48676874, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(931)
inline long Photoshop::_RawFormatOpenOptions::GetWidth ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x57647468, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(932)
inline void Photoshop::_RawFormatOpenOptions::PutWidth ( long _arg1 ) {
    _com_dispatch_method(this, 0x57647468, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(933)
inline long Photoshop::_RawFormatOpenOptions::GetChannelNumber ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x43684e6d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(934)
inline void Photoshop::_RawFormatOpenOptions::PutChannelNumber ( long _arg1 ) {
    _com_dispatch_method(this, 0x43684e6d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(935)
inline VARIANT_BOOL Photoshop::_RawFormatOpenOptions::GetInterleaveChannels ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x634f6472, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(936)
inline void Photoshop::_RawFormatOpenOptions::PutInterleaveChannels ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x634f6472, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(937)
inline long Photoshop::_RawFormatOpenOptions::GetBitsPerChannel ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x44426368, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(938)
inline void Photoshop::_RawFormatOpenOptions::PutBitsPerChannel ( long _arg1 ) {
    _com_dispatch_method(this, 0x44426368, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(939)
inline enum Photoshop::PsByteOrderType Photoshop::_RawFormatOpenOptions::GetByteOrder ( ) {
    enum PsByteOrderType _result;
    _com_dispatch_method(this, 0x5466426f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(940)
inline void Photoshop::_RawFormatOpenOptions::PutByteOrder ( enum PsByteOrderType _arg1 ) {
    _com_dispatch_method(this, 0x5466426f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(941)
inline long Photoshop::_RawFormatOpenOptions::GetHeaderSize ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4864537a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(942)
inline void Photoshop::_RawFormatOpenOptions::PutHeaderSize ( long _arg1 ) {
    _com_dispatch_method(this, 0x4864537a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(943)
inline VARIANT_BOOL Photoshop::_RawFormatOpenOptions::GetRetainHeader ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x52744864, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(944)
inline void Photoshop::_RawFormatOpenOptions::PutRetainHeader ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x52744864, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(945)
inline Photoshop::_ApplicationPtr Photoshop::_RawFormatOpenOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(946)
inline void Photoshop::_RawFormatOpenOptions::PutObjectValue ( struct _RawFormatOpenOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(947)
inline void Photoshop::_RawFormatOpenOptions::PutRefObjectValue ( struct _RawFormatOpenOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _PDFOpenOptions wrapper method implementations
//

#pragma implementation_key(948)
inline double Photoshop::_PDFOpenOptions::GetResolution ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x5265734c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(949)
inline void Photoshop::_PDFOpenOptions::PutResolution ( double _arg1 ) {
    _com_dispatch_method(this, 0x5265734c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(950)
inline enum Photoshop::PsOpenDocumentMode Photoshop::_PDFOpenOptions::GetMode ( ) {
    enum PsOpenDocumentMode _result;
    _com_dispatch_method(this, 0x4f4d6465, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(951)
inline void Photoshop::_PDFOpenOptions::PutMode ( enum PsOpenDocumentMode _arg1 ) {
    _com_dispatch_method(this, 0x4f4d6465, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(952)
inline VARIANT_BOOL Photoshop::_PDFOpenOptions::GetAntiAlias ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x416e416c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(953)
inline void Photoshop::_PDFOpenOptions::PutAntiAlias ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x416e416c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(954)
inline long Photoshop::_PDFOpenOptions::GetPage ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7050674e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(955)
inline void Photoshop::_PDFOpenOptions::PutPage ( long _arg1 ) {
    _com_dispatch_method(this, 0x7050674e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(956)
inline VARIANT_BOOL Photoshop::_PDFOpenOptions::GetConstrainProportions ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x43507250, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(957)
inline void Photoshop::_PDFOpenOptions::PutConstrainProportions ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x43507250, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(958)
inline double Photoshop::_PDFOpenOptions::GetHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x48676874, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(959)
inline void Photoshop::_PDFOpenOptions::PutHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x48676874, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(960)
inline double Photoshop::_PDFOpenOptions::GetWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x57647468, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(961)
inline void Photoshop::_PDFOpenOptions::PutWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x57647468, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(962)
inline enum Photoshop::PsBitsPerChannelType Photoshop::_PDFOpenOptions::GetBitsPerChannel ( ) {
    enum PsBitsPerChannelType _result;
    _com_dispatch_method(this, 0x44426368, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(963)
inline void Photoshop::_PDFOpenOptions::PutBitsPerChannel ( enum PsBitsPerChannelType _arg1 ) {
    _com_dispatch_method(this, 0x44426368, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(964)
inline VARIANT_BOOL Photoshop::_PDFOpenOptions::GetUsePageNumber ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70555067, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(965)
inline void Photoshop::_PDFOpenOptions::PutUsePageNumber ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70555067, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(966)
inline _bstr_t Photoshop::_PDFOpenOptions::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x706e616d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(967)
inline void Photoshop::_PDFOpenOptions::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x706e616d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(968)
inline enum Photoshop::PsCropToType Photoshop::_PDFOpenOptions::GetCropPage ( ) {
    enum PsCropToType _result;
    _com_dispatch_method(this, 0x6372746f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(969)
inline void Photoshop::_PDFOpenOptions::PutCropPage ( enum PsCropToType _arg1 ) {
    _com_dispatch_method(this, 0x6372746f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(970)
inline VARIANT_BOOL Photoshop::_PDFOpenOptions::GetSuppressWarnings ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x73707772, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(971)
inline void Photoshop::_PDFOpenOptions::PutSuppressWarnings ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x73707772, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(972)
inline Photoshop::_ApplicationPtr Photoshop::_PDFOpenOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(973)
inline void Photoshop::_PDFOpenOptions::PutObjectValue ( struct _PDFOpenOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(974)
inline void Photoshop::_PDFOpenOptions::PutRefObjectValue ( struct _PDFOpenOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _EPSOpenOptions wrapper method implementations
//

#pragma implementation_key(975)
inline double Photoshop::_EPSOpenOptions::GetHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x48676874, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(976)
inline void Photoshop::_EPSOpenOptions::PutHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x48676874, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(977)
inline double Photoshop::_EPSOpenOptions::GetWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x57647468, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(978)
inline void Photoshop::_EPSOpenOptions::PutWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x57647468, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(979)
inline double Photoshop::_EPSOpenOptions::GetResolution ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x5265734c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(980)
inline void Photoshop::_EPSOpenOptions::PutResolution ( double _arg1 ) {
    _com_dispatch_method(this, 0x5265734c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(981)
inline enum Photoshop::PsOpenDocumentMode Photoshop::_EPSOpenOptions::GetMode ( ) {
    enum PsOpenDocumentMode _result;
    _com_dispatch_method(this, 0x4f4d6465, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(982)
inline void Photoshop::_EPSOpenOptions::PutMode ( enum PsOpenDocumentMode _arg1 ) {
    _com_dispatch_method(this, 0x4f4d6465, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(983)
inline VARIANT_BOOL Photoshop::_EPSOpenOptions::GetAntiAlias ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x416e416c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(984)
inline void Photoshop::_EPSOpenOptions::PutAntiAlias ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x416e416c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(985)
inline VARIANT_BOOL Photoshop::_EPSOpenOptions::GetConstrainProportions ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x43507250, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(986)
inline void Photoshop::_EPSOpenOptions::PutConstrainProportions ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x43507250, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(987)
inline Photoshop::_ApplicationPtr Photoshop::_EPSOpenOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(988)
inline void Photoshop::_EPSOpenOptions::PutObjectValue ( struct _EPSOpenOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(989)
inline void Photoshop::_EPSOpenOptions::PutRefObjectValue ( struct _EPSOpenOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _DICOMOpenOptions wrapper method implementations
//

#pragma implementation_key(990)
inline VARIANT_BOOL Photoshop::_DICOMOpenOptions::GetAnonymize ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x416e596d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(991)
inline void Photoshop::_DICOMOpenOptions::PutAnonymize ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x416e596d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(992)
inline VARIANT_BOOL Photoshop::_DICOMOpenOptions::GetShowOverlays ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4f764c79, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(993)
inline void Photoshop::_DICOMOpenOptions::PutShowOverlays ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4f764c79, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(994)
inline long Photoshop::_DICOMOpenOptions::GetRows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x526f5773, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(995)
inline void Photoshop::_DICOMOpenOptions::PutRows ( long _arg1 ) {
    _com_dispatch_method(this, 0x526f5773, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(996)
inline long Photoshop::_DICOMOpenOptions::GetColumns ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x436f6c4d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(997)
inline void Photoshop::_DICOMOpenOptions::PutColumns ( long _arg1 ) {
    _com_dispatch_method(this, 0x436f6c4d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(998)
inline long Photoshop::_DICOMOpenOptions::GetWindowWidth ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x57576954, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(999)
inline void Photoshop::_DICOMOpenOptions::PutWindowWidth ( long _arg1 ) {
    _com_dispatch_method(this, 0x57576954, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1000)
inline long Photoshop::_DICOMOpenOptions::GetWindowLevel ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x576c6556, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1001)
inline void Photoshop::_DICOMOpenOptions::PutWindowLevel ( long _arg1 ) {
    _com_dispatch_method(this, 0x576c6556, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1002)
inline VARIANT_BOOL Photoshop::_DICOMOpenOptions::GetReverse ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x52767345, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1003)
inline void Photoshop::_DICOMOpenOptions::PutReverse ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x52767345, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1004)
inline Photoshop::_ApplicationPtr Photoshop::_DICOMOpenOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1005)
inline void Photoshop::_DICOMOpenOptions::PutObjectValue ( struct _DICOMOpenOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1006)
inline void Photoshop::_DICOMOpenOptions::PutRefObjectValue ( struct _DICOMOpenOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _CameraRAWOpenOptions wrapper method implementations
//

#pragma implementation_key(1007)
inline enum Photoshop::PsColorSpaceType Photoshop::_CameraRAWOpenOptions::GetColorSpace ( ) {
    enum PsColorSpaceType _result;
    _com_dispatch_method(this, 0x436c5370, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1008)
inline void Photoshop::_CameraRAWOpenOptions::PutColorSpace ( enum PsColorSpaceType _arg1 ) {
    _com_dispatch_method(this, 0x436c5370, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1009)
inline enum Photoshop::PsBitsPerChannelType Photoshop::_CameraRAWOpenOptions::GetBitsPerChannel ( ) {
    enum PsBitsPerChannelType _result;
    _com_dispatch_method(this, 0x44426368, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1010)
inline void Photoshop::_CameraRAWOpenOptions::PutBitsPerChannel ( enum PsBitsPerChannelType _arg1 ) {
    _com_dispatch_method(this, 0x44426368, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1011)
inline enum Photoshop::PsCameraRAWSize Photoshop::_CameraRAWOpenOptions::GetSize ( ) {
    enum PsCameraRAWSize _result;
    _com_dispatch_method(this, 0x7074737a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1012)
inline void Photoshop::_CameraRAWOpenOptions::PutSize ( enum PsCameraRAWSize _arg1 ) {
    _com_dispatch_method(this, 0x7074737a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1013)
inline double Photoshop::_CameraRAWOpenOptions::GetResolution ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x5265734c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1014)
inline void Photoshop::_CameraRAWOpenOptions::PutResolution ( double _arg1 ) {
    _com_dispatch_method(this, 0x5265734c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1015)
inline enum Photoshop::PsCameraRAWSettingsType Photoshop::_CameraRAWOpenOptions::GetSettings ( ) {
    enum PsCameraRAWSettingsType _result;
    _com_dispatch_method(this, 0x70507266, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1016)
inline void Photoshop::_CameraRAWOpenOptions::PutSettings ( enum PsCameraRAWSettingsType _arg1 ) {
    _com_dispatch_method(this, 0x70507266, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1017)
inline enum Photoshop::PsWhiteBalanceType Photoshop::_CameraRAWOpenOptions::GetWhiteBalance ( ) {
    enum PsWhiteBalanceType _result;
    _com_dispatch_method(this, 0x43523134, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1018)
inline void Photoshop::_CameraRAWOpenOptions::PutWhiteBalance ( enum PsWhiteBalanceType _arg1 ) {
    _com_dispatch_method(this, 0x43523134, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1019)
inline long Photoshop::_CameraRAWOpenOptions::GetTemperature ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x43523135, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1020)
inline void Photoshop::_CameraRAWOpenOptions::PutTemperature ( long _arg1 ) {
    _com_dispatch_method(this, 0x43523135, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1021)
inline long Photoshop::_CameraRAWOpenOptions::GetTint ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x43523136, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1022)
inline void Photoshop::_CameraRAWOpenOptions::PutTint ( long _arg1 ) {
    _com_dispatch_method(this, 0x43523136, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1023)
inline double Photoshop::_CameraRAWOpenOptions::GetExposure ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x43523137, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1024)
inline void Photoshop::_CameraRAWOpenOptions::PutExposure ( double _arg1 ) {
    _com_dispatch_method(this, 0x43523137, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1025)
inline long Photoshop::_CameraRAWOpenOptions::GetShadows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x41353031, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1026)
inline void Photoshop::_CameraRAWOpenOptions::PutShadows ( long _arg1 ) {
    _com_dispatch_method(this, 0x41353031, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1027)
inline long Photoshop::_CameraRAWOpenOptions::GetBrightness ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4268746e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1028)
inline void Photoshop::_CameraRAWOpenOptions::PutBrightness ( long _arg1 ) {
    _com_dispatch_method(this, 0x4268746e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1029)
inline long Photoshop::_CameraRAWOpenOptions::GetContrast ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x43523139, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1030)
inline void Photoshop::_CameraRAWOpenOptions::PutContrast ( long _arg1 ) {
    _com_dispatch_method(this, 0x43523139, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1031)
inline long Photoshop::_CameraRAWOpenOptions::GetSaturation ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x70536174, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1032)
inline void Photoshop::_CameraRAWOpenOptions::PutSaturation ( long _arg1 ) {
    _com_dispatch_method(this, 0x70536174, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1033)
inline long Photoshop::_CameraRAWOpenOptions::GetSharpness ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x43523230, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1034)
inline void Photoshop::_CameraRAWOpenOptions::PutSharpness ( long _arg1 ) {
    _com_dispatch_method(this, 0x43523230, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1035)
inline long Photoshop::_CameraRAWOpenOptions::GetLuminanceSmoothing ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x43523231, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1036)
inline void Photoshop::_CameraRAWOpenOptions::PutLuminanceSmoothing ( long _arg1 ) {
    _com_dispatch_method(this, 0x43523231, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1037)
inline long Photoshop::_CameraRAWOpenOptions::GetColorNoiseReduction ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x43523232, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1038)
inline void Photoshop::_CameraRAWOpenOptions::PutColorNoiseReduction ( long _arg1 ) {
    _com_dispatch_method(this, 0x43523232, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1039)
inline long Photoshop::_CameraRAWOpenOptions::GetChromaticAberrationRC ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x43523233, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1040)
inline void Photoshop::_CameraRAWOpenOptions::PutChromaticAberrationRC ( long _arg1 ) {
    _com_dispatch_method(this, 0x43523233, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1041)
inline long Photoshop::_CameraRAWOpenOptions::GetChromaticAberrationBY ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x43523234, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1042)
inline void Photoshop::_CameraRAWOpenOptions::PutChromaticAberrationBY ( long _arg1 ) {
    _com_dispatch_method(this, 0x43523234, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1043)
inline long Photoshop::_CameraRAWOpenOptions::GetVignettingAmount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x43523235, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1044)
inline void Photoshop::_CameraRAWOpenOptions::PutVignettingAmount ( long _arg1 ) {
    _com_dispatch_method(this, 0x43523235, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1045)
inline long Photoshop::_CameraRAWOpenOptions::GetVignettingMidpoint ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x43523236, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1046)
inline void Photoshop::_CameraRAWOpenOptions::PutVignettingMidpoint ( long _arg1 ) {
    _com_dispatch_method(this, 0x43523236, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1047)
inline long Photoshop::_CameraRAWOpenOptions::GetShadowTint ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x43523237, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1048)
inline void Photoshop::_CameraRAWOpenOptions::PutShadowTint ( long _arg1 ) {
    _com_dispatch_method(this, 0x43523237, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1049)
inline long Photoshop::_CameraRAWOpenOptions::GetRedHue ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x43523238, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1050)
inline void Photoshop::_CameraRAWOpenOptions::PutRedHue ( long _arg1 ) {
    _com_dispatch_method(this, 0x43523238, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1051)
inline long Photoshop::_CameraRAWOpenOptions::GetRedSaturation ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x43523239, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1052)
inline void Photoshop::_CameraRAWOpenOptions::PutRedSaturation ( long _arg1 ) {
    _com_dispatch_method(this, 0x43523239, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1053)
inline long Photoshop::_CameraRAWOpenOptions::GetGreenHue ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x43523330, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1054)
inline void Photoshop::_CameraRAWOpenOptions::PutGreenHue ( long _arg1 ) {
    _com_dispatch_method(this, 0x43523330, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1055)
inline long Photoshop::_CameraRAWOpenOptions::GetGreenSaturation ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x43523331, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1056)
inline void Photoshop::_CameraRAWOpenOptions::PutGreenSaturation ( long _arg1 ) {
    _com_dispatch_method(this, 0x43523331, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1057)
inline long Photoshop::_CameraRAWOpenOptions::GetBlueHue ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x43523332, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1058)
inline void Photoshop::_CameraRAWOpenOptions::PutBlueHue ( long _arg1 ) {
    _com_dispatch_method(this, 0x43523332, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1059)
inline long Photoshop::_CameraRAWOpenOptions::GetBlueSaturation ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x43523333, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1060)
inline void Photoshop::_CameraRAWOpenOptions::PutBlueSaturation ( long _arg1 ) {
    _com_dispatch_method(this, 0x43523333, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1061)
inline Photoshop::_ApplicationPtr Photoshop::_CameraRAWOpenOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1062)
inline void Photoshop::_CameraRAWOpenOptions::PutObjectValue ( struct _CameraRAWOpenOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1063)
inline void Photoshop::_CameraRAWOpenOptions::PutRefObjectValue ( struct _CameraRAWOpenOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _PhotoshopSaveOptions wrapper method implementations
//

#pragma implementation_key(1064)
inline VARIANT_BOOL Photoshop::_PhotoshopSaveOptions::GetAlphaChannels ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70534163, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1065)
inline void Photoshop::_PhotoshopSaveOptions::PutAlphaChannels ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70534163, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1066)
inline VARIANT_BOOL Photoshop::_PhotoshopSaveOptions::GetLayers ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70534c72, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1067)
inline void Photoshop::_PhotoshopSaveOptions::PutLayers ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70534c72, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1068)
inline VARIANT_BOOL Photoshop::_PhotoshopSaveOptions::GetAnnotations ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7053416e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1069)
inline void Photoshop::_PhotoshopSaveOptions::PutAnnotations ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7053416e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1070)
inline VARIANT_BOOL Photoshop::_PhotoshopSaveOptions::GetSpotColors ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70535373, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1071)
inline void Photoshop::_PhotoshopSaveOptions::PutSpotColors ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70535373, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1072)
inline VARIANT_BOOL Photoshop::_PhotoshopSaveOptions::GetEmbedColorProfile ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70534550, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1073)
inline void Photoshop::_PhotoshopSaveOptions::PutEmbedColorProfile ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70534550, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1074)
inline Photoshop::_ApplicationPtr Photoshop::_PhotoshopSaveOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1075)
inline void Photoshop::_PhotoshopSaveOptions::PutObjectValue ( struct _PhotoshopSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1076)
inline void Photoshop::_PhotoshopSaveOptions::PutRefObjectValue ( struct _PhotoshopSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _BMPSaveOptions wrapper method implementations
//

#pragma implementation_key(1077)
inline VARIANT_BOOL Photoshop::_BMPSaveOptions::GetAlphaChannels ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70534163, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1078)
inline void Photoshop::_BMPSaveOptions::PutAlphaChannels ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70534163, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1079)
inline enum Photoshop::PsOperatingSystem Photoshop::_BMPSaveOptions::GetOSType ( ) {
    enum PsOperatingSystem _result;
    _com_dispatch_method(this, 0x70544f53, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1080)
inline void Photoshop::_BMPSaveOptions::PutOSType ( enum PsOperatingSystem _arg1 ) {
    _com_dispatch_method(this, 0x70544f53, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1081)
inline enum Photoshop::PsBMPDepthType Photoshop::_BMPSaveOptions::GetDepth ( ) {
    enum PsBMPDepthType _result;
    _com_dispatch_method(this, 0x4442736d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1082)
inline void Photoshop::_BMPSaveOptions::PutDepth ( enum PsBMPDepthType _arg1 ) {
    _com_dispatch_method(this, 0x4442736d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1083)
inline VARIANT_BOOL Photoshop::_BMPSaveOptions::GetRLECompression ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70524c45, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1084)
inline void Photoshop::_BMPSaveOptions::PutRLECompression ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70524c45, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1085)
inline VARIANT_BOOL Photoshop::_BMPSaveOptions::GetFlipRowOrder ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4670526f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1086)
inline void Photoshop::_BMPSaveOptions::PutFlipRowOrder ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4670526f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1087)
inline Photoshop::_ApplicationPtr Photoshop::_BMPSaveOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1088)
inline void Photoshop::_BMPSaveOptions::PutObjectValue ( struct _BMPSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1089)
inline void Photoshop::_BMPSaveOptions::PutRefObjectValue ( struct _BMPSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _GIFSaveOptions wrapper method implementations
//

#pragma implementation_key(1090)
inline long Photoshop::_GIFSaveOptions::GetColors ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7050434e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1091)
inline void Photoshop::_GIFSaveOptions::PutColors ( long _arg1 ) {
    _com_dispatch_method(this, 0x7050434e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1092)
inline enum Photoshop::PsDitherType Photoshop::_GIFSaveOptions::GetDither ( ) {
    enum PsDitherType _result;
    _com_dispatch_method(this, 0x44745470, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1093)
inline void Photoshop::_GIFSaveOptions::PutDither ( enum PsDitherType _arg1 ) {
    _com_dispatch_method(this, 0x44745470, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1094)
inline long Photoshop::_GIFSaveOptions::GetDitherAmount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4474416d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1095)
inline void Photoshop::_GIFSaveOptions::PutDitherAmount ( long _arg1 ) {
    _com_dispatch_method(this, 0x4474416d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1096)
inline enum Photoshop::PsForcedColors Photoshop::_GIFSaveOptions::GetForced ( ) {
    enum PsForcedColors _result;
    _com_dispatch_method(this, 0x5046636c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1097)
inline void Photoshop::_GIFSaveOptions::PutForced ( enum PsForcedColors _arg1 ) {
    _com_dispatch_method(this, 0x5046636c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1098)
inline VARIANT_BOOL Photoshop::_GIFSaveOptions::GetInterlaced ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x52774f72, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1099)
inline void Photoshop::_GIFSaveOptions::PutInterlaced ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x52774f72, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1100)
inline enum Photoshop::PsMatteType Photoshop::_GIFSaveOptions::GetMatte ( ) {
    enum PsMatteType _result;
    _com_dispatch_method(this, 0x4d747465, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1101)
inline void Photoshop::_GIFSaveOptions::PutMatte ( enum PsMatteType _arg1 ) {
    _com_dispatch_method(this, 0x4d747465, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1102)
inline enum Photoshop::PsPaletteType Photoshop::_GIFSaveOptions::GetPalette ( ) {
    enum PsPaletteType _result;
    _com_dispatch_method(this, 0x50506c74, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1103)
inline void Photoshop::_GIFSaveOptions::PutPalette ( enum PsPaletteType _arg1 ) {
    _com_dispatch_method(this, 0x50506c74, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1104)
inline VARIANT_BOOL Photoshop::_GIFSaveOptions::GetPreserveExactColors ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x44506578, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1105)
inline void Photoshop::_GIFSaveOptions::PutPreserveExactColors ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x44506578, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1106)
inline VARIANT_BOOL Photoshop::_GIFSaveOptions::GetTransparency ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x54727063, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1107)
inline void Photoshop::_GIFSaveOptions::PutTransparency ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x54727063, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1108)
inline Photoshop::_ApplicationPtr Photoshop::_GIFSaveOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1109)
inline void Photoshop::_GIFSaveOptions::PutObjectValue ( struct _GIFSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1110)
inline void Photoshop::_GIFSaveOptions::PutRefObjectValue ( struct _GIFSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _EPSSaveOptions wrapper method implementations
//

#pragma implementation_key(1111)
inline VARIANT_BOOL Photoshop::_EPSSaveOptions::GetEmbedColorProfile ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70534550, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1112)
inline void Photoshop::_EPSSaveOptions::PutEmbedColorProfile ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70534550, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1113)
inline enum Photoshop::PsPreviewType Photoshop::_EPSSaveOptions::GetPreview ( ) {
    enum PsPreviewType _result;
    _com_dispatch_method(this, 0x50775443, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1114)
inline void Photoshop::_EPSSaveOptions::PutPreview ( enum PsPreviewType _arg1 ) {
    _com_dispatch_method(this, 0x50775443, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1115)
inline enum Photoshop::PsSaveEncoding Photoshop::_EPSSaveOptions::GetEncoding ( ) {
    enum PsSaveEncoding _result;
    _com_dispatch_method(this, 0x456e4364, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1116)
inline void Photoshop::_EPSSaveOptions::PutEncoding ( enum PsSaveEncoding _arg1 ) {
    _com_dispatch_method(this, 0x456e4364, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1117)
inline VARIANT_BOOL Photoshop::_EPSSaveOptions::GetHalftoneScreen ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4866546e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1118)
inline void Photoshop::_EPSSaveOptions::PutHalftoneScreen ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4866546e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1119)
inline VARIANT_BOOL Photoshop::_EPSSaveOptions::GetTransferFunction ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x54736672, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1120)
inline void Photoshop::_EPSSaveOptions::PutTransferFunction ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x54736672, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1121)
inline VARIANT_BOOL Photoshop::_EPSSaveOptions::GetPSColorManagement ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x5073434d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1122)
inline void Photoshop::_EPSSaveOptions::PutPSColorManagement ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x5073434d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1123)
inline VARIANT_BOOL Photoshop::_EPSSaveOptions::GetVectorData ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x56634474, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1124)
inline void Photoshop::_EPSSaveOptions::PutVectorData ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x56634474, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1125)
inline VARIANT_BOOL Photoshop::_EPSSaveOptions::GetInterpolation ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x496d4950, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1126)
inline void Photoshop::_EPSSaveOptions::PutInterpolation ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x496d4950, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1127)
inline VARIANT_BOOL Photoshop::_EPSSaveOptions::GetTransparentWhites ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x54705768, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1128)
inline void Photoshop::_EPSSaveOptions::PutTransparentWhites ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x54705768, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1129)
inline Photoshop::_ApplicationPtr Photoshop::_EPSSaveOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1130)
inline void Photoshop::_EPSSaveOptions::PutObjectValue ( struct _EPSSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1131)
inline void Photoshop::_EPSSaveOptions::PutRefObjectValue ( struct _EPSSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _JPEGSaveOptions wrapper method implementations
//

#pragma implementation_key(1132)
inline VARIANT_BOOL Photoshop::_JPEGSaveOptions::GetEmbedColorProfile ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70534550, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1133)
inline void Photoshop::_JPEGSaveOptions::PutEmbedColorProfile ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70534550, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1134)
inline enum Photoshop::PsFormatOptionsType Photoshop::_JPEGSaveOptions::GetFormatOptions ( ) {
    enum PsFormatOptionsType _result;
    _com_dispatch_method(this, 0x4a504f70, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1135)
inline void Photoshop::_JPEGSaveOptions::PutFormatOptions ( enum PsFormatOptionsType _arg1 ) {
    _com_dispatch_method(this, 0x4a504f70, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1136)
inline enum Photoshop::PsMatteType Photoshop::_JPEGSaveOptions::GetMatte ( ) {
    enum PsMatteType _result;
    _com_dispatch_method(this, 0x4d747465, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1137)
inline void Photoshop::_JPEGSaveOptions::PutMatte ( enum PsMatteType _arg1 ) {
    _com_dispatch_method(this, 0x4d747465, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1138)
inline long Photoshop::_JPEGSaveOptions::GetScans ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x53636e73, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1139)
inline void Photoshop::_JPEGSaveOptions::PutScans ( long _arg1 ) {
    _com_dispatch_method(this, 0x53636e73, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1140)
inline long Photoshop::_JPEGSaveOptions::GetQuality ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x516c7479, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1141)
inline void Photoshop::_JPEGSaveOptions::PutQuality ( long _arg1 ) {
    _com_dispatch_method(this, 0x516c7479, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1142)
inline Photoshop::_ApplicationPtr Photoshop::_JPEGSaveOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1143)
inline void Photoshop::_JPEGSaveOptions::PutObjectValue ( struct _JPEGSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1144)
inline void Photoshop::_JPEGSaveOptions::PutRefObjectValue ( struct _JPEGSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _PDFSaveOptions wrapper method implementations
//

#pragma implementation_key(1145)
inline VARIANT_BOOL Photoshop::_PDFSaveOptions::GetAlphaChannels ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70534163, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1146)
inline void Photoshop::_PDFSaveOptions::PutAlphaChannels ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70534163, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1147)
inline VARIANT_BOOL Photoshop::_PDFSaveOptions::GetLayers ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70534c72, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1148)
inline void Photoshop::_PDFSaveOptions::PutLayers ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70534c72, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1149)
inline VARIANT_BOOL Photoshop::_PDFSaveOptions::GetAnnotations ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7053416e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1150)
inline void Photoshop::_PDFSaveOptions::PutAnnotations ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7053416e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1151)
inline VARIANT_BOOL Photoshop::_PDFSaveOptions::GetSpotColors ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70535373, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1152)
inline void Photoshop::_PDFSaveOptions::PutSpotColors ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70535373, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1153)
inline VARIANT_BOOL Photoshop::_PDFSaveOptions::GetEmbedColorProfile ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70534550, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1154)
inline void Photoshop::_PDFSaveOptions::PutEmbedColorProfile ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70534550, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1155)
inline VARIANT_BOOL Photoshop::_PDFSaveOptions::GetDowngradeColorProfile ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70446750, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1156)
inline void Photoshop::_PDFSaveOptions::PutDowngradeColorProfile ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70446750, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1157)
inline VARIANT_BOOL Photoshop::_PDFSaveOptions::GetTransparency ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x54727063, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1158)
inline void Photoshop::_PDFSaveOptions::PutTransparency ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x54727063, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1159)
inline VARIANT_BOOL Photoshop::_PDFSaveOptions::GetInterpolation ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x496d4950, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1160)
inline void Photoshop::_PDFSaveOptions::PutInterpolation ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x496d4950, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1161)
inline VARIANT_BOOL Photoshop::_PDFSaveOptions::GetVectorData ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x56634474, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1162)
inline void Photoshop::_PDFSaveOptions::PutVectorData ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x56634474, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1163)
inline VARIANT_BOOL Photoshop::_PDFSaveOptions::GetEmbedFonts ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x456d4674, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1164)
inline void Photoshop::_PDFSaveOptions::PutEmbedFonts ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x456d4674, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1165)
inline VARIANT_BOOL Photoshop::_PDFSaveOptions::GetUseOutlines ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x54784f6c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1166)
inline void Photoshop::_PDFSaveOptions::PutUseOutlines ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x54784f6c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1167)
inline enum Photoshop::PsPDFEncodingType Photoshop::_PDFSaveOptions::GetEncoding ( ) {
    enum PsPDFEncodingType _result;
    _com_dispatch_method(this, 0x456e4364, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1168)
inline void Photoshop::_PDFSaveOptions::PutEncoding ( enum PsPDFEncodingType _arg1 ) {
    _com_dispatch_method(this, 0x456e4364, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1169)
inline long Photoshop::_PDFSaveOptions::GetJPEGQuality ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x504a7067, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1170)
inline void Photoshop::_PDFSaveOptions::PutJPEGQuality ( long _arg1 ) {
    _com_dispatch_method(this, 0x504a7067, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1171)
inline _bstr_t Photoshop::_PDFSaveOptions::GetPresetFile ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7066696c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1172)
inline void Photoshop::_PDFSaveOptions::PutPresetFile ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7066696c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1173)
inline enum Photoshop::PsPDFStandardType Photoshop::_PDFSaveOptions::GetPDFStandard ( ) {
    enum PsPDFStandardType _result;
    _com_dispatch_method(this, 0x50443036, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1174)
inline void Photoshop::_PDFSaveOptions::PutPDFStandard ( enum PsPDFStandardType _arg1 ) {
    _com_dispatch_method(this, 0x50443036, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1175)
inline enum Photoshop::PsPDFCompatibilityType Photoshop::_PDFSaveOptions::GetPDFCompatibility ( ) {
    enum PsPDFCompatibilityType _result;
    _com_dispatch_method(this, 0x50443037, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1176)
inline void Photoshop::_PDFSaveOptions::PutPDFCompatibility ( enum PsPDFCompatibilityType _arg1 ) {
    _com_dispatch_method(this, 0x50443037, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1177)
inline _bstr_t Photoshop::_PDFSaveOptions::GetDescription ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x50443237, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1178)
inline void Photoshop::_PDFSaveOptions::PutDescription ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x50443237, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1179)
inline VARIANT_BOOL Photoshop::_PDFSaveOptions::GetPreserveEditing ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50443133, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1180)
inline void Photoshop::_PDFSaveOptions::PutPreserveEditing ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50443133, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1181)
inline VARIANT_BOOL Photoshop::_PDFSaveOptions::GetEmbedThumbnail ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50443134, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1182)
inline void Photoshop::_PDFSaveOptions::PutEmbedThumbnail ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50443134, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1183)
inline VARIANT_BOOL Photoshop::_PDFSaveOptions::GetOptimizeForWeb ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50443236, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1184)
inline void Photoshop::_PDFSaveOptions::PutOptimizeForWeb ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50443236, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1185)
inline VARIANT_BOOL Photoshop::_PDFSaveOptions::GetView ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50444636, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1186)
inline void Photoshop::_PDFSaveOptions::PutView ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50444636, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1187)
inline enum Photoshop::PsPDFResampleType Photoshop::_PDFSaveOptions::GetDownSample ( ) {
    enum PsPDFResampleType _result;
    _com_dispatch_method(this, 0x50443135, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1188)
inline void Photoshop::_PDFSaveOptions::PutDownSample ( enum PsPDFResampleType _arg1 ) {
    _com_dispatch_method(this, 0x50443135, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1189)
inline double Photoshop::_PDFSaveOptions::GetDownSampleSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x50443238, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1190)
inline void Photoshop::_PDFSaveOptions::PutDownSampleSize ( double _arg1 ) {
    _com_dispatch_method(this, 0x50443238, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1191)
inline double Photoshop::_PDFSaveOptions::GetDownSampleSizeLimit ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x50443239, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1192)
inline void Photoshop::_PDFSaveOptions::PutDownSampleSizeLimit ( double _arg1 ) {
    _com_dispatch_method(this, 0x50443239, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1193)
inline long Photoshop::_PDFSaveOptions::GetTileSize ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50443230, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1194)
inline void Photoshop::_PDFSaveOptions::PutTileSize ( long _arg1 ) {
    _com_dispatch_method(this, 0x50443230, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1195)
inline VARIANT_BOOL Photoshop::_PDFSaveOptions::GetConvertToEightBit ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50443231, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1196)
inline void Photoshop::_PDFSaveOptions::PutConvertToEightBit ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50443231, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1197)
inline VARIANT_BOOL Photoshop::_PDFSaveOptions::GetColorConversion ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50443330, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1198)
inline void Photoshop::_PDFSaveOptions::PutColorConversion ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50443330, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1199)
inline _bstr_t Photoshop::_PDFSaveOptions::GetDestinationProfile ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x50443232, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1200)
inline void Photoshop::_PDFSaveOptions::PutDestinationProfile ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x50443232, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1201)
inline VARIANT_BOOL Photoshop::_PDFSaveOptions::GetProfileInclusionPolicy ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50443331, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1202)
inline void Photoshop::_PDFSaveOptions::PutProfileInclusionPolicy ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50443331, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1203)
inline _bstr_t Photoshop::_PDFSaveOptions::GetOutputCondition ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x50443233, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1204)
inline void Photoshop::_PDFSaveOptions::PutOutputCondition ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x50443233, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1205)
inline _bstr_t Photoshop::_PDFSaveOptions::GetOutputConditionID ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x50443234, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1206)
inline void Photoshop::_PDFSaveOptions::PutOutputConditionID ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x50443234, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1207)
inline _bstr_t Photoshop::_PDFSaveOptions::GetRegistryName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x50443235, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1208)
inline void Photoshop::_PDFSaveOptions::PutRegistryName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x50443235, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1209)
inline Photoshop::_ApplicationPtr Photoshop::_PDFSaveOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1210)
inline void Photoshop::_PDFSaveOptions::PutObjectValue ( struct _PDFSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1211)
inline void Photoshop::_PDFSaveOptions::PutRefObjectValue ( struct _PDFSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _PICTFileSaveOptions wrapper method implementations
//

#pragma implementation_key(1212)
inline VARIANT_BOOL Photoshop::_PICTFileSaveOptions::GetAlphaChannels ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70534163, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1213)
inline void Photoshop::_PICTFileSaveOptions::PutAlphaChannels ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70534163, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1214)
inline VARIANT_BOOL Photoshop::_PICTFileSaveOptions::GetEmbedColorProfile ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70534550, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1215)
inline void Photoshop::_PICTFileSaveOptions::PutEmbedColorProfile ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70534550, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1216)
inline enum Photoshop::PsPICTBitsPerPixels Photoshop::_PICTFileSaveOptions::GetResolution ( ) {
    enum PsPICTBitsPerPixels _result;
    _com_dispatch_method(this, 0x5265734c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1217)
inline void Photoshop::_PICTFileSaveOptions::PutResolution ( enum PsPICTBitsPerPixels _arg1 ) {
    _com_dispatch_method(this, 0x5265734c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1218)
inline enum Photoshop::PsPICTCompression Photoshop::_PICTFileSaveOptions::GetCompression ( ) {
    enum PsPICTCompression _result;
    _com_dispatch_method(this, 0x70436d70, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1219)
inline void Photoshop::_PICTFileSaveOptions::PutCompression ( enum PsPICTCompression _arg1 ) {
    _com_dispatch_method(this, 0x70436d70, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1220)
inline Photoshop::_ApplicationPtr Photoshop::_PICTFileSaveOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1221)
inline void Photoshop::_PICTFileSaveOptions::PutObjectValue ( struct _PICTFileSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1222)
inline void Photoshop::_PICTFileSaveOptions::PutRefObjectValue ( struct _PICTFileSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _PixarSaveOptions wrapper method implementations
//

#pragma implementation_key(1223)
inline VARIANT_BOOL Photoshop::_PixarSaveOptions::GetAlphaChannels ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70534163, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1224)
inline void Photoshop::_PixarSaveOptions::PutAlphaChannels ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70534163, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1225)
inline Photoshop::_ApplicationPtr Photoshop::_PixarSaveOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1226)
inline void Photoshop::_PixarSaveOptions::PutObjectValue ( struct _PixarSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1227)
inline void Photoshop::_PixarSaveOptions::PutRefObjectValue ( struct _PixarSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _PNGSaveOptions wrapper method implementations
//

#pragma implementation_key(1228)
inline VARIANT_BOOL Photoshop::_PNGSaveOptions::GetInterlaced ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x52774f72, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1229)
inline void Photoshop::_PNGSaveOptions::PutInterlaced ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x52774f72, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1230)
inline long Photoshop::_PNGSaveOptions::GetCompression ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x70436d70, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1231)
inline void Photoshop::_PNGSaveOptions::PutCompression ( long _arg1 ) {
    _com_dispatch_method(this, 0x70436d70, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1232)
inline Photoshop::_ApplicationPtr Photoshop::_PNGSaveOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1233)
inline void Photoshop::_PNGSaveOptions::PutObjectValue ( struct _PNGSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1234)
inline void Photoshop::_PNGSaveOptions::PutRefObjectValue ( struct _PNGSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _RawSaveOptions wrapper method implementations
//

#pragma implementation_key(1235)
inline VARIANT_BOOL Photoshop::_RawSaveOptions::GetAlphaChannels ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70534163, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1236)
inline void Photoshop::_RawSaveOptions::PutAlphaChannels ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70534163, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1237)
inline VARIANT_BOOL Photoshop::_RawSaveOptions::GetSpotColors ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70535373, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1238)
inline void Photoshop::_RawSaveOptions::PutSpotColors ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70535373, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1239)
inline Photoshop::_ApplicationPtr Photoshop::_RawSaveOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1240)
inline void Photoshop::_RawSaveOptions::PutObjectValue ( struct _RawSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1241)
inline void Photoshop::_RawSaveOptions::PutRefObjectValue ( struct _RawSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _SGIRGBSaveOptions wrapper method implementations
//

#pragma implementation_key(1242)
inline VARIANT_BOOL Photoshop::_SGIRGBSaveOptions::GetAlphaChannels ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70534163, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1243)
inline void Photoshop::_SGIRGBSaveOptions::PutAlphaChannels ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70534163, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1244)
inline VARIANT_BOOL Photoshop::_SGIRGBSaveOptions::GetSpotColors ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70535373, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1245)
inline void Photoshop::_SGIRGBSaveOptions::PutSpotColors ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70535373, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1246)
inline Photoshop::_ApplicationPtr Photoshop::_SGIRGBSaveOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1247)
inline void Photoshop::_SGIRGBSaveOptions::PutObjectValue ( struct _SGIRGBSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1248)
inline void Photoshop::_SGIRGBSaveOptions::PutRefObjectValue ( struct _SGIRGBSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _TargaSaveOptions wrapper method implementations
//

#pragma implementation_key(1249)
inline enum Photoshop::PsTargaBitsPerPixels Photoshop::_TargaSaveOptions::GetResolution ( ) {
    enum PsTargaBitsPerPixels _result;
    _com_dispatch_method(this, 0x5265734c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1250)
inline void Photoshop::_TargaSaveOptions::PutResolution ( enum PsTargaBitsPerPixels _arg1 ) {
    _com_dispatch_method(this, 0x5265734c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1251)
inline VARIANT_BOOL Photoshop::_TargaSaveOptions::GetRLECompression ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70524c45, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1252)
inline void Photoshop::_TargaSaveOptions::PutRLECompression ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70524c45, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1253)
inline VARIANT_BOOL Photoshop::_TargaSaveOptions::GetAlphaChannels ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70534163, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1254)
inline void Photoshop::_TargaSaveOptions::PutAlphaChannels ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70534163, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1255)
inline Photoshop::_ApplicationPtr Photoshop::_TargaSaveOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1256)
inline void Photoshop::_TargaSaveOptions::PutObjectValue ( struct _TargaSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1257)
inline void Photoshop::_TargaSaveOptions::PutRefObjectValue ( struct _TargaSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _TiffSaveOptions wrapper method implementations
//

#pragma implementation_key(1258)
inline VARIANT_BOOL Photoshop::_TiffSaveOptions::GetAlphaChannels ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70534163, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1259)
inline void Photoshop::_TiffSaveOptions::PutAlphaChannels ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70534163, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1260)
inline VARIANT_BOOL Photoshop::_TiffSaveOptions::GetLayers ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70534c72, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1261)
inline void Photoshop::_TiffSaveOptions::PutLayers ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70534c72, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1262)
inline VARIANT_BOOL Photoshop::_TiffSaveOptions::GetAnnotations ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7053416e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1263)
inline void Photoshop::_TiffSaveOptions::PutAnnotations ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7053416e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1264)
inline VARIANT_BOOL Photoshop::_TiffSaveOptions::GetSpotColors ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70535373, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1265)
inline void Photoshop::_TiffSaveOptions::PutSpotColors ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70535373, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1266)
inline VARIANT_BOOL Photoshop::_TiffSaveOptions::GetEmbedColorProfile ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70534550, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1267)
inline void Photoshop::_TiffSaveOptions::PutEmbedColorProfile ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70534550, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1268)
inline enum Photoshop::PsTiffEncodingType Photoshop::_TiffSaveOptions::GetImageCompression ( ) {
    enum PsTiffEncodingType _result;
    _com_dispatch_method(this, 0x496d4370, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1269)
inline void Photoshop::_TiffSaveOptions::PutImageCompression ( enum PsTiffEncodingType _arg1 ) {
    _com_dispatch_method(this, 0x496d4370, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1270)
inline long Photoshop::_TiffSaveOptions::GetJPEGQuality ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x504a7067, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1271)
inline void Photoshop::_TiffSaveOptions::PutJPEGQuality ( long _arg1 ) {
    _com_dispatch_method(this, 0x504a7067, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1272)
inline enum Photoshop::PsByteOrderType Photoshop::_TiffSaveOptions::GetByteOrder ( ) {
    enum PsByteOrderType _result;
    _com_dispatch_method(this, 0x5466426f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1273)
inline void Photoshop::_TiffSaveOptions::PutByteOrder ( enum PsByteOrderType _arg1 ) {
    _com_dispatch_method(this, 0x5466426f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1274)
inline VARIANT_BOOL Photoshop::_TiffSaveOptions::GetSaveImagePyramid ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70505972, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1275)
inline void Photoshop::_TiffSaveOptions::PutSaveImagePyramid ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70505972, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1276)
inline VARIANT_BOOL Photoshop::_TiffSaveOptions::GetTransparency ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x54727063, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1277)
inline void Photoshop::_TiffSaveOptions::PutTransparency ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x54727063, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1278)
inline enum Photoshop::PsLayerCompressionType Photoshop::_TiffSaveOptions::GetLayerCompression ( ) {
    enum PsLayerCompressionType _result;
    _com_dispatch_method(this, 0x4c794370, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1279)
inline void Photoshop::_TiffSaveOptions::PutLayerCompression ( enum PsLayerCompressionType _arg1 ) {
    _com_dispatch_method(this, 0x4c794370, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1280)
inline VARIANT_BOOL Photoshop::_TiffSaveOptions::GetInterleaveChannels ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x634f6472, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1281)
inline void Photoshop::_TiffSaveOptions::PutInterleaveChannels ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x634f6472, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1282)
inline Photoshop::_ApplicationPtr Photoshop::_TiffSaveOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1283)
inline void Photoshop::_TiffSaveOptions::PutObjectValue ( struct _TiffSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1284)
inline void Photoshop::_TiffSaveOptions::PutRefObjectValue ( struct _TiffSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _DCS1_SaveOptions wrapper method implementations
//

#pragma implementation_key(1285)
inline VARIANT_BOOL Photoshop::_DCS1_SaveOptions::GetEmbedColorProfile ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70534550, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1286)
inline void Photoshop::_DCS1_SaveOptions::PutEmbedColorProfile ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70534550, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1287)
inline enum Photoshop::PsPreviewType Photoshop::_DCS1_SaveOptions::GetPreview ( ) {
    enum PsPreviewType _result;
    _com_dispatch_method(this, 0x50775443, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1288)
inline void Photoshop::_DCS1_SaveOptions::PutPreview ( enum PsPreviewType _arg1 ) {
    _com_dispatch_method(this, 0x50775443, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1289)
inline enum Photoshop::PsDCSType Photoshop::_DCS1_SaveOptions::GetDCS ( ) {
    enum PsDCSType _result;
    _com_dispatch_method(this, 0x44437363, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1290)
inline void Photoshop::_DCS1_SaveOptions::PutDCS ( enum PsDCSType _arg1 ) {
    _com_dispatch_method(this, 0x44437363, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1291)
inline enum Photoshop::PsSaveEncoding Photoshop::_DCS1_SaveOptions::GetEncoding ( ) {
    enum PsSaveEncoding _result;
    _com_dispatch_method(this, 0x456e4364, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1292)
inline void Photoshop::_DCS1_SaveOptions::PutEncoding ( enum PsSaveEncoding _arg1 ) {
    _com_dispatch_method(this, 0x456e4364, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1293)
inline VARIANT_BOOL Photoshop::_DCS1_SaveOptions::GetHalftoneScreen ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4866546e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1294)
inline void Photoshop::_DCS1_SaveOptions::PutHalftoneScreen ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4866546e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1295)
inline VARIANT_BOOL Photoshop::_DCS1_SaveOptions::GetTransferFunction ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x54736672, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1296)
inline void Photoshop::_DCS1_SaveOptions::PutTransferFunction ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x54736672, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1297)
inline VARIANT_BOOL Photoshop::_DCS1_SaveOptions::GetVectorData ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x56634474, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1298)
inline void Photoshop::_DCS1_SaveOptions::PutVectorData ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x56634474, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1299)
inline VARIANT_BOOL Photoshop::_DCS1_SaveOptions::GetInterpolation ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x496d4950, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1300)
inline void Photoshop::_DCS1_SaveOptions::PutInterpolation ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x496d4950, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1301)
inline Photoshop::_ApplicationPtr Photoshop::_DCS1_SaveOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1302)
inline void Photoshop::_DCS1_SaveOptions::PutObjectValue ( struct _DCS1_SaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1303)
inline void Photoshop::_DCS1_SaveOptions::PutRefObjectValue ( struct _DCS1_SaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _DCS2_SaveOptions wrapper method implementations
//

#pragma implementation_key(1304)
inline VARIANT_BOOL Photoshop::_DCS2_SaveOptions::GetSpotColors ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70535373, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1305)
inline void Photoshop::_DCS2_SaveOptions::PutSpotColors ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70535373, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1306)
inline VARIANT_BOOL Photoshop::_DCS2_SaveOptions::GetEmbedColorProfile ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70534550, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1307)
inline void Photoshop::_DCS2_SaveOptions::PutEmbedColorProfile ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70534550, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1308)
inline enum Photoshop::PsPreviewType Photoshop::_DCS2_SaveOptions::GetPreview ( ) {
    enum PsPreviewType _result;
    _com_dispatch_method(this, 0x50775443, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1309)
inline void Photoshop::_DCS2_SaveOptions::PutPreview ( enum PsPreviewType _arg1 ) {
    _com_dispatch_method(this, 0x50775443, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1310)
inline enum Photoshop::PsDCSType Photoshop::_DCS2_SaveOptions::GetDCS ( ) {
    enum PsDCSType _result;
    _com_dispatch_method(this, 0x44437363, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1311)
inline void Photoshop::_DCS2_SaveOptions::PutDCS ( enum PsDCSType _arg1 ) {
    _com_dispatch_method(this, 0x44437363, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1312)
inline VARIANT_BOOL Photoshop::_DCS2_SaveOptions::GetMultiFileDCS ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x44436d66, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1313)
inline void Photoshop::_DCS2_SaveOptions::PutMultiFileDCS ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x44436d66, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1314)
inline enum Photoshop::PsSaveEncoding Photoshop::_DCS2_SaveOptions::GetEncoding ( ) {
    enum PsSaveEncoding _result;
    _com_dispatch_method(this, 0x456e4364, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1315)
inline void Photoshop::_DCS2_SaveOptions::PutEncoding ( enum PsSaveEncoding _arg1 ) {
    _com_dispatch_method(this, 0x456e4364, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1316)
inline VARIANT_BOOL Photoshop::_DCS2_SaveOptions::GetHalftoneScreen ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4866546e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1317)
inline void Photoshop::_DCS2_SaveOptions::PutHalftoneScreen ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4866546e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1318)
inline VARIANT_BOOL Photoshop::_DCS2_SaveOptions::GetTransferFunction ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x54736672, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1319)
inline void Photoshop::_DCS2_SaveOptions::PutTransferFunction ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x54736672, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1320)
inline VARIANT_BOOL Photoshop::_DCS2_SaveOptions::GetVectorData ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x56634474, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1321)
inline void Photoshop::_DCS2_SaveOptions::PutVectorData ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x56634474, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1322)
inline VARIANT_BOOL Photoshop::_DCS2_SaveOptions::GetInterpolation ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x496d4950, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1323)
inline void Photoshop::_DCS2_SaveOptions::PutInterpolation ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x496d4950, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1324)
inline Photoshop::_ApplicationPtr Photoshop::_DCS2_SaveOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1325)
inline void Photoshop::_DCS2_SaveOptions::PutObjectValue ( struct _DCS2_SaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1326)
inline void Photoshop::_DCS2_SaveOptions::PutRefObjectValue ( struct _DCS2_SaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _ExportOptionsIllustrator wrapper method implementations
//

#pragma implementation_key(1327)
inline enum Photoshop::PsIllustratorPathType Photoshop::_ExportOptionsIllustrator::GetPath ( ) {
    enum PsIllustratorPathType _result;
    _com_dispatch_method(this, 0x54675074, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1328)
inline void Photoshop::_ExportOptionsIllustrator::PutPath ( enum PsIllustratorPathType _arg1 ) {
    _com_dispatch_method(this, 0x54675074, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1329)
inline _bstr_t Photoshop::_ExportOptionsIllustrator::GetPathName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x54506e6d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1330)
inline void Photoshop::_ExportOptionsIllustrator::PutPathName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x54506e6d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1331)
inline Photoshop::_ApplicationPtr Photoshop::_ExportOptionsIllustrator::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1332)
inline void Photoshop::_ExportOptionsIllustrator::PutObjectValue ( struct _ExportOptionsIllustrator * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1333)
inline void Photoshop::_ExportOptionsIllustrator::PutRefObjectValue ( struct _ExportOptionsIllustrator * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _ExportOptionsSaveForWeb wrapper method implementations
//

#pragma implementation_key(1334)
inline enum Photoshop::PsSaveDocumentType Photoshop::_ExportOptionsSaveForWeb::GetFormat ( ) {
    enum PsSaveDocumentType _result;
    _com_dispatch_method(this, 0x666c7470, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1335)
inline void Photoshop::_ExportOptionsSaveForWeb::PutFormat ( enum PsSaveDocumentType _arg1 ) {
    _com_dispatch_method(this, 0x666c7470, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1336)
inline VARIANT_BOOL Photoshop::_ExportOptionsSaveForWeb::GetPNG8 ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x53345732, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1337)
inline void Photoshop::_ExportOptionsSaveForWeb::PutPNG8 ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x53345732, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1338)
inline long Photoshop::_ExportOptionsSaveForWeb::GetLossy ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x53345733, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1339)
inline void Photoshop::_ExportOptionsSaveForWeb::PutLossy ( long _arg1 ) {
    _com_dispatch_method(this, 0x53345733, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1340)
inline enum Photoshop::PsColorReductionType Photoshop::_ExportOptionsSaveForWeb::GetColorReduction ( ) {
    enum PsColorReductionType _result;
    _com_dispatch_method(this, 0x53345734, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1341)
inline void Photoshop::_ExportOptionsSaveForWeb::PutColorReduction ( enum PsColorReductionType _arg1 ) {
    _com_dispatch_method(this, 0x53345734, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1342)
inline long Photoshop::_ExportOptionsSaveForWeb::GetColors ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7050434e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1343)
inline void Photoshop::_ExportOptionsSaveForWeb::PutColors ( long _arg1 ) {
    _com_dispatch_method(this, 0x7050434e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1344)
inline enum Photoshop::PsDitherType Photoshop::_ExportOptionsSaveForWeb::GetDither ( ) {
    enum PsDitherType _result;
    _com_dispatch_method(this, 0x44745470, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1345)
inline void Photoshop::_ExportOptionsSaveForWeb::PutDither ( enum PsDitherType _arg1 ) {
    _com_dispatch_method(this, 0x44745470, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1346)
inline long Photoshop::_ExportOptionsSaveForWeb::GetDitherAmount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4474416d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1347)
inline void Photoshop::_ExportOptionsSaveForWeb::PutDitherAmount ( long _arg1 ) {
    _com_dispatch_method(this, 0x4474416d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1348)
inline VARIANT_BOOL Photoshop::_ExportOptionsSaveForWeb::GetTransparency ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x54727063, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1349)
inline void Photoshop::_ExportOptionsSaveForWeb::PutTransparency ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x54727063, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1350)
inline enum Photoshop::PsDitherType Photoshop::_ExportOptionsSaveForWeb::GetTransparencyDither ( ) {
    enum PsDitherType _result;
    _com_dispatch_method(this, 0x53345735, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1351)
inline void Photoshop::_ExportOptionsSaveForWeb::PutTransparencyDither ( enum PsDitherType _arg1 ) {
    _com_dispatch_method(this, 0x53345735, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1352)
inline long Photoshop::_ExportOptionsSaveForWeb::GetTransparencyAmount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x53345736, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1353)
inline void Photoshop::_ExportOptionsSaveForWeb::PutTransparencyAmount ( long _arg1 ) {
    _com_dispatch_method(this, 0x53345736, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1354)
inline VARIANT_BOOL Photoshop::_ExportOptionsSaveForWeb::GetInterlaced ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x52774f72, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1355)
inline void Photoshop::_ExportOptionsSaveForWeb::PutInterlaced ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x52774f72, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1356)
inline Photoshop::_RGBColorPtr Photoshop::_ExportOptionsSaveForWeb::GetMatteColor ( ) {
    struct _RGBColor * _result = 0;
    _com_dispatch_method(this, 0x4d747465, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _RGBColorPtr(_result, false);
}

#pragma implementation_key(1357)
inline void Photoshop::_ExportOptionsSaveForWeb::PutMatteColor ( struct _RGBColor * _arg1 ) {
    _com_dispatch_method(this, 0x4d747465, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1358)
inline void Photoshop::_ExportOptionsSaveForWeb::PutRefMatteColor ( struct _RGBColor * _arg1 ) {
    _com_dispatch_method(this, 0x4d747465, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1359)
inline long Photoshop::_ExportOptionsSaveForWeb::GetWebSnap ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x53345737, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1360)
inline void Photoshop::_ExportOptionsSaveForWeb::PutWebSnap ( long _arg1 ) {
    _com_dispatch_method(this, 0x53345737, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1361)
inline VARIANT_BOOL Photoshop::_ExportOptionsSaveForWeb::GetOptimized ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x53345738, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1362)
inline void Photoshop::_ExportOptionsSaveForWeb::PutOptimized ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x53345738, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1363)
inline long Photoshop::_ExportOptionsSaveForWeb::GetQuality ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x516c7479, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1364)
inline void Photoshop::_ExportOptionsSaveForWeb::PutQuality ( long _arg1 ) {
    _com_dispatch_method(this, 0x516c7479, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1365)
inline VARIANT_BOOL Photoshop::_ExportOptionsSaveForWeb::GetIncludeProfile ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x53345739, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1366)
inline void Photoshop::_ExportOptionsSaveForWeb::PutIncludeProfile ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x53345739, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1367)
inline double Photoshop::_ExportOptionsSaveForWeb::GetBlur ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x46303031, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1368)
inline void Photoshop::_ExportOptionsSaveForWeb::PutBlur ( double _arg1 ) {
    _com_dispatch_method(this, 0x46303031, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1369)
inline Photoshop::_ApplicationPtr Photoshop::_ExportOptionsSaveForWeb::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1370)
inline void Photoshop::_ExportOptionsSaveForWeb::PutObjectValue ( struct _ExportOptionsSaveForWeb * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1371)
inline void Photoshop::_ExportOptionsSaveForWeb::PutRefObjectValue ( struct _ExportOptionsSaveForWeb * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _BitmapConversionOptions wrapper method implementations
//

#pragma implementation_key(1372)
inline double Photoshop::_BitmapConversionOptions::GetResolution ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x5265734c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1373)
inline void Photoshop::_BitmapConversionOptions::PutResolution ( double _arg1 ) {
    _com_dispatch_method(this, 0x5265734c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1374)
inline enum Photoshop::PsBitmapConversionType Photoshop::_BitmapConversionOptions::GetMethod ( ) {
    enum PsBitmapConversionType _result;
    _com_dispatch_method(this, 0x43764d74, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1375)
inline void Photoshop::_BitmapConversionOptions::PutMethod ( enum PsBitmapConversionType _arg1 ) {
    _com_dispatch_method(this, 0x43764d74, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1376)
inline _bstr_t Photoshop::_BitmapConversionOptions::GetPatternName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x50614e6d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1377)
inline void Photoshop::_BitmapConversionOptions::PutPatternName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x50614e6d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1378)
inline double Photoshop::_BitmapConversionOptions::GetFrequency ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x46716379, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1379)
inline void Photoshop::_BitmapConversionOptions::PutFrequency ( double _arg1 ) {
    _com_dispatch_method(this, 0x46716379, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1380)
inline double Photoshop::_BitmapConversionOptions::GetAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x416e676c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1381)
inline void Photoshop::_BitmapConversionOptions::PutAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x416e676c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1382)
inline enum Photoshop::PsBitmapHalfToneType Photoshop::_BitmapConversionOptions::GetShape ( ) {
    enum PsBitmapHalfToneType _result;
    _com_dispatch_method(this, 0x53635368, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1383)
inline void Photoshop::_BitmapConversionOptions::PutShape ( enum PsBitmapHalfToneType _arg1 ) {
    _com_dispatch_method(this, 0x53635368, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1384)
inline Photoshop::_ApplicationPtr Photoshop::_BitmapConversionOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1385)
inline void Photoshop::_BitmapConversionOptions::PutObjectValue ( struct _BitmapConversionOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1386)
inline void Photoshop::_BitmapConversionOptions::PutRefObjectValue ( struct _BitmapConversionOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _IndexedConversionOptions wrapper method implementations
//

#pragma implementation_key(1387)
inline enum Photoshop::PsPaletteType Photoshop::_IndexedConversionOptions::GetPalette ( ) {
    enum PsPaletteType _result;
    _com_dispatch_method(this, 0x50506c74, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1388)
inline void Photoshop::_IndexedConversionOptions::PutPalette ( enum PsPaletteType _arg1 ) {
    _com_dispatch_method(this, 0x50506c74, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1389)
inline long Photoshop::_IndexedConversionOptions::GetColors ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7050434e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1390)
inline void Photoshop::_IndexedConversionOptions::PutColors ( long _arg1 ) {
    _com_dispatch_method(this, 0x7050434e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1391)
inline enum Photoshop::PsForcedColors Photoshop::_IndexedConversionOptions::GetForced ( ) {
    enum PsForcedColors _result;
    _com_dispatch_method(this, 0x5046636c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1392)
inline void Photoshop::_IndexedConversionOptions::PutForced ( enum PsForcedColors _arg1 ) {
    _com_dispatch_method(this, 0x5046636c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1393)
inline VARIANT_BOOL Photoshop::_IndexedConversionOptions::GetTransparency ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x54727063, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1394)
inline void Photoshop::_IndexedConversionOptions::PutTransparency ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x54727063, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1395)
inline enum Photoshop::PsDitherType Photoshop::_IndexedConversionOptions::GetDither ( ) {
    enum PsDitherType _result;
    _com_dispatch_method(this, 0x44745470, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1396)
inline void Photoshop::_IndexedConversionOptions::PutDither ( enum PsDitherType _arg1 ) {
    _com_dispatch_method(this, 0x44745470, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1397)
inline long Photoshop::_IndexedConversionOptions::GetDitherAmount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4474416d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1398)
inline void Photoshop::_IndexedConversionOptions::PutDitherAmount ( long _arg1 ) {
    _com_dispatch_method(this, 0x4474416d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1399)
inline VARIANT_BOOL Photoshop::_IndexedConversionOptions::GetPreserveExactColors ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x44506578, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1400)
inline void Photoshop::_IndexedConversionOptions::PutPreserveExactColors ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x44506578, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1401)
inline enum Photoshop::PsMatteType Photoshop::_IndexedConversionOptions::GetMatte ( ) {
    enum PsMatteType _result;
    _com_dispatch_method(this, 0x4d747465, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1402)
inline void Photoshop::_IndexedConversionOptions::PutMatte ( enum PsMatteType _arg1 ) {
    _com_dispatch_method(this, 0x4d747465, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1403)
inline Photoshop::_ApplicationPtr Photoshop::_IndexedConversionOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1404)
inline void Photoshop::_IndexedConversionOptions::PutObjectValue ( struct _IndexedConversionOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1405)
inline void Photoshop::_IndexedConversionOptions::PutRefObjectValue ( struct _IndexedConversionOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _NoColor wrapper method implementations
//

#pragma implementation_key(1406)
inline Photoshop::_ApplicationPtr Photoshop::_NoColor::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1407)
inline void Photoshop::_NoColor::PutObjectValue ( struct _NoColor * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1408)
inline void Photoshop::_NoColor::PutRefObjectValue ( struct _NoColor * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _PresentationOptions wrapper method implementations
//

#pragma implementation_key(1409)
inline VARIANT_BOOL Photoshop::_PresentationOptions::GetPresentation ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50444635, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1410)
inline void Photoshop::_PresentationOptions::PutPresentation ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50444635, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1411)
inline VARIANT_BOOL Photoshop::_PresentationOptions::GetAutoAdvance ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50444637, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1412)
inline void Photoshop::_PresentationOptions::PutAutoAdvance ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50444637, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1413)
inline long Photoshop::_PresentationOptions::GetInterval ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50444638, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1414)
inline void Photoshop::_PresentationOptions::PutInterval ( long _arg1 ) {
    _com_dispatch_method(this, 0x50444638, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1415)
inline VARIANT_BOOL Photoshop::_PresentationOptions::GetLoop ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50444639, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1416)
inline void Photoshop::_PresentationOptions::PutLoop ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50444639, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1417)
inline enum Photoshop::PsTransitionType Photoshop::_PresentationOptions::GetTransition ( ) {
    enum PsTransitionType _result;
    _com_dispatch_method(this, 0x50444661, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1418)
inline void Photoshop::_PresentationOptions::PutTransition ( enum PsTransitionType _arg1 ) {
    _com_dispatch_method(this, 0x50444661, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1419)
inline enum Photoshop::PsMagnificationType Photoshop::_PresentationOptions::GetMagnification ( ) {
    enum PsMagnificationType _result;
    _com_dispatch_method(this, 0x50444675, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1420)
inline void Photoshop::_PresentationOptions::PutMagnification ( enum PsMagnificationType _arg1 ) {
    _com_dispatch_method(this, 0x50444675, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1421)
inline VARIANT_BOOL Photoshop::_PresentationOptions::GetIncludeFilename ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50473631, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1422)
inline void Photoshop::_PresentationOptions::PutIncludeFilename ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50473631, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1423)
inline Photoshop::_PDFSaveOptionsPtr Photoshop::_PresentationOptions::GetPDFFileOptions ( ) {
    struct _PDFSaveOptions * _result = 0;
    _com_dispatch_method(this, 0x50444674, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _PDFSaveOptionsPtr(_result, false);
}

#pragma implementation_key(1424)
inline void Photoshop::_PresentationOptions::PutPDFFileOptions ( struct _PDFSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x50444674, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1425)
inline void Photoshop::_PresentationOptions::PutRefPDFFileOptions ( struct _PDFSaveOptions * _arg1 ) {
    _com_dispatch_method(this, 0x50444674, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1426)
inline Photoshop::_ApplicationPtr Photoshop::_PresentationOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1427)
inline void Photoshop::_PresentationOptions::PutObjectValue ( struct _PresentationOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1428)
inline void Photoshop::_PresentationOptions::PutRefObjectValue ( struct _PresentationOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _GalleryOptions wrapper method implementations
//

#pragma implementation_key(1429)
inline _bstr_t Photoshop::_GalleryOptions::GetLayoutStyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x50473338, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1430)
inline void Photoshop::_GalleryOptions::PutLayoutStyle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x50473338, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1431)
inline _bstr_t Photoshop::_GalleryOptions::GetEmailAddress ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x50473339, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1432)
inline void Photoshop::_GalleryOptions::PutEmailAddress ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x50473339, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1433)
inline VARIANT_BOOL Photoshop::_GalleryOptions::GetUseShortExtension ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50473430, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1434)
inline void Photoshop::_GalleryOptions::PutUseShortExtension ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50473430, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1435)
inline VARIANT_BOOL Photoshop::_GalleryOptions::GetUseUTF8Encoding ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50473431, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1436)
inline void Photoshop::_GalleryOptions::PutUseUTF8Encoding ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50473431, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1437)
inline VARIANT_BOOL Photoshop::_GalleryOptions::GetIncludeSubFolders ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50473432, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1438)
inline void Photoshop::_GalleryOptions::PutIncludeSubFolders ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50473432, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1439)
inline VARIANT_BOOL Photoshop::_GalleryOptions::GetAddSizeAttributes ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50473433, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1440)
inline void Photoshop::_GalleryOptions::PutAddSizeAttributes ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50473433, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1441)
inline VARIANT_BOOL Photoshop::_GalleryOptions::GetPreserveAllMetadata ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50473533, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1442)
inline void Photoshop::_GalleryOptions::PutPreserveAllMetadata ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50473533, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1443)
inline Photoshop::_GalleryBannerOptionsPtr Photoshop::_GalleryOptions::GetBannerOptions ( ) {
    struct _GalleryBannerOptions * _result = 0;
    _com_dispatch_method(this, 0x50473534, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _GalleryBannerOptionsPtr(_result, false);
}

#pragma implementation_key(1444)
inline void Photoshop::_GalleryOptions::PutBannerOptions ( struct _GalleryBannerOptions * _arg1 ) {
    _com_dispatch_method(this, 0x50473534, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1445)
inline void Photoshop::_GalleryOptions::PutRefBannerOptions ( struct _GalleryBannerOptions * _arg1 ) {
    _com_dispatch_method(this, 0x50473534, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1446)
inline Photoshop::_GalleryImagesOptionsPtr Photoshop::_GalleryOptions::GetImagesOptions ( ) {
    struct _GalleryImagesOptions * _result = 0;
    _com_dispatch_method(this, 0x50473435, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _GalleryImagesOptionsPtr(_result, false);
}

#pragma implementation_key(1447)
inline void Photoshop::_GalleryOptions::PutImagesOptions ( struct _GalleryImagesOptions * _arg1 ) {
    _com_dispatch_method(this, 0x50473435, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1448)
inline void Photoshop::_GalleryOptions::PutRefImagesOptions ( struct _GalleryImagesOptions * _arg1 ) {
    _com_dispatch_method(this, 0x50473435, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1449)
inline Photoshop::_GalleryThumbnailOptionsPtr Photoshop::_GalleryOptions::GetThumbnailOptions ( ) {
    struct _GalleryThumbnailOptions * _result = 0;
    _com_dispatch_method(this, 0x50473436, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _GalleryThumbnailOptionsPtr(_result, false);
}

#pragma implementation_key(1450)
inline void Photoshop::_GalleryOptions::PutThumbnailOptions ( struct _GalleryThumbnailOptions * _arg1 ) {
    _com_dispatch_method(this, 0x50473436, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1451)
inline void Photoshop::_GalleryOptions::PutRefThumbnailOptions ( struct _GalleryThumbnailOptions * _arg1 ) {
    _com_dispatch_method(this, 0x50473436, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1452)
inline Photoshop::_GalleryCustomColorOptionsPtr Photoshop::_GalleryOptions::GetCustomColorOptions ( ) {
    struct _GalleryCustomColorOptions * _result = 0;
    _com_dispatch_method(this, 0x50473437, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _GalleryCustomColorOptionsPtr(_result, false);
}

#pragma implementation_key(1453)
inline void Photoshop::_GalleryOptions::PutCustomColorOptions ( struct _GalleryCustomColorOptions * _arg1 ) {
    _com_dispatch_method(this, 0x50473437, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1454)
inline void Photoshop::_GalleryOptions::PutRefCustomColorOptions ( struct _GalleryCustomColorOptions * _arg1 ) {
    _com_dispatch_method(this, 0x50473437, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1455)
inline Photoshop::_GallerySecurityOptionsPtr Photoshop::_GalleryOptions::GetSecurityOptions ( ) {
    struct _GallerySecurityOptions * _result = 0;
    _com_dispatch_method(this, 0x50473438, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _GallerySecurityOptionsPtr(_result, false);
}

#pragma implementation_key(1456)
inline void Photoshop::_GalleryOptions::PutSecurityOptions ( struct _GallerySecurityOptions * _arg1 ) {
    _com_dispatch_method(this, 0x50473438, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1457)
inline void Photoshop::_GalleryOptions::PutRefSecurityOptions ( struct _GallerySecurityOptions * _arg1 ) {
    _com_dispatch_method(this, 0x50473438, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1458)
inline Photoshop::_ApplicationPtr Photoshop::_GalleryOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1459)
inline void Photoshop::_GalleryOptions::PutObjectValue ( struct _GalleryOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1460)
inline void Photoshop::_GalleryOptions::PutRefObjectValue ( struct _GalleryOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _GalleryBannerOptions wrapper method implementations
//

#pragma implementation_key(1461)
inline _bstr_t Photoshop::_GalleryBannerOptions::GetSiteName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x50473439, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1462)
inline void Photoshop::_GalleryBannerOptions::PutSiteName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x50473439, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1463)
inline _bstr_t Photoshop::_GalleryBannerOptions::GetPhotographer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x50473530, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1464)
inline void Photoshop::_GalleryBannerOptions::PutPhotographer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x50473530, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1465)
inline _bstr_t Photoshop::_GalleryBannerOptions::GetContactInfo ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x50473531, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1466)
inline void Photoshop::_GalleryBannerOptions::PutContactInfo ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x50473531, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1467)
inline _bstr_t Photoshop::_GalleryBannerOptions::GetDate ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x50473532, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1468)
inline void Photoshop::_GalleryBannerOptions::PutDate ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x50473532, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1469)
inline enum Photoshop::PsGalleryFontType Photoshop::_GalleryBannerOptions::GetFont ( ) {
    enum PsGalleryFontType _result;
    _com_dispatch_method(this, 0x63466e74, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1470)
inline void Photoshop::_GalleryBannerOptions::PutFont ( enum PsGalleryFontType _arg1 ) {
    _com_dispatch_method(this, 0x63466e74, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1471)
inline long Photoshop::_GalleryBannerOptions::GetFontSize ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50473734, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1472)
inline void Photoshop::_GalleryBannerOptions::PutFontSize ( long _arg1 ) {
    _com_dispatch_method(this, 0x50473734, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1473)
inline Photoshop::_ApplicationPtr Photoshop::_GalleryBannerOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1474)
inline void Photoshop::_GalleryBannerOptions::PutObjectValue ( struct _GalleryBannerOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1475)
inline void Photoshop::_GalleryBannerOptions::PutRefObjectValue ( struct _GalleryBannerOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _GalleryImagesOptions wrapper method implementations
//

#pragma implementation_key(1476)
inline VARIANT_BOOL Photoshop::_GalleryImagesOptions::GetNumericLinks ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50473535, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1477)
inline void Photoshop::_GalleryImagesOptions::PutNumericLinks ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50473535, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1478)
inline VARIANT_BOOL Photoshop::_GalleryImagesOptions::GetResizeImages ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50473536, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1479)
inline void Photoshop::_GalleryImagesOptions::PutResizeImages ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50473536, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1480)
inline long Photoshop::_GalleryImagesOptions::GetDimension ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50473537, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1481)
inline void Photoshop::_GalleryImagesOptions::PutDimension ( long _arg1 ) {
    _com_dispatch_method(this, 0x50473537, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1482)
inline enum Photoshop::PsGalleryConstrainType Photoshop::_GalleryImagesOptions::GetResizeConstraint ( ) {
    enum PsGalleryConstrainType _result;
    _com_dispatch_method(this, 0x50473538, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1483)
inline void Photoshop::_GalleryImagesOptions::PutResizeConstraint ( enum PsGalleryConstrainType _arg1 ) {
    _com_dispatch_method(this, 0x50473538, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1484)
inline long Photoshop::_GalleryImagesOptions::GetImageQuality ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50473539, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1485)
inline void Photoshop::_GalleryImagesOptions::PutImageQuality ( long _arg1 ) {
    _com_dispatch_method(this, 0x50473539, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1486)
inline long Photoshop::_GalleryImagesOptions::GetBorder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50473630, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1487)
inline void Photoshop::_GalleryImagesOptions::PutBorder ( long _arg1 ) {
    _com_dispatch_method(this, 0x50473630, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1488)
inline VARIANT_BOOL Photoshop::_GalleryImagesOptions::GetIncludeFilename ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50473631, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1489)
inline void Photoshop::_GalleryImagesOptions::PutIncludeFilename ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50473631, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1490)
inline VARIANT_BOOL Photoshop::_GalleryImagesOptions::GetCaption ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x44693031, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1491)
inline void Photoshop::_GalleryImagesOptions::PutCaption ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x44693031, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1492)
inline VARIANT_BOOL Photoshop::_GalleryImagesOptions::GetIncludeCredits ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50473633, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1493)
inline void Photoshop::_GalleryImagesOptions::PutIncludeCredits ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50473633, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1494)
inline VARIANT_BOOL Photoshop::_GalleryImagesOptions::GetIncludeTitle ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50473634, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1495)
inline void Photoshop::_GalleryImagesOptions::PutIncludeTitle ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50473634, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1496)
inline VARIANT_BOOL Photoshop::_GalleryImagesOptions::GetIncludeCopyright ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50473635, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1497)
inline void Photoshop::_GalleryImagesOptions::PutIncludeCopyright ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50473635, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1498)
inline enum Photoshop::PsGalleryFontType Photoshop::_GalleryImagesOptions::GetFont ( ) {
    enum PsGalleryFontType _result;
    _com_dispatch_method(this, 0x63466e74, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1499)
inline void Photoshop::_GalleryImagesOptions::PutFont ( enum PsGalleryFontType _arg1 ) {
    _com_dispatch_method(this, 0x63466e74, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1500)
inline long Photoshop::_GalleryImagesOptions::GetFontSize ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50473734, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1501)
inline void Photoshop::_GalleryImagesOptions::PutFontSize ( long _arg1 ) {
    _com_dispatch_method(this, 0x50473734, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1502)
inline Photoshop::_ApplicationPtr Photoshop::_GalleryImagesOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1503)
inline void Photoshop::_GalleryImagesOptions::PutObjectValue ( struct _GalleryImagesOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1504)
inline void Photoshop::_GalleryImagesOptions::PutRefObjectValue ( struct _GalleryImagesOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _GalleryThumbnailOptions wrapper method implementations
//

#pragma implementation_key(1505)
inline VARIANT_BOOL Photoshop::_GalleryThumbnailOptions::GetIncludeFilename ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50473631, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1506)
inline void Photoshop::_GalleryThumbnailOptions::PutIncludeFilename ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50473631, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1507)
inline VARIANT_BOOL Photoshop::_GalleryThumbnailOptions::GetCaption ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x44693031, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1508)
inline void Photoshop::_GalleryThumbnailOptions::PutCaption ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x44693031, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1509)
inline VARIANT_BOOL Photoshop::_GalleryThumbnailOptions::GetIncludeCredits ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50473633, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1510)
inline void Photoshop::_GalleryThumbnailOptions::PutIncludeCredits ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50473633, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1511)
inline VARIANT_BOOL Photoshop::_GalleryThumbnailOptions::GetIncludeTitle ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50473634, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1512)
inline void Photoshop::_GalleryThumbnailOptions::PutIncludeTitle ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50473634, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1513)
inline VARIANT_BOOL Photoshop::_GalleryThumbnailOptions::GetIncludeCopyright ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50473635, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1514)
inline void Photoshop::_GalleryThumbnailOptions::PutIncludeCopyright ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50473635, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1515)
inline enum Photoshop::PsGalleryFontType Photoshop::_GalleryThumbnailOptions::GetFont ( ) {
    enum PsGalleryFontType _result;
    _com_dispatch_method(this, 0x63466e74, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1516)
inline void Photoshop::_GalleryThumbnailOptions::PutFont ( enum PsGalleryFontType _arg1 ) {
    _com_dispatch_method(this, 0x63466e74, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1517)
inline long Photoshop::_GalleryThumbnailOptions::GetFontSize ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50473734, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1518)
inline void Photoshop::_GalleryThumbnailOptions::PutFontSize ( long _arg1 ) {
    _com_dispatch_method(this, 0x50473734, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1519)
inline enum Photoshop::PsGalleryThumbSizeType Photoshop::_GalleryThumbnailOptions::GetSize ( ) {
    enum PsGalleryThumbSizeType _result;
    _com_dispatch_method(this, 0x7074737a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1520)
inline void Photoshop::_GalleryThumbnailOptions::PutSize ( enum PsGalleryThumbSizeType _arg1 ) {
    _com_dispatch_method(this, 0x7074737a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1521)
inline long Photoshop::_GalleryThumbnailOptions::GetDimension ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50473537, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1522)
inline void Photoshop::_GalleryThumbnailOptions::PutDimension ( long _arg1 ) {
    _com_dispatch_method(this, 0x50473537, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1523)
inline long Photoshop::_GalleryThumbnailOptions::GetColumnCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50473737, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1524)
inline void Photoshop::_GalleryThumbnailOptions::PutColumnCount ( long _arg1 ) {
    _com_dispatch_method(this, 0x50473737, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1525)
inline long Photoshop::_GalleryThumbnailOptions::GetRowCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50473738, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1526)
inline void Photoshop::_GalleryThumbnailOptions::PutRowCount ( long _arg1 ) {
    _com_dispatch_method(this, 0x50473738, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1527)
inline long Photoshop::_GalleryThumbnailOptions::GetBorder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50473630, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1528)
inline void Photoshop::_GalleryThumbnailOptions::PutBorder ( long _arg1 ) {
    _com_dispatch_method(this, 0x50473630, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1529)
inline Photoshop::_ApplicationPtr Photoshop::_GalleryThumbnailOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1530)
inline void Photoshop::_GalleryThumbnailOptions::PutObjectValue ( struct _GalleryThumbnailOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1531)
inline void Photoshop::_GalleryThumbnailOptions::PutRefObjectValue ( struct _GalleryThumbnailOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _GalleryCustomColorOptions wrapper method implementations
//

#pragma implementation_key(1532)
inline Photoshop::_RGBColorPtr Photoshop::_GalleryCustomColorOptions::GetBackgroundColor ( ) {
    struct _RGBColor * _result = 0;
    _com_dispatch_method(this, 0x42674372, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _RGBColorPtr(_result, false);
}

#pragma implementation_key(1533)
inline void Photoshop::_GalleryCustomColorOptions::PutBackgroundColor ( struct _RGBColor * _arg1 ) {
    _com_dispatch_method(this, 0x42674372, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1534)
inline void Photoshop::_GalleryCustomColorOptions::PutRefBackgroundColor ( struct _RGBColor * _arg1 ) {
    _com_dispatch_method(this, 0x42674372, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1535)
inline Photoshop::_RGBColorPtr Photoshop::_GalleryCustomColorOptions::GetBannerColor ( ) {
    struct _RGBColor * _result = 0;
    _com_dispatch_method(this, 0x50473831, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _RGBColorPtr(_result, false);
}

#pragma implementation_key(1536)
inline void Photoshop::_GalleryCustomColorOptions::PutBannerColor ( struct _RGBColor * _arg1 ) {
    _com_dispatch_method(this, 0x50473831, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1537)
inline void Photoshop::_GalleryCustomColorOptions::PutRefBannerColor ( struct _RGBColor * _arg1 ) {
    _com_dispatch_method(this, 0x50473831, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1538)
inline Photoshop::_RGBColorPtr Photoshop::_GalleryCustomColorOptions::GetTextColor ( ) {
    struct _RGBColor * _result = 0;
    _com_dispatch_method(this, 0x50473832, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _RGBColorPtr(_result, false);
}

#pragma implementation_key(1539)
inline void Photoshop::_GalleryCustomColorOptions::PutTextColor ( struct _RGBColor * _arg1 ) {
    _com_dispatch_method(this, 0x50473832, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1540)
inline void Photoshop::_GalleryCustomColorOptions::PutRefTextColor ( struct _RGBColor * _arg1 ) {
    _com_dispatch_method(this, 0x50473832, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1541)
inline Photoshop::_RGBColorPtr Photoshop::_GalleryCustomColorOptions::GetActiveLinkColor ( ) {
    struct _RGBColor * _result = 0;
    _com_dispatch_method(this, 0x50473833, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _RGBColorPtr(_result, false);
}

#pragma implementation_key(1542)
inline void Photoshop::_GalleryCustomColorOptions::PutActiveLinkColor ( struct _RGBColor * _arg1 ) {
    _com_dispatch_method(this, 0x50473833, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1543)
inline void Photoshop::_GalleryCustomColorOptions::PutRefActiveLinkColor ( struct _RGBColor * _arg1 ) {
    _com_dispatch_method(this, 0x50473833, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1544)
inline Photoshop::_RGBColorPtr Photoshop::_GalleryCustomColorOptions::GetLinkColor ( ) {
    struct _RGBColor * _result = 0;
    _com_dispatch_method(this, 0x50473834, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _RGBColorPtr(_result, false);
}

#pragma implementation_key(1545)
inline void Photoshop::_GalleryCustomColorOptions::PutLinkColor ( struct _RGBColor * _arg1 ) {
    _com_dispatch_method(this, 0x50473834, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1546)
inline void Photoshop::_GalleryCustomColorOptions::PutRefLinkColor ( struct _RGBColor * _arg1 ) {
    _com_dispatch_method(this, 0x50473834, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1547)
inline Photoshop::_RGBColorPtr Photoshop::_GalleryCustomColorOptions::GetVisitedLinkColor ( ) {
    struct _RGBColor * _result = 0;
    _com_dispatch_method(this, 0x50473835, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _RGBColorPtr(_result, false);
}

#pragma implementation_key(1548)
inline void Photoshop::_GalleryCustomColorOptions::PutVisitedLinkColor ( struct _RGBColor * _arg1 ) {
    _com_dispatch_method(this, 0x50473835, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1549)
inline void Photoshop::_GalleryCustomColorOptions::PutRefVisitedLinkColor ( struct _RGBColor * _arg1 ) {
    _com_dispatch_method(this, 0x50473835, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1550)
inline Photoshop::_ApplicationPtr Photoshop::_GalleryCustomColorOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1551)
inline void Photoshop::_GalleryCustomColorOptions::PutObjectValue ( struct _GalleryCustomColorOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1552)
inline void Photoshop::_GalleryCustomColorOptions::PutRefObjectValue ( struct _GalleryCustomColorOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _GallerySecurityOptions wrapper method implementations
//

#pragma implementation_key(1553)
inline enum Photoshop::PsGallerySecurityType Photoshop::_GallerySecurityOptions::GetContent ( ) {
    enum PsGallerySecurityType _result;
    _com_dispatch_method(this, 0x50473836, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1554)
inline void Photoshop::_GallerySecurityOptions::PutContent ( enum PsGallerySecurityType _arg1 ) {
    _com_dispatch_method(this, 0x50473836, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1555)
inline _bstr_t Photoshop::_GallerySecurityOptions::GetText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x50473837, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1556)
inline void Photoshop::_GallerySecurityOptions::PutText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x50473837, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1557)
inline enum Photoshop::PsGalleryFontType Photoshop::_GallerySecurityOptions::GetFont ( ) {
    enum PsGalleryFontType _result;
    _com_dispatch_method(this, 0x63466e74, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1558)
inline void Photoshop::_GallerySecurityOptions::PutFont ( enum PsGalleryFontType _arg1 ) {
    _com_dispatch_method(this, 0x63466e74, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1559)
inline long Photoshop::_GallerySecurityOptions::GetFontSize ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50473734, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1560)
inline void Photoshop::_GallerySecurityOptions::PutFontSize ( long _arg1 ) {
    _com_dispatch_method(this, 0x50473734, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1561)
inline Photoshop::_RGBColorPtr Photoshop::_GallerySecurityOptions::GetTextColor ( ) {
    struct _RGBColor * _result = 0;
    _com_dispatch_method(this, 0x50473832, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _RGBColorPtr(_result, false);
}

#pragma implementation_key(1562)
inline void Photoshop::_GallerySecurityOptions::PutTextColor ( struct _RGBColor * _arg1 ) {
    _com_dispatch_method(this, 0x50473832, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1563)
inline void Photoshop::_GallerySecurityOptions::PutRefTextColor ( struct _RGBColor * _arg1 ) {
    _com_dispatch_method(this, 0x50473832, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1564)
inline long Photoshop::_GallerySecurityOptions::GetOpacity ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4f706374, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1565)
inline void Photoshop::_GallerySecurityOptions::PutOpacity ( long _arg1 ) {
    _com_dispatch_method(this, 0x4f706374, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1566)
inline enum Photoshop::PsGallerySecurityTextPositionType Photoshop::_GallerySecurityOptions::GetTextPosition ( ) {
    enum PsGallerySecurityTextPositionType _result;
    _com_dispatch_method(this, 0x50473933, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1567)
inline void Photoshop::_GallerySecurityOptions::PutTextPosition ( enum PsGallerySecurityTextPositionType _arg1 ) {
    _com_dispatch_method(this, 0x50473933, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1568)
inline enum Photoshop::PsGallerySecurityTextRotateType Photoshop::_GallerySecurityOptions::GetTextRotate ( ) {
    enum PsGallerySecurityTextRotateType _result;
    _com_dispatch_method(this, 0x50473934, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1569)
inline void Photoshop::_GallerySecurityOptions::PutTextRotate ( enum PsGallerySecurityTextRotateType _arg1 ) {
    _com_dispatch_method(this, 0x50473934, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1570)
inline Photoshop::_ApplicationPtr Photoshop::_GallerySecurityOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1571)
inline void Photoshop::_GallerySecurityOptions::PutObjectValue ( struct _GallerySecurityOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1572)
inline void Photoshop::_GallerySecurityOptions::PutRefObjectValue ( struct _GallerySecurityOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _ContactSheetOptions wrapper method implementations
//

#pragma implementation_key(1573)
inline long Photoshop::_ContactSheetOptions::GetWidth ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x57647468, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1574)
inline void Photoshop::_ContactSheetOptions::PutWidth ( long _arg1 ) {
    _com_dispatch_method(this, 0x57647468, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1575)
inline long Photoshop::_ContactSheetOptions::GetHeight ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x48676874, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1576)
inline void Photoshop::_ContactSheetOptions::PutHeight ( long _arg1 ) {
    _com_dispatch_method(this, 0x48676874, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1577)
inline double Photoshop::_ContactSheetOptions::GetResolution ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x5265734c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1578)
inline void Photoshop::_ContactSheetOptions::PutResolution ( double _arg1 ) {
    _com_dispatch_method(this, 0x5265734c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1579)
inline enum Photoshop::PsNewDocumentMode Photoshop::_ContactSheetOptions::GetMode ( ) {
    enum PsNewDocumentMode _result;
    _com_dispatch_method(this, 0x4f4d6465, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1580)
inline void Photoshop::_ContactSheetOptions::PutMode ( enum PsNewDocumentMode _arg1 ) {
    _com_dispatch_method(this, 0x4f4d6465, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1581)
inline VARIANT_BOOL Photoshop::_ContactSheetOptions::GetFlatten ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x43533034, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1582)
inline void Photoshop::_ContactSheetOptions::PutFlatten ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x43533034, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1583)
inline VARIANT_BOOL Photoshop::_ContactSheetOptions::GetAcrossFirst ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x43533032, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1584)
inline void Photoshop::_ContactSheetOptions::PutAcrossFirst ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x43533032, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1585)
inline VARIANT_BOOL Photoshop::_ContactSheetOptions::GetUseAutoSpacing ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x43533033, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1586)
inline void Photoshop::_ContactSheetOptions::PutUseAutoSpacing ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x43533033, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1587)
inline long Photoshop::_ContactSheetOptions::GetColumnCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50473737, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1588)
inline void Photoshop::_ContactSheetOptions::PutColumnCount ( long _arg1 ) {
    _com_dispatch_method(this, 0x50473737, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1589)
inline long Photoshop::_ContactSheetOptions::GetRowCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50473738, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1590)
inline void Photoshop::_ContactSheetOptions::PutRowCount ( long _arg1 ) {
    _com_dispatch_method(this, 0x50473738, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1591)
inline long Photoshop::_ContactSheetOptions::GetVertical ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x56744f7a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1592)
inline void Photoshop::_ContactSheetOptions::PutVertical ( long _arg1 ) {
    _com_dispatch_method(this, 0x56744f7a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1593)
inline long Photoshop::_ContactSheetOptions::GetHorizontal ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x48724f7a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1594)
inline void Photoshop::_ContactSheetOptions::PutHorizontal ( long _arg1 ) {
    _com_dispatch_method(this, 0x48724f7a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1595)
inline VARIANT_BOOL Photoshop::_ContactSheetOptions::GetBestFit ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x43533035, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1596)
inline void Photoshop::_ContactSheetOptions::PutBestFit ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x43533035, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1597)
inline VARIANT_BOOL Photoshop::_ContactSheetOptions::GetCaption ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x44693031, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1598)
inline void Photoshop::_ContactSheetOptions::PutCaption ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x44693031, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1599)
inline enum Photoshop::PsGalleryFontType Photoshop::_ContactSheetOptions::GetFont ( ) {
    enum PsGalleryFontType _result;
    _com_dispatch_method(this, 0x63466e74, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1600)
inline void Photoshop::_ContactSheetOptions::PutFont ( enum PsGalleryFontType _arg1 ) {
    _com_dispatch_method(this, 0x63466e74, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1601)
inline long Photoshop::_ContactSheetOptions::GetFontSize ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50473734, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1602)
inline void Photoshop::_ContactSheetOptions::PutFontSize ( long _arg1 ) {
    _com_dispatch_method(this, 0x50473734, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1603)
inline Photoshop::_ApplicationPtr Photoshop::_ContactSheetOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1604)
inline void Photoshop::_ContactSheetOptions::PutObjectValue ( struct _ContactSheetOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1605)
inline void Photoshop::_ContactSheetOptions::PutRefObjectValue ( struct _ContactSheetOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _PicturePackageOptions wrapper method implementations
//

#pragma implementation_key(1606)
inline _bstr_t Photoshop::_PicturePackageOptions::GetLayout ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x50503130, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1607)
inline void Photoshop::_PicturePackageOptions::PutLayout ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x50503130, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1608)
inline double Photoshop::_PicturePackageOptions::GetResolution ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x5265734c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1609)
inline void Photoshop::_PicturePackageOptions::PutResolution ( double _arg1 ) {
    _com_dispatch_method(this, 0x5265734c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1610)
inline enum Photoshop::PsNewDocumentMode Photoshop::_PicturePackageOptions::GetMode ( ) {
    enum PsNewDocumentMode _result;
    _com_dispatch_method(this, 0x4f4d6465, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1611)
inline void Photoshop::_PicturePackageOptions::PutMode ( enum PsNewDocumentMode _arg1 ) {
    _com_dispatch_method(this, 0x4f4d6465, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1612)
inline VARIANT_BOOL Photoshop::_PicturePackageOptions::GetFlatten ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x43533034, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1613)
inline void Photoshop::_PicturePackageOptions::PutFlatten ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x43533034, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1614)
inline enum Photoshop::PsPicturePackageTextType Photoshop::_PicturePackageOptions::GetContent ( ) {
    enum PsPicturePackageTextType _result;
    _com_dispatch_method(this, 0x50473836, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1615)
inline void Photoshop::_PicturePackageOptions::PutContent ( enum PsPicturePackageTextType _arg1 ) {
    _com_dispatch_method(this, 0x50473836, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1616)
inline _bstr_t Photoshop::_PicturePackageOptions::GetText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x50473837, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1617)
inline void Photoshop::_PicturePackageOptions::PutText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x50473837, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1618)
inline enum Photoshop::PsGalleryFontType Photoshop::_PicturePackageOptions::GetFont ( ) {
    enum PsGalleryFontType _result;
    _com_dispatch_method(this, 0x63466e74, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1619)
inline void Photoshop::_PicturePackageOptions::PutFont ( enum PsGalleryFontType _arg1 ) {
    _com_dispatch_method(this, 0x63466e74, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1620)
inline long Photoshop::_PicturePackageOptions::GetFontSize ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50473734, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1621)
inline void Photoshop::_PicturePackageOptions::PutFontSize ( long _arg1 ) {
    _com_dispatch_method(this, 0x50473734, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1622)
inline long Photoshop::_PicturePackageOptions::GetOpacity ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4f706374, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1623)
inline void Photoshop::_PicturePackageOptions::PutOpacity ( long _arg1 ) {
    _com_dispatch_method(this, 0x4f706374, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1624)
inline Photoshop::_RGBColorPtr Photoshop::_PicturePackageOptions::GetTextColor ( ) {
    struct _RGBColor * _result = 0;
    _com_dispatch_method(this, 0x50473832, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _RGBColorPtr(_result, false);
}

#pragma implementation_key(1625)
inline void Photoshop::_PicturePackageOptions::PutTextColor ( struct _RGBColor * _arg1 ) {
    _com_dispatch_method(this, 0x50473832, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1626)
inline void Photoshop::_PicturePackageOptions::PutRefTextColor ( struct _RGBColor * _arg1 ) {
    _com_dispatch_method(this, 0x50473832, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1627)
inline enum Photoshop::PsGallerySecurityTextPositionType Photoshop::_PicturePackageOptions::GetTextPosition ( ) {
    enum PsGallerySecurityTextPositionType _result;
    _com_dispatch_method(this, 0x50473933, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1628)
inline void Photoshop::_PicturePackageOptions::PutTextPosition ( enum PsGallerySecurityTextPositionType _arg1 ) {
    _com_dispatch_method(this, 0x50473933, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1629)
inline enum Photoshop::PsGallerySecurityTextRotateType Photoshop::_PicturePackageOptions::GetTextRotate ( ) {
    enum PsGallerySecurityTextRotateType _result;
    _com_dispatch_method(this, 0x50473934, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1630)
inline void Photoshop::_PicturePackageOptions::PutTextRotate ( enum PsGallerySecurityTextRotateType _arg1 ) {
    _com_dispatch_method(this, 0x50473934, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1631)
inline Photoshop::_ApplicationPtr Photoshop::_PicturePackageOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1632)
inline void Photoshop::_PicturePackageOptions::PutObjectValue ( struct _PicturePackageOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1633)
inline void Photoshop::_PicturePackageOptions::PutRefObjectValue ( struct _PicturePackageOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _BatchOptions wrapper method implementations
//

#pragma implementation_key(1634)
inline VARIANT_BOOL Photoshop::_BatchOptions::GetOverrideOpen ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x42543033, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1635)
inline void Photoshop::_BatchOptions::PutOverrideOpen ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x42543033, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1636)
inline VARIANT_BOOL Photoshop::_BatchOptions::GetSuppressOpen ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x42543034, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1637)
inline void Photoshop::_BatchOptions::PutSuppressOpen ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x42543034, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1638)
inline VARIANT_BOOL Photoshop::_BatchOptions::GetSuppressProfile ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x42543035, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1639)
inline void Photoshop::_BatchOptions::PutSuppressProfile ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x42543035, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1640)
inline enum Photoshop::PsBatchDestinationType Photoshop::_BatchOptions::GetDestination ( ) {
    enum PsBatchDestinationType _result;
    _com_dispatch_method(this, 0x42543036, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1641)
inline void Photoshop::_BatchOptions::PutDestination ( enum PsBatchDestinationType _arg1 ) {
    _com_dispatch_method(this, 0x42543036, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1642)
inline _bstr_t Photoshop::_BatchOptions::GetDestinationFolder ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x42543337, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1643)
inline void Photoshop::_BatchOptions::PutDestinationFolder ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x42543337, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1644)
inline VARIANT_BOOL Photoshop::_BatchOptions::GetOverrideSave ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x42543037, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1645)
inline void Photoshop::_BatchOptions::PutOverrideSave ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x42543037, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1646)
inline _variant_t Photoshop::_BatchOptions::GetFileNaming ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x42543038, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1647)
inline void Photoshop::_BatchOptions::PutFileNaming ( const _variant_t & _arg1 ) {
    _com_dispatch_method(this, 0x42543038, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000c", &_arg1);
}

#pragma implementation_key(1648)
inline long Photoshop::_BatchOptions::GetStartingSerial ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x42543039, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1649)
inline void Photoshop::_BatchOptions::PutStartingSerial ( long _arg1 ) {
    _com_dispatch_method(this, 0x42543039, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1650)
inline VARIANT_BOOL Photoshop::_BatchOptions::GetWindowsCompatible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x42543130, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1651)
inline void Photoshop::_BatchOptions::PutWindowsCompatible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x42543130, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1652)
inline VARIANT_BOOL Photoshop::_BatchOptions::GetMacintoshCompatible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x42543131, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1653)
inline void Photoshop::_BatchOptions::PutMacintoshCompatible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x42543131, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1654)
inline VARIANT_BOOL Photoshop::_BatchOptions::GetUnixCompatible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x42543132, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1655)
inline void Photoshop::_BatchOptions::PutUnixCompatible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x42543132, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1656)
inline _bstr_t Photoshop::_BatchOptions::GetErrorFile ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x42543133, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1657)
inline void Photoshop::_BatchOptions::PutErrorFile ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x42543133, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1658)
inline Photoshop::_ApplicationPtr Photoshop::_BatchOptions::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1659)
inline void Photoshop::_BatchOptions::PutObjectValue ( struct _BatchOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1660)
inline void Photoshop::_BatchOptions::PutRefObjectValue ( struct _BatchOptions * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _SubPathInfo wrapper method implementations
//

#pragma implementation_key(1661)
inline enum Photoshop::PsShapeOperation Photoshop::_SubPathInfo::GetOperation ( ) {
    enum PsShapeOperation _result;
    _com_dispatch_method(this, 0x50543037, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1662)
inline void Photoshop::_SubPathInfo::PutOperation ( enum PsShapeOperation _arg1 ) {
    _com_dispatch_method(this, 0x50543037, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1663)
inline VARIANT_BOOL Photoshop::_SubPathInfo::GetClosed ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50543530, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1664)
inline void Photoshop::_SubPathInfo::PutClosed ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50543530, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1665)
inline _variant_t Photoshop::_SubPathInfo::GetEntireSubPath ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x50543536, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1666)
inline void Photoshop::_SubPathInfo::PutEntireSubPath ( const _variant_t & _arg1 ) {
    _com_dispatch_method(this, 0x50543536, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000c", &_arg1);
}

#pragma implementation_key(1667)
inline Photoshop::_ApplicationPtr Photoshop::_SubPathInfo::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1668)
inline void Photoshop::_SubPathInfo::PutObjectValue ( struct _SubPathInfo * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1669)
inline void Photoshop::_SubPathInfo::PutRefObjectValue ( struct _SubPathInfo * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface _PathPointInfo wrapper method implementations
//

#pragma implementation_key(1670)
inline _variant_t Photoshop::_PathPointInfo::GetAnchor ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x50543138, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1671)
inline void Photoshop::_PathPointInfo::PutAnchor ( const _variant_t & _arg1 ) {
    _com_dispatch_method(this, 0x50543138, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000c", &_arg1);
}

#pragma implementation_key(1672)
inline _variant_t Photoshop::_PathPointInfo::GetLeftDirection ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x50543139, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1673)
inline void Photoshop::_PathPointInfo::PutLeftDirection ( const _variant_t & _arg1 ) {
    _com_dispatch_method(this, 0x50543139, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000c", &_arg1);
}

#pragma implementation_key(1674)
inline _variant_t Photoshop::_PathPointInfo::GetRightDirection ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x50543230, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1675)
inline void Photoshop::_PathPointInfo::PutRightDirection ( const _variant_t & _arg1 ) {
    _com_dispatch_method(this, 0x50543230, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000c", &_arg1);
}

#pragma implementation_key(1676)
inline enum Photoshop::PsPointKind Photoshop::_PathPointInfo::GetKind ( ) {
    enum PsPointKind _result;
    _com_dispatch_method(this, 0x4b696e64, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1677)
inline void Photoshop::_PathPointInfo::PutKind ( enum PsPointKind _arg1 ) {
    _com_dispatch_method(this, 0x4b696e64, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1678)
inline Photoshop::_ApplicationPtr Photoshop::_PathPointInfo::GetApplication ( ) {
    struct _Application * _result = 0;
    _com_dispatch_method(this, 0x63617070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1679)
inline void Photoshop::_PathPointInfo::PutObjectValue ( struct _PathPointInfo * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1680)
inline void Photoshop::_PathPointInfo::PutRefObjectValue ( struct _PathPointInfo * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}
